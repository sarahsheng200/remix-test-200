{
	"id": "b751df1069cb4db7b92e2f011607acd1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyToken is ERC20, Ownable {\n\n    struct Stake {\n        uint256 amount;          // 质押数量\n        uint256 startTime;       // 质押开始时间\n        uint256 endTime;         // 质押结束时间\n        uint256 rewardRate;      // 收益率（根据期限计算）\n        bool isActive;           // 订单是否有效\n    }\n\n    struct timeMapping {\n        uint256 periodDays;\n        uint256 time;\n    }\n\n    enum StakingPeriod { \n        ThirtyDays,\n        NinetyDays, \n        HundredEightyDays, \n        OneYear\n    }\n\n    mapping(StakingPeriod => uint256) public apy; // 年化收益率（百分比，如20表示20%）\n    mapping(address => mapping(uint256=>Stake)) public userStakes; // 用户的所有质押订单\n\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        StakingPeriod period,\n        uint256 timestamp,\n        uint256 stakeIndex\n    );\n\n    event Withdrawn(\n        address indexed user,\n        uint256 totalAmount,\n        uint256 stakeIndex\n    );\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) ERC20(name, symbol) Ownable(msg.sender)  { // 关键修改：将name和symbol传递给ERC20构造函数\n        _mint(msg.sender, initialSupply * 10 ** decimals());\n        apy[StakingPeriod.ThirtyDays] = 10;   // 10% 年化\n        apy[StakingPeriod.NinetyDays] = 15;   // 15% 年化\n        apy[StakingPeriod.HundredEightyDays] = 20;      // 20% 年化\n        apy[StakingPeriod.OneYear] = 25;      // 20% 年化\n    }\n\n    // 可选：添加增发功能（仅所有者可调用）\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function stake(uint256 amount, StakingPeriod period) external {\n        require(amount>0, \"Amount should be positive\");\n        require(balanceOf(msg.sender)>=amount, \"Insufficient balance\");\n\n        timeMapping memory durMapping = _getDuration(period);\n        uint256 dur=durMapping.time;\n        uint256 periodDays=durMapping.periodDays;\n        uint256 startT=block.timestamp;\n        uint256 endT= startT + dur;\n        uint256 index=amount+endT;      \n\n        emit Staked(msg.sender, amount, period, endT,index);\n\n        userStakes[msg.sender][index]=Stake({\n            amount:amount,\n            startTime:startT,\n            endTime:endT,         // 质押结束时间\n            rewardRate:apy[period]*periodDays*10**18/360,     // 收益率（根据期限计算）\n            isActive:true           // 订单是否有效\n        });\n    }\n\n    // 内部函数：根据期限返回秒数\n    function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {\n\n        if(period==StakingPeriod.ThirtyDays){\n            return timeMapping({\n                periodDays:30,\n                time:1 minutes\n            });\n        }else if(period==StakingPeriod.NinetyDays){\n            return timeMapping({\n                periodDays:90,\n                time:3 minutes\n            });\n        }else if(period==StakingPeriod.HundredEightyDays){\n            return timeMapping({\n                periodDays:180,\n                time:5 minutes\n            });\n        }else if(period==StakingPeriod.OneYear){\n            return timeMapping({\n                periodDays:360,\n                time:10 minutes\n            });\n        }else{\n            return timeMapping({\n                periodDays:360,\n                time:1 hours\n            });\n        }\n\n    }\n\n    function withdraw(uint256 stakeIndex) external {\n        Stake storage s = userStakes[msg.sender][stakeIndex];\n        require(s.isActive, \"Stake is not active or already withdrawn\");\n        require(block.timestamp >= s.endTime, \"Stake period is not ended\");\n        uint256 reward=s.amount*s.rewardRate/100/10** 18;\n        uint256 totalAmount=s.amount+reward;\n        s.isActive=false;\n\n        emit Withdrawn(msg.sender,totalAmount,stakeIndex);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum MyToken.StakingPeriod",
									"name": "period",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum MyToken.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "enum MyToken.StakingPeriod",
									"name": "period",
									"type": "uint8"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":167:4146  contract MyToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":1198:1725  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyToken.sol\":1333:1343  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":1311:1315  name */\n  dup4\n    /* \"contracts/MyToken.sol\":1317:1323  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyToken.sol\":1417:1468  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/MyToken.sol\":1423:1433  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":1457:1467  decimals() */\n  tag_19\n    /* \"contracts/MyToken.sol\":1457:1465  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/MyToken.sol\":1457:1467  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/MyToken.sol\":1451:1453  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":1451:1467  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/MyToken.sol\":1435:1448  initialSupply */\n  dup4\n    /* \"contracts/MyToken.sol\":1435:1467  initialSupply * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/MyToken.sol\":1417:1422  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/MyToken.sol\":1417:1468  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/MyToken.sol\":1510:1512  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":1478:1481  apy */\n  0x06\n    /* \"contracts/MyToken.sol\":1478:1507  apy[StakingPeriod.ThirtyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1482:1506  StakingPeriod.ThirtyDays */\n  0x00\n    /* \"contracts/MyToken.sol\":1478:1507  apy[StakingPeriod.ThirtyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\ntag_26:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_28\n  jump\t// in\ntag_30:\ntag_29:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1478:1512  apy[StakingPeriod.ThirtyDays] = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1570:1572  15 */\n  0x0f\n    /* \"contracts/MyToken.sol\":1538:1541  apy */\n  0x06\n    /* \"contracts/MyToken.sol\":1538:1567  apy[StakingPeriod.NinetyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1542:1566  StakingPeriod.NinetyDays */\n  0x01\n    /* \"contracts/MyToken.sol\":1538:1567  apy[StakingPeriod.NinetyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_28\n  jump\t// in\ntag_32:\ntag_31:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_34\n  tag_28\n  jump\t// in\ntag_34:\ntag_33:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1538:1572  apy[StakingPeriod.NinetyDays] = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1637:1639  20 */\n  0x14\n    /* \"contracts/MyToken.sol\":1598:1601  apy */\n  0x06\n    /* \"contracts/MyToken.sol\":1598:1634  apy[StakingPeriod.HundredEightyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1602:1633  StakingPeriod.HundredEightyDays */\n  0x02\n    /* \"contracts/MyToken.sol\":1598:1634  apy[StakingPeriod.HundredEightyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  tag_36\n  tag_28\n  jump\t// in\ntag_36:\ntag_35:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  tag_38\n  tag_28\n  jump\t// in\ntag_38:\ntag_37:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1598:1639  apy[StakingPeriod.HundredEightyDays] = 20 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1697:1699  25 */\n  0x19\n    /* \"contracts/MyToken.sol\":1668:1671  apy */\n  0x06\n    /* \"contracts/MyToken.sol\":1668:1694  apy[StakingPeriod.OneYear] */\n  0x00\n    /* \"contracts/MyToken.sol\":1672:1693  StakingPeriod.OneYear */\n  0x03\n    /* \"contracts/MyToken.sol\":1668:1694  apy[StakingPeriod.OneYear] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  tag_40\n  tag_28\n  jump\t// in\ntag_40:\ntag_39:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_41\n  jumpi\n  tag_42\n  tag_28\n  jump\t// in\ntag_42:\ntag_41:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1668:1699  apy[StakingPeriod.OneYear] = 25 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1198:1725  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":167:4146  contract MyToken is ERC20, Ownable {... */\n  jump(tag_43)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_48\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_49\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_50)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_55)\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_57\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_60)\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_61\n  swap2\n  swap1\n  tag_62\n  jump\t// in\ntag_61:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_63:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_64:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_65:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_66:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_67:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_68:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_69:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_70:\n    /* \"#utility.yul\":957:984   */\n  tag_115\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_68\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_117\n  tag_69\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1030:1118   */\ntag_116:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_71:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_119\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_120\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_70\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_72:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_123\n  tag_69\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1434:1490   */\ntag_122:\n    /* \"#utility.yul\":1508:1537   */\n  tag_124\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_68\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_73:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_74:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_127\n    /* \"#utility.yul\":1885:1934   */\n  tag_128\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_72\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":1869:1935   */\n  tag_71\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_130\n  tag_67\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2010:2122   */\ntag_129:\n    /* \"#utility.yul\":2131:2183   */\n  tag_131\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_73\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_75:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_134\n  tag_66\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2292:2414   */\ntag_133:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_135\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_74\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_76:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_77:\n    /* \"#utility.yul\":2726:2750   */\n  tag_138\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_76\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  0x00\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_139:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_78:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_141\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_77\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3939   */\ntag_3:\n    /* \"#utility.yul\":3038:3044   */\n  0x00\n    /* \"#utility.yul\":3046:3052   */\n  0x00\n    /* \"#utility.yul\":3054:3060   */\n  0x00\n    /* \"#utility.yul\":3103:3105   */\n  0x60\n    /* \"#utility.yul\":3091:3100   */\n  dup5\n    /* \"#utility.yul\":3082:3089   */\n  dup7\n    /* \"#utility.yul\":3078:3101   */\n  sub\n    /* \"#utility.yul\":3074:3106   */\n  slt\n    /* \"#utility.yul\":3071:3190   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":3109:3188   */\n  tag_144\n  tag_64\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3071:3190   */\ntag_143:\n    /* \"#utility.yul\":3250:3251   */\n  0x00\n    /* \"#utility.yul\":3239:3248   */\n  dup5\n    /* \"#utility.yul\":3235:3252   */\n  add\n    /* \"#utility.yul\":3229:3253   */\n  mload\n    /* \"#utility.yul\":3280:3298   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3272:3278   */\n  dup2\n    /* \"#utility.yul\":3269:3299   */\n  gt\n    /* \"#utility.yul\":3266:3383   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":3302:3381   */\n  tag_146\n  tag_65\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3266:3383   */\ntag_145:\n    /* \"#utility.yul\":3407:3481   */\n  tag_147\n    /* \"#utility.yul\":3473:3480   */\n  dup7\n    /* \"#utility.yul\":3464:3470   */\n  dup3\n    /* \"#utility.yul\":3453:3462   */\n  dup8\n    /* \"#utility.yul\":3449:3471   */\n  add\n    /* \"#utility.yul\":3407:3481   */\n  tag_75\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3397:3481   */\n  swap4\n  pop\n    /* \"#utility.yul\":3200:3491   */\n  pop\n    /* \"#utility.yul\":3551:3553   */\n  0x20\n    /* \"#utility.yul\":3540:3549   */\n  dup5\n    /* \"#utility.yul\":3536:3554   */\n  add\n    /* \"#utility.yul\":3530:3555   */\n  mload\n    /* \"#utility.yul\":3582:3600   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3574:3580   */\n  dup2\n    /* \"#utility.yul\":3571:3601   */\n  gt\n    /* \"#utility.yul\":3568:3685   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":3604:3683   */\n  tag_149\n  tag_65\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3568:3685   */\ntag_148:\n    /* \"#utility.yul\":3709:3783   */\n  tag_150\n    /* \"#utility.yul\":3775:3782   */\n  dup7\n    /* \"#utility.yul\":3766:3772   */\n  dup3\n    /* \"#utility.yul\":3755:3764   */\n  dup8\n    /* \"#utility.yul\":3751:3773   */\n  add\n    /* \"#utility.yul\":3709:3783   */\n  tag_75\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3699:3783   */\n  swap3\n  pop\n    /* \"#utility.yul\":3501:3793   */\n  pop\n    /* \"#utility.yul\":3832:3834   */\n  0x40\n    /* \"#utility.yul\":3858:3922   */\n  tag_151\n    /* \"#utility.yul\":3914:3921   */\n  dup7\n    /* \"#utility.yul\":3905:3911   */\n  dup3\n    /* \"#utility.yul\":3894:3903   */\n  dup8\n    /* \"#utility.yul\":3890:3912   */\n  add\n    /* \"#utility.yul\":3858:3922   */\n  tag_78\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3848:3922   */\n  swap2\n  pop\n    /* \"#utility.yul\":3803:3932   */\n  pop\n    /* \"#utility.yul\":2930:3939   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3945:4044   */\ntag_79:\n    /* \"#utility.yul\":3997:4003   */\n  0x00\n    /* \"#utility.yul\":4031:4036   */\n  dup2\n    /* \"#utility.yul\":4025:4037   */\n  mload\n    /* \"#utility.yul\":4015:4037   */\n  swap1\n  pop\n    /* \"#utility.yul\":3945:4044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4050:4230   */\ntag_80:\n    /* \"#utility.yul\":4098:4175   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4095:4096   */\n  0x00\n    /* \"#utility.yul\":4088:4176   */\n  mstore\n    /* \"#utility.yul\":4195:4199   */\n  0x22\n    /* \"#utility.yul\":4192:4193   */\n  0x04\n    /* \"#utility.yul\":4185:4200   */\n  mstore\n    /* \"#utility.yul\":4219:4223   */\n  0x24\n    /* \"#utility.yul\":4216:4217   */\n  0x00\n    /* \"#utility.yul\":4209:4224   */\n  revert\n    /* \"#utility.yul\":4236:4556   */\ntag_81:\n    /* \"#utility.yul\":4280:4286   */\n  0x00\n    /* \"#utility.yul\":4317:4318   */\n  0x02\n    /* \"#utility.yul\":4311:4315   */\n  dup3\n    /* \"#utility.yul\":4307:4319   */\n  div\n    /* \"#utility.yul\":4297:4319   */\n  swap1\n  pop\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4358:4362   */\n  dup3\n    /* \"#utility.yul\":4354:4366   */\n  and\n    /* \"#utility.yul\":4385:4403   */\n  dup1\n    /* \"#utility.yul\":4375:4456   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":4441:4445   */\n  0x7f\n    /* \"#utility.yul\":4433:4439   */\n  dup3\n    /* \"#utility.yul\":4429:4446   */\n  and\n    /* \"#utility.yul\":4419:4446   */\n  swap2\n  pop\n    /* \"#utility.yul\":4375:4456   */\ntag_155:\n    /* \"#utility.yul\":4503:4505   */\n  0x20\n    /* \"#utility.yul\":4495:4501   */\n  dup3\n    /* \"#utility.yul\":4492:4506   */\n  lt\n    /* \"#utility.yul\":4472:4490   */\n  dup2\n    /* \"#utility.yul\":4469:4507   */\n  sub\n    /* \"#utility.yul\":4466:4550   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4522:4540   */\n  tag_157\n  tag_80\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4466:4550   */\ntag_156:\n    /* \"#utility.yul\":4287:4556   */\n  pop\n    /* \"#utility.yul\":4236:4556   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4562:4703   */\ntag_82:\n    /* \"#utility.yul\":4611:4615   */\n  0x00\n    /* \"#utility.yul\":4634:4637   */\n  dup2\n    /* \"#utility.yul\":4626:4637   */\n  swap1\n  pop\n    /* \"#utility.yul\":4657:4660   */\n  dup2\n    /* \"#utility.yul\":4654:4655   */\n  0x00\n    /* \"#utility.yul\":4647:4661   */\n  mstore\n    /* \"#utility.yul\":4691:4695   */\n  0x20\n    /* \"#utility.yul\":4688:4689   */\n  0x00\n    /* \"#utility.yul\":4678:4696   */\n  keccak256\n    /* \"#utility.yul\":4670:4696   */\n  swap1\n  pop\n    /* \"#utility.yul\":4562:4703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4709:4802   */\ntag_83:\n    /* \"#utility.yul\":4746:4752   */\n  0x00\n    /* \"#utility.yul\":4793:4795   */\n  0x20\n    /* \"#utility.yul\":4788:4790   */\n  0x1f\n    /* \"#utility.yul\":4781:4786   */\n  dup4\n    /* \"#utility.yul\":4777:4791   */\n  add\n    /* \"#utility.yul\":4773:4796   */\n  div\n    /* \"#utility.yul\":4763:4796   */\n  swap1\n  pop\n    /* \"#utility.yul\":4709:4802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4808:4915   */\ntag_84:\n    /* \"#utility.yul\":4852:4860   */\n  0x00\n    /* \"#utility.yul\":4902:4907   */\n  dup3\n    /* \"#utility.yul\":4896:4900   */\n  dup3\n    /* \"#utility.yul\":4892:4908   */\n  shl\n    /* \"#utility.yul\":4871:4908   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4921:5314   */\ntag_85:\n    /* \"#utility.yul\":4990:4996   */\n  0x00\n    /* \"#utility.yul\":5040:5041   */\n  0x08\n    /* \"#utility.yul\":5028:5038   */\n  dup4\n    /* \"#utility.yul\":5024:5042   */\n  mul\n    /* \"#utility.yul\":5063:5160   */\n  tag_162\n    /* \"#utility.yul\":5093:5159   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5082:5091   */\n  dup3\n    /* \"#utility.yul\":5063:5160   */\n  tag_84\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5181:5220   */\n  tag_163\n    /* \"#utility.yul\":5211:5219   */\n  dup7\n    /* \"#utility.yul\":5200:5209   */\n  dup4\n    /* \"#utility.yul\":5181:5220   */\n  tag_84\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5169:5220   */\n  swap6\n  pop\n    /* \"#utility.yul\":5253:5257   */\n  dup1\n    /* \"#utility.yul\":5249:5258   */\n  not\n    /* \"#utility.yul\":5242:5247   */\n  dup5\n    /* \"#utility.yul\":5238:5259   */\n  and\n    /* \"#utility.yul\":5229:5259   */\n  swap4\n  pop\n    /* \"#utility.yul\":5302:5306   */\n  dup1\n    /* \"#utility.yul\":5292:5300   */\n  dup7\n    /* \"#utility.yul\":5288:5307   */\n  and\n    /* \"#utility.yul\":5281:5286   */\n  dup5\n    /* \"#utility.yul\":5278:5308   */\n  or\n    /* \"#utility.yul\":5268:5308   */\n  swap3\n  pop\n    /* \"#utility.yul\":4997:5314   */\n  pop\n  pop\n    /* \"#utility.yul\":4921:5314   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5320:5380   */\ntag_86:\n    /* \"#utility.yul\":5348:5351   */\n  0x00\n    /* \"#utility.yul\":5369:5374   */\n  dup2\n    /* \"#utility.yul\":5362:5374   */\n  swap1\n  pop\n    /* \"#utility.yul\":5320:5380   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5386:5528   */\ntag_87:\n    /* \"#utility.yul\":5436:5445   */\n  0x00\n    /* \"#utility.yul\":5469:5522   */\n  tag_166\n    /* \"#utility.yul\":5487:5521   */\n  tag_167\n    /* \"#utility.yul\":5496:5520   */\n  tag_168\n    /* \"#utility.yul\":5514:5519   */\n  dup5\n    /* \"#utility.yul\":5496:5520   */\n  tag_76\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5487:5521   */\n  tag_86\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5469:5522   */\n  tag_76\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5456:5522   */\n  swap1\n  pop\n    /* \"#utility.yul\":5386:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5609   */\ntag_88:\n    /* \"#utility.yul\":5577:5580   */\n  0x00\n    /* \"#utility.yul\":5598:5603   */\n  dup2\n    /* \"#utility.yul\":5591:5603   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5609   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5615:5884   */\ntag_89:\n    /* \"#utility.yul\":5725:5764   */\n  tag_171\n    /* \"#utility.yul\":5756:5763   */\n  dup4\n    /* \"#utility.yul\":5725:5764   */\n  tag_87\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5786:5877   */\n  tag_172\n    /* \"#utility.yul\":5835:5876   */\n  tag_173\n    /* \"#utility.yul\":5859:5875   */\n  dup3\n    /* \"#utility.yul\":5835:5876   */\n  tag_88\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5827:5833   */\n  dup5\n    /* \"#utility.yul\":5820:5824   */\n  dup5\n    /* \"#utility.yul\":5814:5825   */\n  sload\n    /* \"#utility.yul\":5786:5877   */\n  tag_85\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5780:5784   */\n  dup3\n    /* \"#utility.yul\":5773:5878   */\n  sstore\n    /* \"#utility.yul\":5691:5884   */\n  pop\n    /* \"#utility.yul\":5615:5884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5890:5963   */\ntag_90:\n    /* \"#utility.yul\":5935:5938   */\n  0x00\n    /* \"#utility.yul\":5956:5957   */\n  0x00\n    /* \"#utility.yul\":5949:5957   */\n  swap1\n  pop\n    /* \"#utility.yul\":5890:5963   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5969:6158   */\ntag_91:\n    /* \"#utility.yul\":6046:6078   */\n  tag_176\n  tag_90\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6087:6152   */\n  tag_177\n    /* \"#utility.yul\":6145:6151   */\n  dup2\n    /* \"#utility.yul\":6137:6143   */\n  dup5\n    /* \"#utility.yul\":6131:6135   */\n  dup5\n    /* \"#utility.yul\":6087:6152   */\n  tag_89\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6022:6158   */\n  pop\n    /* \"#utility.yul\":5969:6158   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6164:6350   */\ntag_92:\n    /* \"#utility.yul\":6224:6344   */\ntag_179:\n    /* \"#utility.yul\":6241:6244   */\n  dup2\n    /* \"#utility.yul\":6234:6239   */\n  dup2\n    /* \"#utility.yul\":6231:6245   */\n  lt\n    /* \"#utility.yul\":6224:6344   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6295:6334   */\n  tag_182\n    /* \"#utility.yul\":6332:6333   */\n  0x00\n    /* \"#utility.yul\":6325:6330   */\n  dup3\n    /* \"#utility.yul\":6295:6334   */\n  tag_91\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6268:6269   */\n  0x01\n    /* \"#utility.yul\":6261:6266   */\n  dup2\n    /* \"#utility.yul\":6257:6270   */\n  add\n    /* \"#utility.yul\":6248:6270   */\n  swap1\n  pop\n    /* \"#utility.yul\":6224:6344   */\n  jump(tag_179)\ntag_181:\n    /* \"#utility.yul\":6164:6350   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6356:6899   */\ntag_93:\n    /* \"#utility.yul\":6457:6459   */\n  0x1f\n    /* \"#utility.yul\":6452:6455   */\n  dup3\n    /* \"#utility.yul\":6449:6460   */\n  gt\n    /* \"#utility.yul\":6446:6892   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6491:6529   */\n  tag_185\n    /* \"#utility.yul\":6523:6528   */\n  dup2\n    /* \"#utility.yul\":6491:6529   */\n  tag_82\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":6575:6604   */\n  tag_186\n    /* \"#utility.yul\":6593:6603   */\n  dup5\n    /* \"#utility.yul\":6575:6604   */\n  tag_83\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6565:6573   */\n  dup2\n    /* \"#utility.yul\":6561:6605   */\n  add\n    /* \"#utility.yul\":6758:6760   */\n  0x20\n    /* \"#utility.yul\":6746:6756   */\n  dup6\n    /* \"#utility.yul\":6743:6761   */\n  lt\n    /* \"#utility.yul\":6740:6789   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":6779:6787   */\n  dup2\n    /* \"#utility.yul\":6764:6787   */\n  swap1\n  pop\n    /* \"#utility.yul\":6740:6789   */\ntag_187:\n    /* \"#utility.yul\":6802:6882   */\n  tag_188\n    /* \"#utility.yul\":6858:6880   */\n  tag_189\n    /* \"#utility.yul\":6876:6879   */\n  dup6\n    /* \"#utility.yul\":6858:6880   */\n  tag_83\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":6848:6856   */\n  dup4\n    /* \"#utility.yul\":6844:6881   */\n  add\n    /* \"#utility.yul\":6831:6842   */\n  dup3\n    /* \"#utility.yul\":6802:6882   */\n  tag_92\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6461:6892   */\n  pop\n  pop\n    /* \"#utility.yul\":6446:6892   */\ntag_184:\n    /* \"#utility.yul\":6356:6899   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6905:7022   */\ntag_94:\n    /* \"#utility.yul\":6959:6967   */\n  0x00\n    /* \"#utility.yul\":7009:7014   */\n  dup3\n    /* \"#utility.yul\":7003:7007   */\n  dup3\n    /* \"#utility.yul\":6999:7015   */\n  shr\n    /* \"#utility.yul\":6978:7015   */\n  swap1\n  pop\n    /* \"#utility.yul\":6905:7022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7028:7197   */\ntag_95:\n    /* \"#utility.yul\":7072:7078   */\n  0x00\n    /* \"#utility.yul\":7105:7156   */\n  tag_192\n    /* \"#utility.yul\":7153:7154   */\n  0x00\n    /* \"#utility.yul\":7149:7155   */\n  not\n    /* \"#utility.yul\":7141:7146   */\n  dup5\n    /* \"#utility.yul\":7138:7139   */\n  0x08\n    /* \"#utility.yul\":7134:7147   */\n  mul\n    /* \"#utility.yul\":7105:7156   */\n  tag_94\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7101:7157   */\n  not\n    /* \"#utility.yul\":7186:7190   */\n  dup1\n    /* \"#utility.yul\":7180:7184   */\n  dup4\n    /* \"#utility.yul\":7176:7191   */\n  and\n    /* \"#utility.yul\":7166:7191   */\n  swap2\n  pop\n    /* \"#utility.yul\":7079:7197   */\n  pop\n    /* \"#utility.yul\":7028:7197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7202:7497   */\ntag_96:\n    /* \"#utility.yul\":7278:7282   */\n  0x00\n    /* \"#utility.yul\":7424:7453   */\n  tag_194\n    /* \"#utility.yul\":7449:7452   */\n  dup4\n    /* \"#utility.yul\":7443:7447   */\n  dup4\n    /* \"#utility.yul\":7424:7453   */\n  tag_95\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7416:7453   */\n  swap2\n  pop\n    /* \"#utility.yul\":7486:7489   */\n  dup3\n    /* \"#utility.yul\":7483:7484   */\n  0x02\n    /* \"#utility.yul\":7479:7490   */\n  mul\n    /* \"#utility.yul\":7473:7477   */\n  dup3\n    /* \"#utility.yul\":7470:7491   */\n  or\n    /* \"#utility.yul\":7462:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7202:7497   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7502:8897   */\ntag_9:\n    /* \"#utility.yul\":7619:7656   */\n  tag_196\n    /* \"#utility.yul\":7652:7655   */\n  dup3\n    /* \"#utility.yul\":7619:7656   */\n  tag_79\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7721:7739   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7713:7719   */\n  dup2\n    /* \"#utility.yul\":7710:7740   */\n  gt\n    /* \"#utility.yul\":7707:7763   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":7743:7761   */\n  tag_198\n  tag_69\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7707:7763   */\ntag_197:\n    /* \"#utility.yul\":7787:7825   */\n  tag_199\n    /* \"#utility.yul\":7819:7823   */\n  dup3\n    /* \"#utility.yul\":7813:7824   */\n  sload\n    /* \"#utility.yul\":7787:7825   */\n  tag_81\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7872:7939   */\n  tag_200\n    /* \"#utility.yul\":7932:7938   */\n  dup3\n    /* \"#utility.yul\":7924:7930   */\n  dup3\n    /* \"#utility.yul\":7918:7922   */\n  dup6\n    /* \"#utility.yul\":7872:7939   */\n  tag_93\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":7966:7967   */\n  0x00\n    /* \"#utility.yul\":7990:7994   */\n  0x20\n    /* \"#utility.yul\":7977:7994   */\n  swap1\n  pop\n    /* \"#utility.yul\":8022:8024   */\n  0x1f\n    /* \"#utility.yul\":8014:8020   */\n  dup4\n    /* \"#utility.yul\":8011:8025   */\n  gt\n    /* \"#utility.yul\":8039:8040   */\n  0x01\n    /* \"#utility.yul\":8034:8652   */\n  dup2\n  eq\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8696:8697   */\n  0x00\n    /* \"#utility.yul\":8713:8719   */\n  dup5\n    /* \"#utility.yul\":8710:8787   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":8762:8771   */\n  dup3\n    /* \"#utility.yul\":8757:8760   */\n  dup8\n    /* \"#utility.yul\":8753:8772   */\n  add\n    /* \"#utility.yul\":8747:8773   */\n  mload\n    /* \"#utility.yul\":8738:8773   */\n  swap1\n  pop\n    /* \"#utility.yul\":8710:8787   */\ntag_203:\n    /* \"#utility.yul\":8813:8880   */\n  tag_204\n    /* \"#utility.yul\":8873:8879   */\n  dup6\n    /* \"#utility.yul\":8866:8871   */\n  dup3\n    /* \"#utility.yul\":8813:8880   */\n  tag_96\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8807:8811   */\n  dup7\n    /* \"#utility.yul\":8800:8881   */\n  sstore\n    /* \"#utility.yul\":8669:8891   */\n  pop\n    /* \"#utility.yul\":8004:8891   */\n  jump(tag_201)\n    /* \"#utility.yul\":8034:8652   */\ntag_202:\n    /* \"#utility.yul\":8086:8090   */\n  0x1f\n    /* \"#utility.yul\":8082:8091   */\n  not\n    /* \"#utility.yul\":8074:8080   */\n  dup5\n    /* \"#utility.yul\":8070:8092   */\n  and\n    /* \"#utility.yul\":8120:8157   */\n  tag_205\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8120:8157   */\n  tag_82\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8179:8180   */\n  0x00\n    /* \"#utility.yul\":8193:8401   */\ntag_206:\n    /* \"#utility.yul\":8207:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8205   */\n  dup2\n    /* \"#utility.yul\":8201:8215   */\n  lt\n    /* \"#utility.yul\":8193:8401   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8286:8295   */\n  dup5\n    /* \"#utility.yul\":8281:8284   */\n  dup10\n    /* \"#utility.yul\":8277:8296   */\n  add\n    /* \"#utility.yul\":8271:8297   */\n  mload\n    /* \"#utility.yul\":8263:8269   */\n  dup3\n    /* \"#utility.yul\":8256:8298   */\n  sstore\n    /* \"#utility.yul\":8337:8338   */\n  0x01\n    /* \"#utility.yul\":8329:8335   */\n  dup3\n    /* \"#utility.yul\":8325:8339   */\n  add\n    /* \"#utility.yul\":8315:8339   */\n  swap2\n  pop\n    /* \"#utility.yul\":8384:8386   */\n  0x20\n    /* \"#utility.yul\":8373:8382   */\n  dup6\n    /* \"#utility.yul\":8369:8387   */\n  add\n    /* \"#utility.yul\":8356:8387   */\n  swap5\n  pop\n    /* \"#utility.yul\":8230:8234   */\n  0x20\n    /* \"#utility.yul\":8227:8228   */\n  dup2\n    /* \"#utility.yul\":8223:8235   */\n  add\n    /* \"#utility.yul\":8218:8235   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8401   */\n  jump(tag_206)\ntag_208:\n    /* \"#utility.yul\":8429:8435   */\n  dup7\n    /* \"#utility.yul\":8420:8427   */\n  dup4\n    /* \"#utility.yul\":8417:8436   */\n  lt\n    /* \"#utility.yul\":8414:8593   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8487:8496   */\n  dup5\n    /* \"#utility.yul\":8482:8485   */\n  dup10\n    /* \"#utility.yul\":8478:8497   */\n  add\n    /* \"#utility.yul\":8472:8498   */\n  mload\n    /* \"#utility.yul\":8530:8578   */\n  tag_210\n    /* \"#utility.yul\":8572:8576   */\n  0x1f\n    /* \"#utility.yul\":8564:8570   */\n  dup10\n    /* \"#utility.yul\":8560:8577   */\n  and\n    /* \"#utility.yul\":8549:8558   */\n  dup3\n    /* \"#utility.yul\":8530:8578   */\n  tag_95\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8522:8528   */\n  dup4\n    /* \"#utility.yul\":8515:8579   */\n  sstore\n    /* \"#utility.yul\":8437:8593   */\n  pop\n    /* \"#utility.yul\":8414:8593   */\ntag_209:\n    /* \"#utility.yul\":8639:8640   */\n  0x01\n    /* \"#utility.yul\":8635:8636   */\n  0x02\n    /* \"#utility.yul\":8627:8633   */\n  dup9\n    /* \"#utility.yul\":8623:8637   */\n  mul\n    /* \"#utility.yul\":8619:8641   */\n  add\n    /* \"#utility.yul\":8613:8617   */\n  dup9\n    /* \"#utility.yul\":8606:8642   */\n  sstore\n    /* \"#utility.yul\":8041:8652   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8004:8891   */\ntag_201:\n  pop\n    /* \"#utility.yul\":7594:8897   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7502:8897   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8903:9029   */\ntag_97:\n    /* \"#utility.yul\":8940:8947   */\n  0x00\n    /* \"#utility.yul\":8980:9022   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8969:9023   */\n  and\n    /* \"#utility.yul\":8958:9023   */\n  swap1\n  pop\n    /* \"#utility.yul\":8903:9029   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9131   */\ntag_98:\n    /* \"#utility.yul\":9072:9079   */\n  0x00\n    /* \"#utility.yul\":9101:9125   */\n  tag_213\n    /* \"#utility.yul\":9119:9124   */\n  dup3\n    /* \"#utility.yul\":9101:9125   */\n  tag_97\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9090:9125   */\n  swap1\n  pop\n    /* \"#utility.yul\":9035:9131   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9255   */\ntag_99:\n    /* \"#utility.yul\":9224:9248   */\n  tag_215\n    /* \"#utility.yul\":9242:9247   */\n  dup2\n    /* \"#utility.yul\":9224:9248   */\n  tag_98\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9219:9222   */\n  dup3\n    /* \"#utility.yul\":9212:9249   */\n  mstore\n    /* \"#utility.yul\":9137:9255   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9261:9483   */\ntag_14:\n    /* \"#utility.yul\":9354:9358   */\n  0x00\n    /* \"#utility.yul\":9392:9394   */\n  0x20\n    /* \"#utility.yul\":9381:9390   */\n  dup3\n    /* \"#utility.yul\":9377:9395   */\n  add\n    /* \"#utility.yul\":9369:9395   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9476   */\n  tag_217\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9462:9471   */\n  dup4\n    /* \"#utility.yul\":9458:9475   */\n  add\n    /* \"#utility.yul\":9449:9455   */\n  dup5\n    /* \"#utility.yul\":9405:9476   */\n  tag_99\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9261:9483   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9489:9669   */\ntag_100:\n    /* \"#utility.yul\":9537:9614   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9534:9535   */\n  0x00\n    /* \"#utility.yul\":9527:9615   */\n  mstore\n    /* \"#utility.yul\":9634:9638   */\n  0x11\n    /* \"#utility.yul\":9631:9632   */\n  0x04\n    /* \"#utility.yul\":9624:9639   */\n  mstore\n    /* \"#utility.yul\":9658:9662   */\n  0x24\n    /* \"#utility.yul\":9655:9656   */\n  0x00\n    /* \"#utility.yul\":9648:9663   */\n  revert\n    /* \"#utility.yul\":9675:9777   */\ntag_101:\n    /* \"#utility.yul\":9717:9725   */\n  0x00\n    /* \"#utility.yul\":9764:9769   */\n  dup2\n    /* \"#utility.yul\":9761:9762   */\n  0x01\n    /* \"#utility.yul\":9757:9770   */\n  shr\n    /* \"#utility.yul\":9736:9770   */\n  swap1\n  pop\n    /* \"#utility.yul\":9675:9777   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9783:10631   */\ntag_102:\n    /* \"#utility.yul\":9844:9849   */\n  0x00\n    /* \"#utility.yul\":9851:9855   */\n  0x00\n    /* \"#utility.yul\":9875:9881   */\n  dup3\n    /* \"#utility.yul\":9866:9881   */\n  swap2\n  pop\n    /* \"#utility.yul\":9899:9904   */\n  dup4\n    /* \"#utility.yul\":9890:9904   */\n  swap1\n  pop\n    /* \"#utility.yul\":9913:10625   */\ntag_221:\n    /* \"#utility.yul\":9934:9935   */\n  0x01\n    /* \"#utility.yul\":9924:9932   */\n  dup6\n    /* \"#utility.yul\":9921:9936   */\n  gt\n    /* \"#utility.yul\":9913:10625   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":10029:10033   */\n  dup1\n    /* \"#utility.yul\":10024:10027   */\n  dup7\n    /* \"#utility.yul\":10020:10034   */\n  div\n    /* \"#utility.yul\":10014:10018   */\n  dup2\n    /* \"#utility.yul\":10011:10035   */\n  gt\n    /* \"#utility.yul\":10008:10058   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":10038:10056   */\n  tag_225\n  tag_100\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10008:10058   */\ntag_224:\n    /* \"#utility.yul\":10088:10089   */\n  0x01\n    /* \"#utility.yul\":10078:10086   */\n  dup6\n    /* \"#utility.yul\":10074:10090   */\n  and\n    /* \"#utility.yul\":10071:10522   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":10503:10507   */\n  dup1\n    /* \"#utility.yul\":10496:10501   */\n  dup3\n    /* \"#utility.yul\":10492:10508   */\n  mul\n    /* \"#utility.yul\":10483:10508   */\n  swap2\n  pop\n    /* \"#utility.yul\":10071:10522   */\ntag_226:\n    /* \"#utility.yul\":10553:10557   */\n  dup1\n    /* \"#utility.yul\":10547:10551   */\n  dup2\n    /* \"#utility.yul\":10543:10558   */\n  mul\n    /* \"#utility.yul\":10535:10558   */\n  swap1\n  pop\n    /* \"#utility.yul\":10583:10615   */\n  tag_227\n    /* \"#utility.yul\":10606:10614   */\n  dup6\n    /* \"#utility.yul\":10583:10615   */\n  tag_101\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10571:10615   */\n  swap5\n  pop\n    /* \"#utility.yul\":9913:10625   */\n  jump(tag_221)\ntag_223:\n    /* \"#utility.yul\":9783:10631   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10637:11710   */\ntag_103:\n    /* \"#utility.yul\":10691:10696   */\n  0x00\n    /* \"#utility.yul\":10882:10890   */\n  dup3\n    /* \"#utility.yul\":10872:10912   */\n  tag_229\n  jumpi\n    /* \"#utility.yul\":10903:10904   */\n  0x01\n    /* \"#utility.yul\":10894:10904   */\n  swap1\n  pop\n    /* \"#utility.yul\":10905:10910   */\n  jump(tag_228)\n    /* \"#utility.yul\":10872:10912   */\ntag_229:\n    /* \"#utility.yul\":10931:10935   */\n  dup2\n    /* \"#utility.yul\":10921:10957   */\n  tag_230\n  jumpi\n    /* \"#utility.yul\":10948:10949   */\n  0x00\n    /* \"#utility.yul\":10939:10949   */\n  swap1\n  pop\n    /* \"#utility.yul\":10950:10955   */\n  jump(tag_228)\n    /* \"#utility.yul\":10921:10957   */\ntag_230:\n    /* \"#utility.yul\":11017:11021   */\n  dup2\n    /* \"#utility.yul\":11065:11066   */\n  0x01\n    /* \"#utility.yul\":11060:11087   */\n  dup2\n  eq\n  tag_232\n  jumpi\n    /* \"#utility.yul\":11101:11102   */\n  0x02\n    /* \"#utility.yul\":11096:11287   */\n  dup2\n  eq\n  tag_233\n  jumpi\n    /* \"#utility.yul\":11010:11287   */\n  jump(tag_231)\n    /* \"#utility.yul\":11060:11087   */\ntag_232:\n    /* \"#utility.yul\":11078:11079   */\n  0x01\n    /* \"#utility.yul\":11069:11079   */\n  swap2\n  pop\n    /* \"#utility.yul\":11080:11085   */\n  pop\n  jump(tag_228)\n    /* \"#utility.yul\":11096:11287   */\ntag_233:\n    /* \"#utility.yul\":11141:11144   */\n  0xff\n    /* \"#utility.yul\":11131:11139   */\n  dup5\n    /* \"#utility.yul\":11128:11145   */\n  gt\n    /* \"#utility.yul\":11125:11168   */\n  iszero\n  tag_234\n  jumpi\n    /* \"#utility.yul\":11148:11166   */\n  tag_235\n  tag_100\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11125:11168   */\ntag_234:\n    /* \"#utility.yul\":11197:11205   */\n  dup4\n    /* \"#utility.yul\":11194:11195   */\n  0x02\n    /* \"#utility.yul\":11190:11206   */\n  exp\n    /* \"#utility.yul\":11181:11206   */\n  swap2\n  pop\n    /* \"#utility.yul\":11232:11235   */\n  dup5\n    /* \"#utility.yul\":11225:11230   */\n  dup3\n    /* \"#utility.yul\":11222:11236   */\n  gt\n    /* \"#utility.yul\":11219:11259   */\n  iszero\n  tag_236\n  jumpi\n    /* \"#utility.yul\":11239:11257   */\n  tag_237\n  tag_100\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11219:11259   */\ntag_236:\n    /* \"#utility.yul\":11272:11277   */\n  pop\n  jump(tag_228)\n    /* \"#utility.yul\":11010:11287   */\ntag_231:\n  pop\n    /* \"#utility.yul\":11396:11398   */\n  0x20\n    /* \"#utility.yul\":11386:11394   */\n  dup4\n    /* \"#utility.yul\":11383:11399   */\n  lt\n    /* \"#utility.yul\":11377:11380   */\n  0x0133\n    /* \"#utility.yul\":11371:11375   */\n  dup4\n    /* \"#utility.yul\":11368:11381   */\n  lt\n    /* \"#utility.yul\":11364:11400   */\n  and\n    /* \"#utility.yul\":11346:11348   */\n  0x4e\n    /* \"#utility.yul\":11336:11344   */\n  dup5\n    /* \"#utility.yul\":11333:11349   */\n  lt\n    /* \"#utility.yul\":11328:11330   */\n  0x0b\n    /* \"#utility.yul\":11322:11326   */\n  dup5\n    /* \"#utility.yul\":11319:11331   */\n  lt\n    /* \"#utility.yul\":11315:11350   */\n  and\n    /* \"#utility.yul\":11299:11410   */\n  or\n    /* \"#utility.yul\":11296:11542   */\n  iszero\n  tag_238\n  jumpi\n    /* \"#utility.yul\":11452:11460   */\n  dup3\n    /* \"#utility.yul\":11446:11450   */\n  dup3\n    /* \"#utility.yul\":11442:11461   */\n  exp\n    /* \"#utility.yul\":11433:11461   */\n  swap1\n  pop\n    /* \"#utility.yul\":11487:11490   */\n  dup4\n    /* \"#utility.yul\":11480:11485   */\n  dup2\n    /* \"#utility.yul\":11477:11491   */\n  gt\n    /* \"#utility.yul\":11474:11514   */\n  iszero\n  tag_239\n  jumpi\n    /* \"#utility.yul\":11494:11512   */\n  tag_240\n  tag_100\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11474:11514   */\ntag_239:\n    /* \"#utility.yul\":11527:11532   */\n  jump(tag_228)\n    /* \"#utility.yul\":11296:11542   */\ntag_238:\n    /* \"#utility.yul\":11567:11609   */\n  tag_241\n    /* \"#utility.yul\":11605:11608   */\n  dup5\n    /* \"#utility.yul\":11595:11603   */\n  dup5\n    /* \"#utility.yul\":11589:11593   */\n  dup5\n    /* \"#utility.yul\":11586:11587   */\n  0x01\n    /* \"#utility.yul\":11567:11609   */\n  tag_102\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":11552:11609   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11641:11645   */\n  dup2\n    /* \"#utility.yul\":11636:11639   */\n  dup5\n    /* \"#utility.yul\":11632:11646   */\n  div\n    /* \"#utility.yul\":11625:11630   */\n  dup2\n    /* \"#utility.yul\":11622:11647   */\n  gt\n    /* \"#utility.yul\":11619:11670   */\n  iszero\n  tag_242\n  jumpi\n    /* \"#utility.yul\":11650:11668   */\n  tag_243\n  tag_100\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":11619:11670   */\ntag_242:\n    /* \"#utility.yul\":11699:11703   */\n  dup2\n    /* \"#utility.yul\":11692:11697   */\n  dup2\n    /* \"#utility.yul\":11688:11704   */\n  mul\n    /* \"#utility.yul\":11679:11704   */\n  swap1\n  pop\n    /* \"#utility.yul\":10637:11710   */\ntag_228:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11716:11802   */\ntag_104:\n    /* \"#utility.yul\":11751:11758   */\n  0x00\n    /* \"#utility.yul\":11791:11795   */\n  0xff\n    /* \"#utility.yul\":11784:11789   */\n  dup3\n    /* \"#utility.yul\":11780:11796   */\n  and\n    /* \"#utility.yul\":11769:11796   */\n  swap1\n  pop\n    /* \"#utility.yul\":11716:11802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11808:12089   */\ntag_22:\n    /* \"#utility.yul\":11866:11871   */\n  0x00\n    /* \"#utility.yul\":11890:11913   */\n  tag_246\n    /* \"#utility.yul\":11908:11912   */\n  dup3\n    /* \"#utility.yul\":11890:11913   */\n  tag_76\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":11882:11913   */\n  swap2\n  pop\n    /* \"#utility.yul\":11934:11959   */\n  tag_247\n    /* \"#utility.yul\":11950:11958   */\n  dup4\n    /* \"#utility.yul\":11934:11959   */\n  tag_104\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":11922:11959   */\n  swap3\n  pop\n    /* \"#utility.yul\":11978:12082   */\n  tag_248\n    /* \"#utility.yul\":12015:12081   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12005:12013   */\n  dup5\n    /* \"#utility.yul\":11999:12003   */\n  dup5\n    /* \"#utility.yul\":11978:12082   */\n  tag_103\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":11969:12082   */\n  swap1\n  pop\n    /* \"#utility.yul\":11808:12089   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12095:12505   */\ntag_24:\n    /* \"#utility.yul\":12135:12142   */\n  0x00\n    /* \"#utility.yul\":12158:12178   */\n  tag_250\n    /* \"#utility.yul\":12176:12177   */\n  dup3\n    /* \"#utility.yul\":12158:12178   */\n  tag_76\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12153:12178   */\n  swap2\n  pop\n    /* \"#utility.yul\":12192:12212   */\n  tag_251\n    /* \"#utility.yul\":12210:12211   */\n  dup4\n    /* \"#utility.yul\":12192:12212   */\n  tag_76\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12187:12212   */\n  swap3\n  pop\n    /* \"#utility.yul\":12247:12248   */\n  dup3\n    /* \"#utility.yul\":12244:12245   */\n  dup3\n    /* \"#utility.yul\":12240:12249   */\n  mul\n    /* \"#utility.yul\":12269:12299   */\n  tag_252\n    /* \"#utility.yul\":12287:12298   */\n  dup2\n    /* \"#utility.yul\":12269:12299   */\n  tag_76\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12258:12299   */\n  swap2\n  pop\n    /* \"#utility.yul\":12448:12449   */\n  dup3\n    /* \"#utility.yul\":12439:12446   */\n  dup3\n    /* \"#utility.yul\":12435:12450   */\n  div\n    /* \"#utility.yul\":12432:12433   */\n  dup5\n    /* \"#utility.yul\":12429:12451   */\n  eq\n    /* \"#utility.yul\":12409:12410   */\n  dup4\n    /* \"#utility.yul\":12402:12411   */\n  iszero\n    /* \"#utility.yul\":12382:12465   */\n  or\n    /* \"#utility.yul\":12359:12498   */\n  tag_253\n  jumpi\n    /* \"#utility.yul\":12478:12496   */\n  tag_254\n  tag_100\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":12359:12498   */\ntag_253:\n    /* \"#utility.yul\":12143:12505   */\n  pop\n    /* \"#utility.yul\":12095:12505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12511:12691   */\ntag_28:\n    /* \"#utility.yul\":12559:12636   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12556:12557   */\n  0x00\n    /* \"#utility.yul\":12549:12637   */\n  mstore\n    /* \"#utility.yul\":12656:12660   */\n  0x21\n    /* \"#utility.yul\":12653:12654   */\n  0x04\n    /* \"#utility.yul\":12646:12661   */\n  mstore\n    /* \"#utility.yul\":12680:12684   */\n  0x24\n    /* \"#utility.yul\":12677:12678   */\n  0x00\n    /* \"#utility.yul\":12670:12685   */\n  revert\n    /* \"#utility.yul\":12697:12888   */\ntag_54:\n    /* \"#utility.yul\":12737:12740   */\n  0x00\n    /* \"#utility.yul\":12756:12776   */\n  tag_257\n    /* \"#utility.yul\":12774:12775   */\n  dup3\n    /* \"#utility.yul\":12756:12776   */\n  tag_76\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":12751:12776   */\n  swap2\n  pop\n    /* \"#utility.yul\":12790:12810   */\n  tag_258\n    /* \"#utility.yul\":12808:12809   */\n  dup4\n    /* \"#utility.yul\":12790:12810   */\n  tag_76\n  jump\t// in\ntag_258:\n    /* \"#utility.yul\":12785:12810   */\n  swap3\n  pop\n    /* \"#utility.yul\":12833:12834   */\n  dup3\n    /* \"#utility.yul\":12830:12831   */\n  dup3\n    /* \"#utility.yul\":12826:12835   */\n  add\n    /* \"#utility.yul\":12819:12835   */\n  swap1\n  pop\n    /* \"#utility.yul\":12854:12857   */\n  dup1\n    /* \"#utility.yul\":12851:12852   */\n  dup3\n    /* \"#utility.yul\":12848:12858   */\n  gt\n    /* \"#utility.yul\":12845:12881   */\n  iszero\n  tag_259\n  jumpi\n    /* \"#utility.yul\":12861:12879   */\n  tag_260\n  tag_100\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":12845:12881   */\ntag_259:\n    /* \"#utility.yul\":12697:12888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12894:13012   */\ntag_105:\n    /* \"#utility.yul\":12981:13005   */\n  tag_262\n    /* \"#utility.yul\":12999:13004   */\n  dup2\n    /* \"#utility.yul\":12981:13005   */\n  tag_76\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":12976:12979   */\n  dup3\n    /* \"#utility.yul\":12969:13006   */\n  mstore\n    /* \"#utility.yul\":12894:13012   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13018:13460   */\ntag_58:\n    /* \"#utility.yul\":13167:13171   */\n  0x00\n    /* \"#utility.yul\":13205:13207   */\n  0x60\n    /* \"#utility.yul\":13194:13203   */\n  dup3\n    /* \"#utility.yul\":13190:13208   */\n  add\n    /* \"#utility.yul\":13182:13208   */\n  swap1\n  pop\n    /* \"#utility.yul\":13218:13289   */\n  tag_264\n    /* \"#utility.yul\":13286:13287   */\n  0x00\n    /* \"#utility.yul\":13275:13284   */\n  dup4\n    /* \"#utility.yul\":13271:13288   */\n  add\n    /* \"#utility.yul\":13262:13268   */\n  dup7\n    /* \"#utility.yul\":13218:13289   */\n  tag_99\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":13299:13371   */\n  tag_265\n    /* \"#utility.yul\":13367:13369   */\n  0x20\n    /* \"#utility.yul\":13356:13365   */\n  dup4\n    /* \"#utility.yul\":13352:13370   */\n  add\n    /* \"#utility.yul\":13343:13349   */\n  dup6\n    /* \"#utility.yul\":13299:13371   */\n  tag_105\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":13381:13453   */\n  tag_266\n    /* \"#utility.yul\":13449:13451   */\n  0x40\n    /* \"#utility.yul\":13438:13447   */\n  dup4\n    /* \"#utility.yul\":13434:13452   */\n  add\n    /* \"#utility.yul\":13425:13431   */\n  dup5\n    /* \"#utility.yul\":13381:13453   */\n  tag_105\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":13018:13460   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13466:13688   */\ntag_62:\n    /* \"#utility.yul\":13559:13563   */\n  0x00\n    /* \"#utility.yul\":13597:13599   */\n  0x20\n    /* \"#utility.yul\":13586:13595   */\n  dup3\n    /* \"#utility.yul\":13582:13600   */\n  add\n    /* \"#utility.yul\":13574:13600   */\n  swap1\n  pop\n    /* \"#utility.yul\":13610:13681   */\n  tag_268\n    /* \"#utility.yul\":13678:13679   */\n  0x00\n    /* \"#utility.yul\":13667:13676   */\n  dup4\n    /* \"#utility.yul\":13663:13680   */\n  add\n    /* \"#utility.yul\":13654:13660   */\n  dup5\n    /* \"#utility.yul\":13610:13681   */\n  tag_105\n  jump\t// in\ntag_268:\n    /* \"#utility.yul\":13466:13688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":167:4146  contract MyToken is ERC20, Ownable {... */\ntag_43:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":167:4146  contract MyToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb5d5b5fa\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1f1accb2\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x1f1accb2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10087fb1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1892:2747  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":719:763  mapping(StakingPeriod => uint256) public apy */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":3690:4144  function withdraw(uint256 stakeIndex) external {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1793:1886  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":820:881  mapping(address => mapping(uint256=>Stake)) public userStakes */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_95\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1892:2747  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_36:\n        /* \"contracts/MyToken.sol\":1979:1980  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1972:1978  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":1972:1980  amount>0 */\n      gt\n        /* \"contracts/MyToken.sol\":1964:2010  require(amount>0, \"Amount should be positive\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/MyToken.sol\":2051:2057  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":2028:2049  balanceOf(msg.sender) */\n      tag_109\n        /* \"contracts/MyToken.sol\":2038:2048  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2028:2037  balanceOf */\n      tag_65\n        /* \"contracts/MyToken.sol\":2028:2049  balanceOf(msg.sender) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/MyToken.sol\":2028:2057  balanceOf(msg.sender)>=amount */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":2020:2082  require(balanceOf(msg.sender)>=amount, \"Insufficient balance\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/MyToken.sol\":2093:2122  timeMapping memory durMapping */\n      0x00\n        /* \"contracts/MyToken.sol\":2125:2145  _getDuration(period) */\n      tag_113\n        /* \"contracts/MyToken.sol\":2138:2144  period */\n      dup3\n        /* \"contracts/MyToken.sol\":2125:2137  _getDuration */\n      tag_114\n        /* \"contracts/MyToken.sol\":2125:2145  _getDuration(period) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/MyToken.sol\":2093:2145  timeMapping memory durMapping = _getDuration(period) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2155:2166  uint256 dur */\n      0x00\n        /* \"contracts/MyToken.sol\":2167:2177  durMapping */\n      dup2\n        /* \"contracts/MyToken.sol\":2167:2182  durMapping.time */\n      0x20\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2155:2182  uint256 dur=durMapping.time */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2192:2210  uint256 periodDays */\n      0x00\n        /* \"contracts/MyToken.sol\":2211:2221  durMapping */\n      dup3\n        /* \"contracts/MyToken.sol\":2211:2232  durMapping.periodDays */\n      0x00\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2192:2232  uint256 periodDays=durMapping.periodDays */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2242:2256  uint256 startT */\n      0x00\n        /* \"contracts/MyToken.sol\":2257:2272  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":2242:2272  uint256 startT=block.timestamp */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2282:2294  uint256 endT */\n      0x00\n        /* \"contracts/MyToken.sol\":2305:2308  dur */\n      dup4\n        /* \"contracts/MyToken.sol\":2296:2302  startT */\n      dup3\n        /* \"contracts/MyToken.sol\":2296:2308  startT + dur */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/MyToken.sol\":2282:2308  uint256 endT= startT + dur */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2318:2331  uint256 index */\n      0x00\n        /* \"contracts/MyToken.sol\":2339:2343  endT */\n      dup2\n        /* \"contracts/MyToken.sol\":2332:2338  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":2332:2343  amount+endT */\n      tag_117\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n        /* \"contracts/MyToken.sol\":2318:2343  uint256 index=amount+endT */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2372:2382  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2365:2411  Staked(msg.sender, amount, period, endT,index) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c\n        /* \"contracts/MyToken.sol\":2384:2390  amount */\n      dup10\n        /* \"contracts/MyToken.sol\":2392:2398  period */\n      dup10\n        /* \"contracts/MyToken.sol\":2400:2404  endT */\n      dup6\n        /* \"contracts/MyToken.sol\":2405:2410  index */\n      dup6\n        /* \"contracts/MyToken.sol\":2365:2411  Staked(msg.sender, amount, period, endT,index) */\n      mload(0x40)\n      tag_118\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":2479:2485  amount */\n      dup10\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2509:2515  startT */\n      dup5\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2537:2541  endT */\n      dup4\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2626:2629  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":2619:2625  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyToken.sol\":2608:2618  periodDays */\n      dup8\n        /* \"contracts/MyToken.sol\":2596:2599  apy */\n      0x06\n        /* \"contracts/MyToken.sol\":2596:2607  apy[period] */\n      0x00\n        /* \"contracts/MyToken.sol\":2600:2606  period */\n      dup14\n        /* \"contracts/MyToken.sol\":2596:2607  apy[period] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n    tag_120:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_123\n      jumpi\n      tag_124\n      tag_122\n      jump\t// in\n    tag_124:\n    tag_123:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":2596:2618  apy[period]*periodDays */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/MyToken.sol\":2596:2625  apy[period]*periodDays*10**18 */\n      tag_127\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_127:\n        /* \"contracts/MyToken.sol\":2596:2629  apy[period]*periodDays*10**18/360 */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2693:2697  true */\n      0x01\n        /* \"contracts/MyToken.sol\":2452:2740  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":2422:2432  userStakes */\n      0x07\n        /* \"contracts/MyToken.sol\":2422:2444  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2433:2443  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2422:2444  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2422:2451  userStakes[msg.sender][index] */\n      0x00\n        /* \"contracts/MyToken.sol\":2445:2450  index */\n      dup4\n        /* \"contracts/MyToken.sol\":2422:2451  userStakes[msg.sender][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2422:2740  userStakes[msg.sender][index]=Stake({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1954:2747  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1892:2747  function stake(uint256 amount, StakingPeriod period) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":719:763  mapping(StakingPeriod => uint256) public apy */\n    tag_44:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3690:4144  function withdraw(uint256 stakeIndex) external {... */\n    tag_54:\n        /* \"contracts/MyToken.sol\":3747:3762  Stake storage s */\n      0x00\n        /* \"contracts/MyToken.sol\":3765:3775  userStakes */\n      0x07\n        /* \"contracts/MyToken.sol\":3765:3787  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":3776:3786  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3765:3787  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":3765:3799  userStakes[msg.sender][stakeIndex] */\n      0x00\n        /* \"contracts/MyToken.sol\":3788:3798  stakeIndex */\n      dup4\n        /* \"contracts/MyToken.sol\":3765:3799  userStakes[msg.sender][stakeIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":3747:3799  Stake storage s = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3817:3818  s */\n      dup1\n        /* \"contracts/MyToken.sol\":3817:3827  s.isActive */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":3809:3872  require(s.isActive, \"Stake is not active or already withdrawn\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/MyToken.sol\":3909:3910  s */\n      dup1\n        /* \"contracts/MyToken.sol\":3909:3918  s.endTime */\n      0x02\n      add\n      sload\n        /* \"contracts/MyToken.sol\":3890:3905  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":3890:3918  block.timestamp >= s.endTime */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":3882:3948  require(block.timestamp >= s.endTime, \"Stake period is not ended\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/MyToken.sol\":3958:3972  uint256 reward */\n      0x00\n        /* \"contracts/MyToken.sol\":3999:4006  10** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyToken.sol\":3995:3998  100 */\n      0x64\n        /* \"contracts/MyToken.sol\":3982:3983  s */\n      dup4\n        /* \"contracts/MyToken.sol\":3982:3994  s.rewardRate */\n      0x03\n      add\n      sload\n        /* \"contracts/MyToken.sol\":3973:3974  s */\n      dup5\n        /* \"contracts/MyToken.sol\":3973:3981  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/MyToken.sol\":3973:3994  s.amount*s.rewardRate */\n      tag_144\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_144:\n        /* \"contracts/MyToken.sol\":3973:3998  s.amount*s.rewardRate/100 */\n      tag_145\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_145:\n        /* \"contracts/MyToken.sol\":3973:4006  s.amount*s.rewardRate/100/10** 18 */\n      tag_146\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_146:\n        /* \"contracts/MyToken.sol\":3958:4006  uint256 reward=s.amount*s.rewardRate/100/10** 18 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4016:4035  uint256 totalAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":4045:4051  reward */\n      dup2\n        /* \"contracts/MyToken.sol\":4036:4037  s */\n      dup4\n        /* \"contracts/MyToken.sol\":4036:4044  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/MyToken.sol\":4036:4051  s.amount+reward */\n      tag_147\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_147:\n        /* \"contracts/MyToken.sol\":4016:4051  uint256 totalAmount=s.amount+reward */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4072:4077  false */\n      0x00\n        /* \"contracts/MyToken.sol\":4061:4062  s */\n      dup4\n        /* \"contracts/MyToken.sol\":4061:4071  s.isActive */\n      0x04\n      add\n      0x00\n        /* \"contracts/MyToken.sol\":4061:4077  s.isActive=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":4103:4113  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":4093:4137  Withdrawn(msg.sender,totalAmount,stakeIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/MyToken.sol\":4114:4125  totalAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":4126:4136  stakeIndex */\n      dup7\n        /* \"contracts/MyToken.sol\":4093:4137  Withdrawn(msg.sender,totalAmount,stakeIndex) */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":3737:4144  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":3690:4144  function withdraw(uint256 stakeIndex) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1793:1886  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/MyToken.sol\":1862:1879  _mint(to, amount) */\n      tag_155\n        /* \"contracts/MyToken.sol\":1868:1870  to */\n      dup3\n        /* \"contracts/MyToken.sol\":1872:1878  amount */\n      dup3\n        /* \"contracts/MyToken.sol\":1862:1867  _mint */\n      tag_156\n        /* \"contracts/MyToken.sol\":1862:1879  _mint(to, amount) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/MyToken.sol\":1793:1886  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_95\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_95\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":820:881  mapping(address => mapping(uint256=>Stake)) public userStakes */\n    tag_82:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2800:3684  function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {... */\n    tag_114:\n        /* \"contracts/MyToken.sol\":2867:2885  timeMapping memory */\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/MyToken.sol\":2909:2933  StakingPeriod.ThirtyDays */\n      0x00\n        /* \"contracts/MyToken.sol\":2901:2933  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_122\n      jump\t// in\n    tag_188:\n    tag_187:\n        /* \"contracts/MyToken.sol\":2901:2907  period */\n      dup3\n        /* \"contracts/MyToken.sol\":2901:2933  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_122\n      jump\t// in\n    tag_190:\n    tag_189:\n      sub\n        /* \"contracts/MyToken.sol\":2898:3677  if(period==StakingPeriod.ThirtyDays){... */\n      tag_191\n      jumpi\n        /* \"contracts/MyToken.sol\":2955:3045  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":2996:2998  30 */\n      0x1e\n        /* \"contracts/MyToken.sol\":2955:3045  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3021:3030  1 minutes */\n      0x3c\n        /* \"contracts/MyToken.sol\":2955:3045  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":2948:3045  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"contracts/MyToken.sol\":2898:3677  if(period==StakingPeriod.ThirtyDays){... */\n    tag_191:\n        /* \"contracts/MyToken.sol\":3072:3096  StakingPeriod.NinetyDays */\n      0x01\n        /* \"contracts/MyToken.sol\":3064:3096  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_193\n      jumpi\n      tag_194\n      tag_122\n      jump\t// in\n    tag_194:\n    tag_193:\n        /* \"contracts/MyToken.sol\":3064:3070  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3064:3096  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_195\n      jumpi\n      tag_196\n      tag_122\n      jump\t// in\n    tag_196:\n    tag_195:\n      sub\n        /* \"contracts/MyToken.sol\":3061:3677  if(period==StakingPeriod.NinetyDays){... */\n      tag_197\n      jumpi\n        /* \"contracts/MyToken.sol\":3118:3208  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3159:3161  90 */\n      0x5a\n        /* \"contracts/MyToken.sol\":3118:3208  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3184:3193  3 minutes */\n      0xb4\n        /* \"contracts/MyToken.sol\":3118:3208  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3111:3208  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"contracts/MyToken.sol\":3061:3677  if(period==StakingPeriod.NinetyDays){... */\n    tag_197:\n        /* \"contracts/MyToken.sol\":3235:3266  StakingPeriod.HundredEightyDays */\n      0x02\n        /* \"contracts/MyToken.sol\":3227:3266  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_200\n      tag_122\n      jump\t// in\n    tag_200:\n    tag_199:\n        /* \"contracts/MyToken.sol\":3227:3233  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3227:3266  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_122\n      jump\t// in\n    tag_202:\n    tag_201:\n      sub\n        /* \"contracts/MyToken.sol\":3224:3677  if(period==StakingPeriod.HundredEightyDays){... */\n      tag_203\n      jumpi\n        /* \"contracts/MyToken.sol\":3288:3379  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3329:3332  180 */\n      0xb4\n        /* \"contracts/MyToken.sol\":3288:3379  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3355:3364  5 minutes */\n      0x012c\n        /* \"contracts/MyToken.sol\":3288:3379  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3281:3379  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"contracts/MyToken.sol\":3224:3677  if(period==StakingPeriod.HundredEightyDays){... */\n    tag_203:\n        /* \"contracts/MyToken.sol\":3406:3427  StakingPeriod.OneYear */\n      0x03\n        /* \"contracts/MyToken.sol\":3398:3427  period==StakingPeriod.OneYear */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_205\n      jumpi\n      tag_206\n      tag_122\n      jump\t// in\n    tag_206:\n    tag_205:\n        /* \"contracts/MyToken.sol\":3398:3404  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3398:3427  period==StakingPeriod.OneYear */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_208\n      tag_122\n      jump\t// in\n    tag_208:\n    tag_207:\n      sub\n        /* \"contracts/MyToken.sol\":3395:3677  if(period==StakingPeriod.OneYear){... */\n      tag_209\n      jumpi\n        /* \"contracts/MyToken.sol\":3449:3541  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3490:3493  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":3449:3541  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3516:3526  10 minutes */\n      0x0258\n        /* \"contracts/MyToken.sol\":3449:3541  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3442:3541  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"contracts/MyToken.sol\":3395:3677  if(period==StakingPeriod.OneYear){... */\n    tag_209:\n        /* \"contracts/MyToken.sol\":3577:3666  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3618:3621  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":3577:3666  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3644:3651  1 hours */\n      0x0e10\n        /* \"contracts/MyToken.sol\":3577:3666  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3570:3666  return timeMapping({... */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2800:3684  function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {... */\n    tag_186:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_246)\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_250)\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_251\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_185:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_252:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_253:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_254:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_255:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_256:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_296\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_252\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":711:782   */\n      tag_297\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_253\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_298\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_254\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":881:910   */\n      tag_299\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_255\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_301\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_256\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_258:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_260:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_261:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_307\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_260\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_262:\n        /* \"#utility.yul\":1876:1900   */\n      tag_309\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_261\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_310:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_263:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_312\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_262\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_264:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_265:\n        /* \"#utility.yul\":2232:2256   */\n      tag_315\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_264\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_316:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_266:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_318\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_265\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_321\n      tag_258\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2525:2644   */\n    tag_320:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_322\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_263\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_323\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_266\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_267:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_268:\n        /* \"#utility.yul\":3089:3110   */\n      tag_326\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_267\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_328\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_268\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3455   */\n    tag_269:\n        /* \"#utility.yul\":3429:3430   */\n      0x04\n        /* \"#utility.yul\":3422:3427   */\n      dup2\n        /* \"#utility.yul\":3419:3431   */\n      lt\n        /* \"#utility.yul\":3409:3449   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      0x00\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3409:3449   */\n    tag_330:\n        /* \"#utility.yul\":3339:3455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3634   */\n    tag_270:\n        /* \"#utility.yul\":3524:3529   */\n      0x00\n        /* \"#utility.yul\":3562:3568   */\n      dup2\n        /* \"#utility.yul\":3549:3569   */\n      calldataload\n        /* \"#utility.yul\":3540:3569   */\n      swap1\n      pop\n        /* \"#utility.yul\":3578:3628   */\n      tag_332\n        /* \"#utility.yul\":3622:3627   */\n      dup2\n        /* \"#utility.yul\":3578:3628   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3461:3634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3640:4148   */\n    tag_35:\n        /* \"#utility.yul\":3725:3731   */\n      0x00\n        /* \"#utility.yul\":3733:3739   */\n      0x00\n        /* \"#utility.yul\":3782:3784   */\n      0x40\n        /* \"#utility.yul\":3770:3779   */\n      dup4\n        /* \"#utility.yul\":3761:3768   */\n      dup6\n        /* \"#utility.yul\":3757:3780   */\n      sub\n        /* \"#utility.yul\":3753:3785   */\n      slt\n        /* \"#utility.yul\":3750:3869   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3788:3867   */\n      tag_335\n      tag_258\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3750:3869   */\n    tag_334:\n        /* \"#utility.yul\":3908:3909   */\n      0x00\n        /* \"#utility.yul\":3933:3986   */\n      tag_336\n        /* \"#utility.yul\":3978:3985   */\n      dup6\n        /* \"#utility.yul\":3969:3975   */\n      dup3\n        /* \"#utility.yul\":3958:3967   */\n      dup7\n        /* \"#utility.yul\":3954:3976   */\n      add\n        /* \"#utility.yul\":3933:3986   */\n      tag_266\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3923:3986   */\n      swap3\n      pop\n        /* \"#utility.yul\":3879:3996   */\n      pop\n        /* \"#utility.yul\":4035:4037   */\n      0x20\n        /* \"#utility.yul\":4061:4131   */\n      tag_337\n        /* \"#utility.yul\":4123:4130   */\n      dup6\n        /* \"#utility.yul\":4114:4120   */\n      dup3\n        /* \"#utility.yul\":4103:4112   */\n      dup7\n        /* \"#utility.yul\":4099:4121   */\n      add\n        /* \"#utility.yul\":4061:4131   */\n      tag_270\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4051:4131   */\n      swap2\n      pop\n        /* \"#utility.yul\":4006:4141   */\n      pop\n        /* \"#utility.yul\":3640:4148   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4154:4272   */\n    tag_271:\n        /* \"#utility.yul\":4241:4265   */\n      tag_339\n        /* \"#utility.yul\":4259:4264   */\n      dup2\n        /* \"#utility.yul\":4241:4265   */\n      tag_264\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4236:4239   */\n      dup3\n        /* \"#utility.yul\":4229:4266   */\n      mstore\n        /* \"#utility.yul\":4154:4272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4278:4500   */\n    tag_40:\n        /* \"#utility.yul\":4371:4375   */\n      0x00\n        /* \"#utility.yul\":4409:4411   */\n      0x20\n        /* \"#utility.yul\":4398:4407   */\n      dup3\n        /* \"#utility.yul\":4394:4412   */\n      add\n        /* \"#utility.yul\":4386:4412   */\n      swap1\n      pop\n        /* \"#utility.yul\":4422:4493   */\n      tag_341\n        /* \"#utility.yul\":4490:4491   */\n      0x00\n        /* \"#utility.yul\":4479:4488   */\n      dup4\n        /* \"#utility.yul\":4475:4492   */\n      add\n        /* \"#utility.yul\":4466:4472   */\n      dup5\n        /* \"#utility.yul\":4422:4493   */\n      tag_271\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4278:4500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4869   */\n    tag_43:\n        /* \"#utility.yul\":4582:4588   */\n      0x00\n        /* \"#utility.yul\":4631:4633   */\n      0x20\n        /* \"#utility.yul\":4619:4628   */\n      dup3\n        /* \"#utility.yul\":4610:4617   */\n      dup5\n        /* \"#utility.yul\":4606:4629   */\n      sub\n        /* \"#utility.yul\":4602:4634   */\n      slt\n        /* \"#utility.yul\":4599:4718   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4637:4716   */\n      tag_344\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4599:4718   */\n    tag_343:\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4782:4852   */\n      tag_345\n        /* \"#utility.yul\":4844:4851   */\n      dup5\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup6\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4782:4852   */\n      tag_270\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4772:4852   */\n      swap2\n      pop\n        /* \"#utility.yul\":4728:4862   */\n      pop\n        /* \"#utility.yul\":4506:4869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4875:5494   */\n    tag_48:\n        /* \"#utility.yul\":4952:4958   */\n      0x00\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":4968:4974   */\n      0x00\n        /* \"#utility.yul\":5017:5019   */\n      0x60\n        /* \"#utility.yul\":5005:5014   */\n      dup5\n        /* \"#utility.yul\":4996:5003   */\n      dup7\n        /* \"#utility.yul\":4992:5015   */\n      sub\n        /* \"#utility.yul\":4988:5020   */\n      slt\n        /* \"#utility.yul\":4985:5104   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5023:5102   */\n      tag_348\n      tag_258\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4985:5104   */\n    tag_347:\n        /* \"#utility.yul\":5143:5144   */\n      0x00\n        /* \"#utility.yul\":5168:5221   */\n      tag_349\n        /* \"#utility.yul\":5213:5220   */\n      dup7\n        /* \"#utility.yul\":5204:5210   */\n      dup3\n        /* \"#utility.yul\":5193:5202   */\n      dup8\n        /* \"#utility.yul\":5189:5211   */\n      add\n        /* \"#utility.yul\":5168:5221   */\n      tag_263\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5158:5221   */\n      swap4\n      pop\n        /* \"#utility.yul\":5114:5231   */\n      pop\n        /* \"#utility.yul\":5270:5272   */\n      0x20\n        /* \"#utility.yul\":5296:5349   */\n      tag_350\n        /* \"#utility.yul\":5341:5348   */\n      dup7\n        /* \"#utility.yul\":5332:5338   */\n      dup3\n        /* \"#utility.yul\":5321:5330   */\n      dup8\n        /* \"#utility.yul\":5317:5339   */\n      add\n        /* \"#utility.yul\":5296:5349   */\n      tag_263\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5286:5349   */\n      swap3\n      pop\n        /* \"#utility.yul\":5241:5359   */\n      pop\n        /* \"#utility.yul\":5398:5400   */\n      0x40\n        /* \"#utility.yul\":5424:5477   */\n      tag_351\n        /* \"#utility.yul\":5469:5476   */\n      dup7\n        /* \"#utility.yul\":5460:5466   */\n      dup3\n        /* \"#utility.yul\":5449:5458   */\n      dup8\n        /* \"#utility.yul\":5445:5467   */\n      add\n        /* \"#utility.yul\":5424:5477   */\n      tag_266\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5414:5477   */\n      swap2\n      pop\n        /* \"#utility.yul\":5369:5487   */\n      pop\n        /* \"#utility.yul\":4875:5494   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5500:5829   */\n    tag_53:\n        /* \"#utility.yul\":5559:5565   */\n      0x00\n        /* \"#utility.yul\":5608:5610   */\n      0x20\n        /* \"#utility.yul\":5596:5605   */\n      dup3\n        /* \"#utility.yul\":5587:5594   */\n      dup5\n        /* \"#utility.yul\":5583:5606   */\n      sub\n        /* \"#utility.yul\":5579:5611   */\n      slt\n        /* \"#utility.yul\":5576:5695   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5614:5693   */\n      tag_354\n      tag_258\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5576:5695   */\n    tag_353:\n        /* \"#utility.yul\":5734:5735   */\n      0x00\n        /* \"#utility.yul\":5759:5812   */\n      tag_355\n        /* \"#utility.yul\":5804:5811   */\n      dup5\n        /* \"#utility.yul\":5795:5801   */\n      dup3\n        /* \"#utility.yul\":5784:5793   */\n      dup6\n        /* \"#utility.yul\":5780:5802   */\n      add\n        /* \"#utility.yul\":5759:5812   */\n      tag_266\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5749:5812   */\n      swap2\n      pop\n        /* \"#utility.yul\":5705:5822   */\n      pop\n        /* \"#utility.yul\":5500:5829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5835:5921   */\n    tag_272:\n        /* \"#utility.yul\":5870:5877   */\n      0x00\n        /* \"#utility.yul\":5910:5914   */\n      0xff\n        /* \"#utility.yul\":5903:5908   */\n      dup3\n        /* \"#utility.yul\":5899:5915   */\n      and\n        /* \"#utility.yul\":5888:5915   */\n      swap1\n      pop\n        /* \"#utility.yul\":5835:5921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:6039   */\n    tag_273:\n        /* \"#utility.yul\":6010:6032   */\n      tag_358\n        /* \"#utility.yul\":6026:6031   */\n      dup2\n        /* \"#utility.yul\":6010:6032   */\n      tag_272\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6005:6008   */\n      dup3\n        /* \"#utility.yul\":5998:6033   */\n      mstore\n        /* \"#utility.yul\":5927:6039   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6259   */\n    tag_58:\n        /* \"#utility.yul\":6134:6138   */\n      0x00\n        /* \"#utility.yul\":6172:6174   */\n      0x20\n        /* \"#utility.yul\":6161:6170   */\n      dup3\n        /* \"#utility.yul\":6157:6175   */\n      add\n        /* \"#utility.yul\":6149:6175   */\n      swap1\n      pop\n        /* \"#utility.yul\":6185:6252   */\n      tag_360\n        /* \"#utility.yul\":6249:6250   */\n      0x00\n        /* \"#utility.yul\":6238:6247   */\n      dup4\n        /* \"#utility.yul\":6234:6251   */\n      add\n        /* \"#utility.yul\":6225:6231   */\n      dup5\n        /* \"#utility.yul\":6185:6252   */\n      tag_273\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6045:6259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6594   */\n    tag_64:\n        /* \"#utility.yul\":6324:6330   */\n      0x00\n        /* \"#utility.yul\":6373:6375   */\n      0x20\n        /* \"#utility.yul\":6361:6370   */\n      dup3\n        /* \"#utility.yul\":6352:6359   */\n      dup5\n        /* \"#utility.yul\":6348:6371   */\n      sub\n        /* \"#utility.yul\":6344:6376   */\n      slt\n        /* \"#utility.yul\":6341:6460   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6379:6458   */\n      tag_363\n      tag_258\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6341:6460   */\n    tag_362:\n        /* \"#utility.yul\":6499:6500   */\n      0x00\n        /* \"#utility.yul\":6524:6577   */\n      tag_364\n        /* \"#utility.yul\":6569:6576   */\n      dup5\n        /* \"#utility.yul\":6560:6566   */\n      dup3\n        /* \"#utility.yul\":6549:6558   */\n      dup6\n        /* \"#utility.yul\":6545:6567   */\n      add\n        /* \"#utility.yul\":6524:6577   */\n      tag_263\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6514:6577   */\n      swap2\n      pop\n        /* \"#utility.yul\":6470:6587   */\n      pop\n        /* \"#utility.yul\":6265:6594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6600:6718   */\n    tag_274:\n        /* \"#utility.yul\":6687:6711   */\n      tag_366\n        /* \"#utility.yul\":6705:6710   */\n      dup2\n        /* \"#utility.yul\":6687:6711   */\n      tag_261\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6682:6685   */\n      dup3\n        /* \"#utility.yul\":6675:6712   */\n      mstore\n        /* \"#utility.yul\":6600:6718   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6724:6946   */\n    tag_72:\n        /* \"#utility.yul\":6817:6821   */\n      0x00\n        /* \"#utility.yul\":6855:6857   */\n      0x20\n        /* \"#utility.yul\":6844:6853   */\n      dup3\n        /* \"#utility.yul\":6840:6858   */\n      add\n        /* \"#utility.yul\":6832:6858   */\n      swap1\n      pop\n        /* \"#utility.yul\":6868:6939   */\n      tag_368\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6925:6934   */\n      dup4\n        /* \"#utility.yul\":6921:6938   */\n      add\n        /* \"#utility.yul\":6912:6918   */\n      dup5\n        /* \"#utility.yul\":6868:6939   */\n      tag_274\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6724:6946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6952:7604   */\n    tag_84:\n        /* \"#utility.yul\":7151:7155   */\n      0x00\n        /* \"#utility.yul\":7189:7192   */\n      0xa0\n        /* \"#utility.yul\":7178:7187   */\n      dup3\n        /* \"#utility.yul\":7174:7193   */\n      add\n        /* \"#utility.yul\":7166:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":7203:7274   */\n      tag_370\n        /* \"#utility.yul\":7271:7272   */\n      0x00\n        /* \"#utility.yul\":7260:7269   */\n      dup4\n        /* \"#utility.yul\":7256:7273   */\n      add\n        /* \"#utility.yul\":7247:7253   */\n      dup9\n        /* \"#utility.yul\":7203:7274   */\n      tag_271\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7284:7356   */\n      tag_371\n        /* \"#utility.yul\":7352:7354   */\n      0x20\n        /* \"#utility.yul\":7341:7350   */\n      dup4\n        /* \"#utility.yul\":7337:7355   */\n      add\n        /* \"#utility.yul\":7328:7334   */\n      dup8\n        /* \"#utility.yul\":7284:7356   */\n      tag_271\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7366:7438   */\n      tag_372\n        /* \"#utility.yul\":7434:7436   */\n      0x40\n        /* \"#utility.yul\":7423:7432   */\n      dup4\n        /* \"#utility.yul\":7419:7437   */\n      add\n        /* \"#utility.yul\":7410:7416   */\n      dup7\n        /* \"#utility.yul\":7366:7438   */\n      tag_271\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7448:7520   */\n      tag_373\n        /* \"#utility.yul\":7516:7518   */\n      0x60\n        /* \"#utility.yul\":7505:7514   */\n      dup4\n        /* \"#utility.yul\":7501:7519   */\n      add\n        /* \"#utility.yul\":7492:7498   */\n      dup6\n        /* \"#utility.yul\":7448:7520   */\n      tag_271\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7530:7597   */\n      tag_374\n        /* \"#utility.yul\":7592:7595   */\n      0x80\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7577:7596   */\n      add\n        /* \"#utility.yul\":7568:7574   */\n      dup5\n        /* \"#utility.yul\":7530:7597   */\n      tag_268\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6952:7604   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7610:8084   */\n    tag_87:\n        /* \"#utility.yul\":7678:7684   */\n      0x00\n        /* \"#utility.yul\":7686:7692   */\n      0x00\n        /* \"#utility.yul\":7735:7737   */\n      0x40\n        /* \"#utility.yul\":7723:7732   */\n      dup4\n        /* \"#utility.yul\":7714:7721   */\n      dup6\n        /* \"#utility.yul\":7710:7733   */\n      sub\n        /* \"#utility.yul\":7706:7738   */\n      slt\n        /* \"#utility.yul\":7703:7822   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":7741:7820   */\n      tag_377\n      tag_258\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7703:7822   */\n    tag_376:\n        /* \"#utility.yul\":7861:7862   */\n      0x00\n        /* \"#utility.yul\":7886:7939   */\n      tag_378\n        /* \"#utility.yul\":7931:7938   */\n      dup6\n        /* \"#utility.yul\":7922:7928   */\n      dup3\n        /* \"#utility.yul\":7911:7920   */\n      dup7\n        /* \"#utility.yul\":7907:7929   */\n      add\n        /* \"#utility.yul\":7886:7939   */\n      tag_263\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7876:7939   */\n      swap3\n      pop\n        /* \"#utility.yul\":7832:7949   */\n      pop\n        /* \"#utility.yul\":7988:7990   */\n      0x20\n        /* \"#utility.yul\":8014:8067   */\n      tag_379\n        /* \"#utility.yul\":8059:8066   */\n      dup6\n        /* \"#utility.yul\":8050:8056   */\n      dup3\n        /* \"#utility.yul\":8039:8048   */\n      dup7\n        /* \"#utility.yul\":8035:8057   */\n      add\n        /* \"#utility.yul\":8014:8067   */\n      tag_263\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8004:8067   */\n      swap2\n      pop\n        /* \"#utility.yul\":7959:8077   */\n      pop\n        /* \"#utility.yul\":7610:8084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8270   */\n    tag_275:\n        /* \"#utility.yul\":8138:8215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8135:8136   */\n      0x00\n        /* \"#utility.yul\":8128:8216   */\n      mstore\n        /* \"#utility.yul\":8235:8239   */\n      0x22\n        /* \"#utility.yul\":8232:8233   */\n      0x04\n        /* \"#utility.yul\":8225:8240   */\n      mstore\n        /* \"#utility.yul\":8259:8263   */\n      0x24\n        /* \"#utility.yul\":8256:8257   */\n      0x00\n        /* \"#utility.yul\":8249:8264   */\n      revert\n        /* \"#utility.yul\":8276:8596   */\n    tag_95:\n        /* \"#utility.yul\":8320:8326   */\n      0x00\n        /* \"#utility.yul\":8357:8358   */\n      0x02\n        /* \"#utility.yul\":8351:8355   */\n      dup3\n        /* \"#utility.yul\":8347:8359   */\n      div\n        /* \"#utility.yul\":8337:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":8404:8405   */\n      0x01\n        /* \"#utility.yul\":8398:8402   */\n      dup3\n        /* \"#utility.yul\":8394:8406   */\n      and\n        /* \"#utility.yul\":8425:8443   */\n      dup1\n        /* \"#utility.yul\":8415:8496   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8481:8485   */\n      0x7f\n        /* \"#utility.yul\":8473:8479   */\n      dup3\n        /* \"#utility.yul\":8469:8486   */\n      and\n        /* \"#utility.yul\":8459:8486   */\n      swap2\n      pop\n        /* \"#utility.yul\":8415:8496   */\n    tag_382:\n        /* \"#utility.yul\":8543:8545   */\n      0x20\n        /* \"#utility.yul\":8535:8541   */\n      dup3\n        /* \"#utility.yul\":8532:8546   */\n      lt\n        /* \"#utility.yul\":8512:8530   */\n      dup2\n        /* \"#utility.yul\":8509:8547   */\n      sub\n        /* \"#utility.yul\":8506:8590   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8562:8580   */\n      tag_384\n      tag_275\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8506:8590   */\n    tag_383:\n        /* \"#utility.yul\":8327:8596   */\n      pop\n        /* \"#utility.yul\":8276:8596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8602:8777   */\n    tag_276:\n        /* \"#utility.yul\":8742:8769   */\n      0x416d6f756e742073686f756c6420626520706f73697469766500000000000000\n        /* \"#utility.yul\":8738:8739   */\n      0x00\n        /* \"#utility.yul\":8730:8736   */\n      dup3\n        /* \"#utility.yul\":8726:8740   */\n      add\n        /* \"#utility.yul\":8719:8770   */\n      mstore\n        /* \"#utility.yul\":8602:8777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8783:9149   */\n    tag_277:\n        /* \"#utility.yul\":8925:8928   */\n      0x00\n        /* \"#utility.yul\":8946:9013   */\n      tag_387\n        /* \"#utility.yul\":9010:9012   */\n      0x19\n        /* \"#utility.yul\":9005:9008   */\n      dup4\n        /* \"#utility.yul\":8946:9013   */\n      tag_253\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8939:9013   */\n      swap2\n      pop\n        /* \"#utility.yul\":9022:9115   */\n      tag_388\n        /* \"#utility.yul\":9111:9114   */\n      dup3\n        /* \"#utility.yul\":9022:9115   */\n      tag_276\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"#utility.yul\":9135:9138   */\n      dup3\n        /* \"#utility.yul\":9131:9143   */\n      add\n        /* \"#utility.yul\":9124:9143   */\n      swap1\n      pop\n        /* \"#utility.yul\":8783:9149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9155:9574   */\n    tag_108:\n        /* \"#utility.yul\":9321:9325   */\n      0x00\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9348:9357   */\n      dup3\n        /* \"#utility.yul\":9344:9362   */\n      add\n        /* \"#utility.yul\":9336:9362   */\n      swap1\n      pop\n        /* \"#utility.yul\":9408:9417   */\n      dup2\n        /* \"#utility.yul\":9402:9406   */\n      dup2\n        /* \"#utility.yul\":9398:9418   */\n      sub\n        /* \"#utility.yul\":9394:9395   */\n      0x00\n        /* \"#utility.yul\":9383:9392   */\n      dup4\n        /* \"#utility.yul\":9379:9396   */\n      add\n        /* \"#utility.yul\":9372:9419   */\n      mstore\n        /* \"#utility.yul\":9436:9567   */\n      tag_390\n        /* \"#utility.yul\":9562:9566   */\n      dup2\n        /* \"#utility.yul\":9436:9567   */\n      tag_277\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9428:9567   */\n      swap1\n      pop\n        /* \"#utility.yul\":9155:9574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9580:9750   */\n    tag_278:\n        /* \"#utility.yul\":9720:9742   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":9716:9717   */\n      0x00\n        /* \"#utility.yul\":9708:9714   */\n      dup3\n        /* \"#utility.yul\":9704:9718   */\n      add\n        /* \"#utility.yul\":9697:9743   */\n      mstore\n        /* \"#utility.yul\":9580:9750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9756:10122   */\n    tag_279:\n        /* \"#utility.yul\":9898:9901   */\n      0x00\n        /* \"#utility.yul\":9919:9986   */\n      tag_393\n        /* \"#utility.yul\":9983:9985   */\n      0x14\n        /* \"#utility.yul\":9978:9981   */\n      dup4\n        /* \"#utility.yul\":9919:9986   */\n      tag_253\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9912:9986   */\n      swap2\n      pop\n        /* \"#utility.yul\":9995:10088   */\n      tag_394\n        /* \"#utility.yul\":10084:10087   */\n      dup3\n        /* \"#utility.yul\":9995:10088   */\n      tag_278\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10113:10115   */\n      0x20\n        /* \"#utility.yul\":10108:10111   */\n      dup3\n        /* \"#utility.yul\":10104:10116   */\n      add\n        /* \"#utility.yul\":10097:10116   */\n      swap1\n      pop\n        /* \"#utility.yul\":9756:10122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10128:10547   */\n    tag_112:\n        /* \"#utility.yul\":10294:10298   */\n      0x00\n        /* \"#utility.yul\":10332:10334   */\n      0x20\n        /* \"#utility.yul\":10321:10330   */\n      dup3\n        /* \"#utility.yul\":10317:10335   */\n      add\n        /* \"#utility.yul\":10309:10335   */\n      swap1\n      pop\n        /* \"#utility.yul\":10381:10390   */\n      dup2\n        /* \"#utility.yul\":10375:10379   */\n      dup2\n        /* \"#utility.yul\":10371:10391   */\n      sub\n        /* \"#utility.yul\":10367:10368   */\n      0x00\n        /* \"#utility.yul\":10356:10365   */\n      dup4\n        /* \"#utility.yul\":10352:10369   */\n      add\n        /* \"#utility.yul\":10345:10392   */\n      mstore\n        /* \"#utility.yul\":10409:10540   */\n      tag_396\n        /* \"#utility.yul\":10535:10539   */\n      dup2\n        /* \"#utility.yul\":10409:10540   */\n      tag_279\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10401:10540   */\n      swap1\n      pop\n        /* \"#utility.yul\":10128:10547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:10733   */\n    tag_280:\n        /* \"#utility.yul\":10601:10678   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10598:10599   */\n      0x00\n        /* \"#utility.yul\":10591:10679   */\n      mstore\n        /* \"#utility.yul\":10698:10702   */\n      0x11\n        /* \"#utility.yul\":10695:10696   */\n      0x04\n        /* \"#utility.yul\":10688:10703   */\n      mstore\n        /* \"#utility.yul\":10722:10726   */\n      0x24\n        /* \"#utility.yul\":10719:10720   */\n      0x00\n        /* \"#utility.yul\":10712:10727   */\n      revert\n        /* \"#utility.yul\":10739:10930   */\n    tag_116:\n        /* \"#utility.yul\":10779:10782   */\n      0x00\n        /* \"#utility.yul\":10798:10818   */\n      tag_399\n        /* \"#utility.yul\":10816:10817   */\n      dup3\n        /* \"#utility.yul\":10798:10818   */\n      tag_264\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10793:10818   */\n      swap2\n      pop\n        /* \"#utility.yul\":10832:10852   */\n      tag_400\n        /* \"#utility.yul\":10850:10851   */\n      dup4\n        /* \"#utility.yul\":10832:10852   */\n      tag_264\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10827:10852   */\n      swap3\n      pop\n        /* \"#utility.yul\":10875:10876   */\n      dup3\n        /* \"#utility.yul\":10872:10873   */\n      dup3\n        /* \"#utility.yul\":10868:10877   */\n      add\n        /* \"#utility.yul\":10861:10877   */\n      swap1\n      pop\n        /* \"#utility.yul\":10896:10899   */\n      dup1\n        /* \"#utility.yul\":10893:10894   */\n      dup3\n        /* \"#utility.yul\":10890:10900   */\n      gt\n        /* \"#utility.yul\":10887:10923   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":10903:10921   */\n      tag_402\n      tag_280\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10887:10923   */\n    tag_401:\n        /* \"#utility.yul\":10739:10930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10936:11116   */\n    tag_122:\n        /* \"#utility.yul\":10984:11061   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10981:10982   */\n      0x00\n        /* \"#utility.yul\":10974:11062   */\n      mstore\n        /* \"#utility.yul\":11081:11085   */\n      0x21\n        /* \"#utility.yul\":11078:11079   */\n      0x04\n        /* \"#utility.yul\":11071:11086   */\n      mstore\n        /* \"#utility.yul\":11105:11109   */\n      0x24\n        /* \"#utility.yul\":11102:11103   */\n      0x00\n        /* \"#utility.yul\":11095:11110   */\n      revert\n        /* \"#utility.yul\":11122:11244   */\n    tag_281:\n        /* \"#utility.yul\":11212:11213   */\n      0x04\n        /* \"#utility.yul\":11205:11210   */\n      dup2\n        /* \"#utility.yul\":11202:11214   */\n      lt\n        /* \"#utility.yul\":11192:11238   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":11218:11236   */\n      tag_406\n      tag_122\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11192:11238   */\n    tag_405:\n        /* \"#utility.yul\":11122:11244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11250:11395   */\n    tag_282:\n        /* \"#utility.yul\":11304:11311   */\n      0x00\n        /* \"#utility.yul\":11333:11338   */\n      dup2\n        /* \"#utility.yul\":11322:11338   */\n      swap1\n      pop\n        /* \"#utility.yul\":11339:11389   */\n      tag_408\n        /* \"#utility.yul\":11383:11388   */\n      dup3\n        /* \"#utility.yul\":11339:11389   */\n      tag_281\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11250:11395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11401:11546   */\n    tag_283:\n        /* \"#utility.yul\":11466:11475   */\n      0x00\n        /* \"#utility.yul\":11499:11540   */\n      tag_410\n        /* \"#utility.yul\":11534:11539   */\n      dup3\n        /* \"#utility.yul\":11499:11540   */\n      tag_282\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11486:11540   */\n      swap1\n      pop\n        /* \"#utility.yul\":11401:11546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11552:11713   */\n    tag_284:\n        /* \"#utility.yul\":11654:11706   */\n      tag_412\n        /* \"#utility.yul\":11700:11705   */\n      dup2\n        /* \"#utility.yul\":11654:11706   */\n      tag_283\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11649:11652   */\n      dup3\n        /* \"#utility.yul\":11642:11707   */\n      mstore\n        /* \"#utility.yul\":11552:11713   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11719:12302   */\n    tag_119:\n        /* \"#utility.yul\":11911:11915   */\n      0x00\n        /* \"#utility.yul\":11949:11952   */\n      0x80\n        /* \"#utility.yul\":11938:11947   */\n      dup3\n        /* \"#utility.yul\":11934:11953   */\n      add\n        /* \"#utility.yul\":11926:11953   */\n      swap1\n      pop\n        /* \"#utility.yul\":11963:12034   */\n      tag_414\n        /* \"#utility.yul\":12031:12032   */\n      0x00\n        /* \"#utility.yul\":12020:12029   */\n      dup4\n        /* \"#utility.yul\":12016:12033   */\n      add\n        /* \"#utility.yul\":12007:12013   */\n      dup8\n        /* \"#utility.yul\":11963:12034   */\n      tag_271\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12044:12131   */\n      tag_415\n        /* \"#utility.yul\":12127:12129   */\n      0x20\n        /* \"#utility.yul\":12116:12125   */\n      dup4\n        /* \"#utility.yul\":12112:12130   */\n      add\n        /* \"#utility.yul\":12103:12109   */\n      dup7\n        /* \"#utility.yul\":12044:12131   */\n      tag_284\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12141:12213   */\n      tag_416\n        /* \"#utility.yul\":12209:12211   */\n      0x40\n        /* \"#utility.yul\":12198:12207   */\n      dup4\n        /* \"#utility.yul\":12194:12212   */\n      add\n        /* \"#utility.yul\":12185:12191   */\n      dup6\n        /* \"#utility.yul\":12141:12213   */\n      tag_271\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12223:12295   */\n      tag_417\n        /* \"#utility.yul\":12291:12293   */\n      0x60\n        /* \"#utility.yul\":12280:12289   */\n      dup4\n        /* \"#utility.yul\":12276:12294   */\n      add\n        /* \"#utility.yul\":12267:12273   */\n      dup5\n        /* \"#utility.yul\":12223:12295   */\n      tag_271\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11719:12302   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12308:12718   */\n    tag_126:\n        /* \"#utility.yul\":12348:12355   */\n      0x00\n        /* \"#utility.yul\":12371:12391   */\n      tag_419\n        /* \"#utility.yul\":12389:12390   */\n      dup3\n        /* \"#utility.yul\":12371:12391   */\n      tag_264\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12366:12391   */\n      swap2\n      pop\n        /* \"#utility.yul\":12405:12425   */\n      tag_420\n        /* \"#utility.yul\":12423:12424   */\n      dup4\n        /* \"#utility.yul\":12405:12425   */\n      tag_264\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12400:12425   */\n      swap3\n      pop\n        /* \"#utility.yul\":12460:12461   */\n      dup3\n        /* \"#utility.yul\":12457:12458   */\n      dup3\n        /* \"#utility.yul\":12453:12462   */\n      mul\n        /* \"#utility.yul\":12482:12512   */\n      tag_421\n        /* \"#utility.yul\":12500:12511   */\n      dup2\n        /* \"#utility.yul\":12482:12512   */\n      tag_264\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12471:12512   */\n      swap2\n      pop\n        /* \"#utility.yul\":12661:12662   */\n      dup3\n        /* \"#utility.yul\":12652:12659   */\n      dup3\n        /* \"#utility.yul\":12648:12663   */\n      div\n        /* \"#utility.yul\":12645:12646   */\n      dup5\n        /* \"#utility.yul\":12642:12664   */\n      eq\n        /* \"#utility.yul\":12622:12623   */\n      dup4\n        /* \"#utility.yul\":12615:12624   */\n      iszero\n        /* \"#utility.yul\":12595:12678   */\n      or\n        /* \"#utility.yul\":12572:12711   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":12691:12709   */\n      tag_423\n      tag_280\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12572:12711   */\n    tag_422:\n        /* \"#utility.yul\":12356:12718   */\n      pop\n        /* \"#utility.yul\":12308:12718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12724:12904   */\n    tag_285:\n        /* \"#utility.yul\":12772:12849   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12769:12770   */\n      0x00\n        /* \"#utility.yul\":12762:12850   */\n      mstore\n        /* \"#utility.yul\":12869:12873   */\n      0x12\n        /* \"#utility.yul\":12866:12867   */\n      0x04\n        /* \"#utility.yul\":12859:12874   */\n      mstore\n        /* \"#utility.yul\":12893:12897   */\n      0x24\n        /* \"#utility.yul\":12890:12891   */\n      0x00\n        /* \"#utility.yul\":12883:12898   */\n      revert\n        /* \"#utility.yul\":12910:13095   */\n    tag_129:\n        /* \"#utility.yul\":12950:12951   */\n      0x00\n        /* \"#utility.yul\":12967:12987   */\n      tag_426\n        /* \"#utility.yul\":12985:12986   */\n      dup3\n        /* \"#utility.yul\":12967:12987   */\n      tag_264\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12962:12987   */\n      swap2\n      pop\n        /* \"#utility.yul\":13001:13021   */\n      tag_427\n        /* \"#utility.yul\":13019:13020   */\n      dup4\n        /* \"#utility.yul\":13001:13021   */\n      tag_264\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12996:13021   */\n      swap3\n      pop\n        /* \"#utility.yul\":13040:13041   */\n      dup3\n        /* \"#utility.yul\":13030:13065   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":13045:13063   */\n      tag_429\n      tag_285\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13030:13065   */\n    tag_428:\n        /* \"#utility.yul\":13087:13088   */\n      dup3\n        /* \"#utility.yul\":13084:13085   */\n      dup3\n        /* \"#utility.yul\":13080:13089   */\n      div\n        /* \"#utility.yul\":13075:13089   */\n      swap1\n      pop\n        /* \"#utility.yul\":12910:13095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13101:13328   */\n    tag_286:\n        /* \"#utility.yul\":13241:13275   */\n      0x5374616b65206973206e6f7420616374697665206f7220616c72656164792077\n        /* \"#utility.yul\":13237:13238   */\n      0x00\n        /* \"#utility.yul\":13229:13235   */\n      dup3\n        /* \"#utility.yul\":13225:13239   */\n      add\n        /* \"#utility.yul\":13218:13276   */\n      mstore\n        /* \"#utility.yul\":13310:13320   */\n      0x697468647261776e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13305:13307   */\n      0x20\n        /* \"#utility.yul\":13297:13303   */\n      dup3\n        /* \"#utility.yul\":13293:13308   */\n      add\n        /* \"#utility.yul\":13286:13321   */\n      mstore\n        /* \"#utility.yul\":13101:13328   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13334:13700   */\n    tag_287:\n        /* \"#utility.yul\":13476:13479   */\n      0x00\n        /* \"#utility.yul\":13497:13564   */\n      tag_432\n        /* \"#utility.yul\":13561:13563   */\n      0x28\n        /* \"#utility.yul\":13556:13559   */\n      dup4\n        /* \"#utility.yul\":13497:13564   */\n      tag_253\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13490:13564   */\n      swap2\n      pop\n        /* \"#utility.yul\":13573:13666   */\n      tag_433\n        /* \"#utility.yul\":13662:13665   */\n      dup3\n        /* \"#utility.yul\":13573:13666   */\n      tag_286\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13691:13693   */\n      0x40\n        /* \"#utility.yul\":13686:13689   */\n      dup3\n        /* \"#utility.yul\":13682:13694   */\n      add\n        /* \"#utility.yul\":13675:13694   */\n      swap1\n      pop\n        /* \"#utility.yul\":13334:13700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13706:14125   */\n    tag_140:\n        /* \"#utility.yul\":13872:13876   */\n      0x00\n        /* \"#utility.yul\":13910:13912   */\n      0x20\n        /* \"#utility.yul\":13899:13908   */\n      dup3\n        /* \"#utility.yul\":13895:13913   */\n      add\n        /* \"#utility.yul\":13887:13913   */\n      swap1\n      pop\n        /* \"#utility.yul\":13959:13968   */\n      dup2\n        /* \"#utility.yul\":13953:13957   */\n      dup2\n        /* \"#utility.yul\":13949:13969   */\n      sub\n        /* \"#utility.yul\":13945:13946   */\n      0x00\n        /* \"#utility.yul\":13934:13943   */\n      dup4\n        /* \"#utility.yul\":13930:13947   */\n      add\n        /* \"#utility.yul\":13923:13970   */\n      mstore\n        /* \"#utility.yul\":13987:14118   */\n      tag_435\n        /* \"#utility.yul\":14113:14117   */\n      dup2\n        /* \"#utility.yul\":13987:14118   */\n      tag_287\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13979:14118   */\n      swap1\n      pop\n        /* \"#utility.yul\":13706:14125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14131:14306   */\n    tag_288:\n        /* \"#utility.yul\":14271:14298   */\n      0x5374616b6520706572696f64206973206e6f7420656e64656400000000000000\n        /* \"#utility.yul\":14267:14268   */\n      0x00\n        /* \"#utility.yul\":14259:14265   */\n      dup3\n        /* \"#utility.yul\":14255:14269   */\n      add\n        /* \"#utility.yul\":14248:14299   */\n      mstore\n        /* \"#utility.yul\":14131:14306   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14312:14678   */\n    tag_289:\n        /* \"#utility.yul\":14454:14457   */\n      0x00\n        /* \"#utility.yul\":14475:14542   */\n      tag_438\n        /* \"#utility.yul\":14539:14541   */\n      0x19\n        /* \"#utility.yul\":14534:14537   */\n      dup4\n        /* \"#utility.yul\":14475:14542   */\n      tag_253\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14468:14542   */\n      swap2\n      pop\n        /* \"#utility.yul\":14551:14644   */\n      tag_439\n        /* \"#utility.yul\":14640:14643   */\n      dup3\n        /* \"#utility.yul\":14551:14644   */\n      tag_288\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14669:14671   */\n      0x20\n        /* \"#utility.yul\":14664:14667   */\n      dup3\n        /* \"#utility.yul\":14660:14672   */\n      add\n        /* \"#utility.yul\":14653:14672   */\n      swap1\n      pop\n        /* \"#utility.yul\":14312:14678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14684:15103   */\n    tag_143:\n        /* \"#utility.yul\":14850:14854   */\n      0x00\n        /* \"#utility.yul\":14888:14890   */\n      0x20\n        /* \"#utility.yul\":14877:14886   */\n      dup3\n        /* \"#utility.yul\":14873:14891   */\n      add\n        /* \"#utility.yul\":14865:14891   */\n      swap1\n      pop\n        /* \"#utility.yul\":14937:14946   */\n      dup2\n        /* \"#utility.yul\":14931:14935   */\n      dup2\n        /* \"#utility.yul\":14927:14947   */\n      sub\n        /* \"#utility.yul\":14923:14924   */\n      0x00\n        /* \"#utility.yul\":14912:14921   */\n      dup4\n        /* \"#utility.yul\":14908:14925   */\n      add\n        /* \"#utility.yul\":14901:14948   */\n      mstore\n        /* \"#utility.yul\":14965:15096   */\n      tag_441\n        /* \"#utility.yul\":15091:15095   */\n      dup2\n        /* \"#utility.yul\":14965:15096   */\n      tag_289\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":14957:15096   */\n      swap1\n      pop\n        /* \"#utility.yul\":14684:15103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15109:15441   */\n    tag_149:\n        /* \"#utility.yul\":15230:15234   */\n      0x00\n        /* \"#utility.yul\":15268:15270   */\n      0x40\n        /* \"#utility.yul\":15257:15266   */\n      dup3\n        /* \"#utility.yul\":15253:15271   */\n      add\n        /* \"#utility.yul\":15245:15271   */\n      swap1\n      pop\n        /* \"#utility.yul\":15281:15352   */\n      tag_443\n        /* \"#utility.yul\":15349:15350   */\n      0x00\n        /* \"#utility.yul\":15338:15347   */\n      dup4\n        /* \"#utility.yul\":15334:15351   */\n      add\n        /* \"#utility.yul\":15325:15331   */\n      dup6\n        /* \"#utility.yul\":15281:15352   */\n      tag_271\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15362:15434   */\n      tag_444\n        /* \"#utility.yul\":15430:15432   */\n      0x20\n        /* \"#utility.yul\":15419:15428   */\n      dup4\n        /* \"#utility.yul\":15415:15433   */\n      add\n        /* \"#utility.yul\":15406:15412   */\n      dup5\n        /* \"#utility.yul\":15362:15434   */\n      tag_271\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15109:15441   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15447:15889   */\n    tag_216:\n        /* \"#utility.yul\":15596:15600   */\n      0x00\n        /* \"#utility.yul\":15634:15636   */\n      0x60\n        /* \"#utility.yul\":15623:15632   */\n      dup3\n        /* \"#utility.yul\":15619:15637   */\n      add\n        /* \"#utility.yul\":15611:15637   */\n      swap1\n      pop\n        /* \"#utility.yul\":15647:15718   */\n      tag_446\n        /* \"#utility.yul\":15715:15716   */\n      0x00\n        /* \"#utility.yul\":15704:15713   */\n      dup4\n        /* \"#utility.yul\":15700:15717   */\n      add\n        /* \"#utility.yul\":15691:15697   */\n      dup7\n        /* \"#utility.yul\":15647:15718   */\n      tag_274\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15728:15800   */\n      tag_447\n        /* \"#utility.yul\":15796:15798   */\n      0x20\n        /* \"#utility.yul\":15785:15794   */\n      dup4\n        /* \"#utility.yul\":15781:15799   */\n      add\n        /* \"#utility.yul\":15772:15778   */\n      dup6\n        /* \"#utility.yul\":15728:15800   */\n      tag_271\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":15810:15882   */\n      tag_448\n        /* \"#utility.yul\":15878:15880   */\n      0x40\n        /* \"#utility.yul\":15867:15876   */\n      dup4\n        /* \"#utility.yul\":15863:15881   */\n      add\n        /* \"#utility.yul\":15854:15860   */\n      dup5\n        /* \"#utility.yul\":15810:15882   */\n      tag_271\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":15447:15889   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201ee663003e08b037dccfe8f59a58f8e1e756ade2d622ead395d343b21768325364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1052": {
									"entryPoint": null,
									"id": 1052,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 715,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 512,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 848,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 707,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2858,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13691:7",
										"nodeType": "YulBlock",
										"src": "0:13691:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:77:7",
													"nodeType": "YulBlock",
													"src": "1672:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:7"
																},
																"nativeSrc": "1683:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:7"
															},
															"nativeSrc": "1683:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nativeSrc": "1722:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nativeSrc": "1715:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:7"
															},
															"nativeSrc": "1715:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:139:7"
											},
											{
												"body": {
													"nativeSrc": "1850:339:7",
													"nodeType": "YulBlock",
													"src": "1850:339:7",
													"statements": [
														{
															"nativeSrc": "1860:75:7",
															"nodeType": "YulAssignment",
															"src": "1860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:7"
																		},
																		"nativeSrc": "1885:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:7"
																},
																"nativeSrc": "1869:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:7"
																},
																"nativeSrc": "1944:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:7"
															},
															"nativeSrc": "1944:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:7"
														},
														{
															"nativeSrc": "1974:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nativeSrc": "1985:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:7",
																"nodeType": "YulBlock",
																"src": "2039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:7"
																			},
																			"nativeSrc": "2041:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:7"
																		},
																		"nativeSrc": "2041:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:7"
																		},
																		"nativeSrc": "2016:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:7"
																},
																"nativeSrc": "2013:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:7"
															},
															"nativeSrc": "2010:112:7",
															"nodeType": "YulIf",
															"src": "2010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:7"
																},
																"nativeSrc": "2131:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:7"
															},
															"nativeSrc": "2131:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:7",
														"nodeType": "YulTypedName",
														"src": "1823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:7",
														"nodeType": "YulTypedName",
														"src": "1828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:7",
														"nodeType": "YulTypedName",
														"src": "1836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:7",
														"nodeType": "YulTypedName",
														"src": "1844:5:7",
														"type": ""
													}
												],
												"src": "1755:434:7"
											},
											{
												"body": {
													"nativeSrc": "2282:282:7",
													"nodeType": "YulBlock",
													"src": "2282:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:7",
																"nodeType": "YulBlock",
																"src": "2331:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:7"
																			},
																			"nativeSrc": "2333:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:7"
																		},
																		"nativeSrc": "2333:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:7"
																				},
																				"nativeSrc": "2306:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:7"
																		},
																		"nativeSrc": "2302:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:7"
																},
																"nativeSrc": "2295:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:7"
															},
															"nativeSrc": "2292:122:7",
															"nodeType": "YulIf",
															"src": "2292:122:7"
														},
														{
															"nativeSrc": "2423:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:7"
																},
																"nativeSrc": "2437:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:7",
															"nodeType": "YulAssignment",
															"src": "2459:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:7"
																},
																"nativeSrc": "2468:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:7",
														"nodeType": "YulTypedName",
														"src": "2260:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:7",
														"nodeType": "YulTypedName",
														"src": "2268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:7",
														"nodeType": "YulTypedName",
														"src": "2276:5:7",
														"type": ""
													}
												],
												"src": "2209:355:7"
											},
											{
												"body": {
													"nativeSrc": "2615:32:7",
													"nodeType": "YulBlock",
													"src": "2615:32:7",
													"statements": [
														{
															"nativeSrc": "2625:16:7",
															"nodeType": "YulAssignment",
															"src": "2625:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:7",
																"nodeType": "YulIdentifier",
																"src": "2636:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:7",
														"nodeType": "YulTypedName",
														"src": "2597:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:7",
														"nodeType": "YulTypedName",
														"src": "2607:7:7",
														"type": ""
													}
												],
												"src": "2570:77:7"
											},
											{
												"body": {
													"nativeSrc": "2696:79:7",
													"nodeType": "YulBlock",
													"src": "2696:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:7",
																"nodeType": "YulBlock",
																"src": "2753:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:7"
																			},
																			"nativeSrc": "2755:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:7"
																		},
																		"nativeSrc": "2755:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:7"
																				},
																				"nativeSrc": "2726:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:7"
																		},
																		"nativeSrc": "2716:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:7"
																},
																"nativeSrc": "2709:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:7"
															},
															"nativeSrc": "2706:63:7",
															"nodeType": "YulIf",
															"src": "2706:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:7",
														"nodeType": "YulTypedName",
														"src": "2689:5:7",
														"type": ""
													}
												],
												"src": "2653:122:7"
											},
											{
												"body": {
													"nativeSrc": "2844:80:7",
													"nodeType": "YulBlock",
													"src": "2844:80:7",
													"statements": [
														{
															"nativeSrc": "2854:22:7",
															"nodeType": "YulAssignment",
															"src": "2854:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:7"
																},
																"nativeSrc": "2863:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:7"
																},
																"nativeSrc": "2885:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:7"
															},
															"nativeSrc": "2885:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:7",
														"nodeType": "YulTypedName",
														"src": "2822:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:7",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:7",
														"nodeType": "YulTypedName",
														"src": "2838:5:7",
														"type": ""
													}
												],
												"src": "2781:143:7"
											},
											{
												"body": {
													"nativeSrc": "3061:878:7",
													"nodeType": "YulBlock",
													"src": "3061:878:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3107:83:7",
																"nodeType": "YulBlock",
																"src": "3107:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3109:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3109:77:7"
																			},
																			"nativeSrc": "3109:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3109:79:7"
																		},
																		"nativeSrc": "3109:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3082:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3078:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:7"
																		},
																		"nativeSrc": "3078:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3103:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3074:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:7"
																},
																"nativeSrc": "3074:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3074:32:7"
															},
															"nativeSrc": "3071:119:7",
															"nodeType": "YulIf",
															"src": "3071:119:7"
														},
														{
															"nativeSrc": "3200:291:7",
															"nodeType": "YulBlock",
															"src": "3200:291:7",
															"statements": [
																{
																	"nativeSrc": "3215:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3215:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3239:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3239:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3250:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3250:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3235:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3235:3:7"
																				},
																				"nativeSrc": "3235:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3235:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3229:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3229:5:7"
																		},
																		"nativeSrc": "3229:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3219:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3219:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3300:83:7",
																		"nodeType": "YulBlock",
																		"src": "3300:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3302:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3302:77:7"
																					},
																					"nativeSrc": "3302:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3302:79:7"
																				},
																				"nativeSrc": "3302:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3302:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3272:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3272:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3280:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3269:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3269:2:7"
																		},
																		"nativeSrc": "3269:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:30:7"
																	},
																	"nativeSrc": "3266:117:7",
																	"nodeType": "YulIf",
																	"src": "3266:117:7"
																},
																{
																	"nativeSrc": "3397:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3397:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:7"
																				},
																				"nativeSrc": "3449:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3407:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3407:41:7"
																		},
																		"nativeSrc": "3407:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3397:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3397:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3501:292:7",
															"nodeType": "YulBlock",
															"src": "3501:292:7",
															"statements": [
																{
																	"nativeSrc": "3516:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3540:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3551:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3551:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3536:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:7"
																				},
																				"nativeSrc": "3536:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3536:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3530:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3530:5:7"
																		},
																		"nativeSrc": "3530:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3520:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3602:83:7",
																		"nodeType": "YulBlock",
																		"src": "3602:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3604:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3604:77:7"
																					},
																					"nativeSrc": "3604:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3604:79:7"
																				},
																				"nativeSrc": "3604:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3604:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3574:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3582:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3582:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3571:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:7"
																		},
																		"nativeSrc": "3571:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:30:7"
																	},
																	"nativeSrc": "3568:117:7",
																	"nodeType": "YulIf",
																	"src": "3568:117:7"
																},
																{
																	"nativeSrc": "3699:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3699:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3755:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3766:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3751:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:7"
																				},
																				"nativeSrc": "3751:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3775:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3709:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3709:41:7"
																		},
																		"nativeSrc": "3709:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3709:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3803:129:7",
															"nodeType": "YulBlock",
															"src": "3803:129:7",
															"statements": [
																{
																	"nativeSrc": "3818:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3822:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3848:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3848:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3894:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3894:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3905:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3905:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3890:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3890:3:7"
																				},
																				"nativeSrc": "3890:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3890:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3914:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3914:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3858:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3858:31:7"
																		},
																		"nativeSrc": "3858:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3848:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "2930:1009:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3015:9:7",
														"nodeType": "YulTypedName",
														"src": "3015:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3026:7:7",
														"nodeType": "YulTypedName",
														"src": "3026:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3038:6:7",
														"nodeType": "YulTypedName",
														"src": "3038:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3046:6:7",
														"nodeType": "YulTypedName",
														"src": "3046:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3054:6:7",
														"nodeType": "YulTypedName",
														"src": "3054:6:7",
														"type": ""
													}
												],
												"src": "2930:1009:7"
											},
											{
												"body": {
													"nativeSrc": "4004:40:7",
													"nodeType": "YulBlock",
													"src": "4004:40:7",
													"statements": [
														{
															"nativeSrc": "4015:22:7",
															"nodeType": "YulAssignment",
															"src": "4015:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:7"
																},
																"nativeSrc": "4025:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4025:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3945:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3987:5:7",
														"nodeType": "YulTypedName",
														"src": "3987:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3997:6:7",
														"nodeType": "YulTypedName",
														"src": "3997:6:7",
														"type": ""
													}
												],
												"src": "3945:99:7"
											},
											{
												"body": {
													"nativeSrc": "4078:152:7",
													"nodeType": "YulBlock",
													"src": "4078:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4095:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4098:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:7"
																},
																"nativeSrc": "4088:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4088:88:7"
															},
															"nativeSrc": "4088:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4088:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:7"
																},
																"nativeSrc": "4185:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4185:15:7"
															},
															"nativeSrc": "4185:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4185:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4216:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4219:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4209:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:7"
																},
																"nativeSrc": "4209:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4209:15:7"
															},
															"nativeSrc": "4209:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4209:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4050:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4050:180:7"
											},
											{
												"body": {
													"nativeSrc": "4287:269:7",
													"nodeType": "YulBlock",
													"src": "4287:269:7",
													"statements": [
														{
															"nativeSrc": "4297:22:7",
															"nodeType": "YulAssignment",
															"src": "4297:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4311:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4311:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:7"
																},
																"nativeSrc": "4307:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4307:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:7"
																}
															]
														},
														{
															"nativeSrc": "4328:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4328:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4358:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4358:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4364:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:7"
																},
																"nativeSrc": "4354:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4354:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4332:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4332:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4405:51:7",
																"nodeType": "YulBlock",
																"src": "4405:51:7",
																"statements": [
																	{
																		"nativeSrc": "4419:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4419:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4433:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4429:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4429:3:7"
																			},
																			"nativeSrc": "4429:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4419:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4385:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4385:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4378:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:7"
																},
																"nativeSrc": "4378:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4378:26:7"
															},
															"nativeSrc": "4375:81:7",
															"nodeType": "YulIf",
															"src": "4375:81:7"
														},
														{
															"body": {
																"nativeSrc": "4508:42:7",
																"nodeType": "YulBlock",
																"src": "4508:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4522:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4522:16:7"
																			},
																			"nativeSrc": "4522:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4522:18:7"
																		},
																		"nativeSrc": "4522:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4472:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4472:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4495:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4495:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4503:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4492:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4492:2:7"
																		},
																		"nativeSrc": "4492:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4469:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4469:2:7"
																},
																"nativeSrc": "4469:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4469:38:7"
															},
															"nativeSrc": "4466:84:7",
															"nodeType": "YulIf",
															"src": "4466:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4236:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4271:4:7",
														"nodeType": "YulTypedName",
														"src": "4271:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4280:6:7",
														"nodeType": "YulTypedName",
														"src": "4280:6:7",
														"type": ""
													}
												],
												"src": "4236:320:7"
											},
											{
												"body": {
													"nativeSrc": "4616:87:7",
													"nodeType": "YulBlock",
													"src": "4616:87:7",
													"statements": [
														{
															"nativeSrc": "4626:11:7",
															"nodeType": "YulAssignment",
															"src": "4626:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4634:3:7",
																"nodeType": "YulIdentifier",
																"src": "4634:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4654:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4657:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:7"
																},
																"nativeSrc": "4647:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4647:14:7"
															},
															"nativeSrc": "4647:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4647:14:7"
														},
														{
															"nativeSrc": "4670:26:7",
															"nodeType": "YulAssignment",
															"src": "4670:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4688:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4688:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4691:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4678:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4678:9:7"
																},
																"nativeSrc": "4678:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4678:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4670:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4670:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4562:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4603:3:7",
														"nodeType": "YulTypedName",
														"src": "4603:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4611:4:7",
														"nodeType": "YulTypedName",
														"src": "4611:4:7",
														"type": ""
													}
												],
												"src": "4562:141:7"
											},
											{
												"body": {
													"nativeSrc": "4753:49:7",
													"nodeType": "YulBlock",
													"src": "4753:49:7",
													"statements": [
														{
															"nativeSrc": "4763:33:7",
															"nodeType": "YulAssignment",
															"src": "4763:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4781:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4781:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4788:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4788:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4777:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:7"
																		},
																		"nativeSrc": "4777:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:7"
																},
																"nativeSrc": "4773:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4763:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4709:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4736:5:7",
														"nodeType": "YulTypedName",
														"src": "4736:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4746:6:7",
														"nodeType": "YulTypedName",
														"src": "4746:6:7",
														"type": ""
													}
												],
												"src": "4709:93:7"
											},
											{
												"body": {
													"nativeSrc": "4861:54:7",
													"nodeType": "YulBlock",
													"src": "4861:54:7",
													"statements": [
														{
															"nativeSrc": "4871:37:7",
															"nodeType": "YulAssignment",
															"src": "4871:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4896:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4896:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4902:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4902:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:7"
																},
																"nativeSrc": "4892:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4892:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4871:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4871:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4808:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4836:4:7",
														"nodeType": "YulTypedName",
														"src": "4836:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4842:5:7",
														"nodeType": "YulTypedName",
														"src": "4842:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4852:8:7",
														"nodeType": "YulTypedName",
														"src": "4852:8:7",
														"type": ""
													}
												],
												"src": "4808:107:7"
											},
											{
												"body": {
													"nativeSrc": "4997:317:7",
													"nodeType": "YulBlock",
													"src": "4997:317:7",
													"statements": [
														{
															"nativeSrc": "5007:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5007:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5028:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5028:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5024:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:7"
																},
																"nativeSrc": "5024:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5024:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5011:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5011:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5051:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5082:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5093:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5063:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5063:18:7"
																},
																"nativeSrc": "5063:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5063:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5055:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5055:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5169:51:7",
															"nodeType": "YulAssignment",
															"src": "5169:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5200:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5211:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5211:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5181:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5181:18:7"
																},
																"nativeSrc": "5181:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5181:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5169:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5169:8:7"
																}
															]
														},
														{
															"nativeSrc": "5229:30:7",
															"nodeType": "YulAssignment",
															"src": "5229:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5242:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5242:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5253:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5253:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:7"
																		},
																		"nativeSrc": "5249:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:7"
																},
																"nativeSrc": "5238:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5238:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5229:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5229:5:7"
																}
															]
														},
														{
															"nativeSrc": "5268:40:7",
															"nodeType": "YulAssignment",
															"src": "5268:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5281:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5292:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5292:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5302:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5302:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:7"
																		},
																		"nativeSrc": "5288:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5278:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5278:2:7"
																},
																"nativeSrc": "5278:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5278:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4921:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:7",
														"nodeType": "YulTypedName",
														"src": "4958:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4965:10:7",
														"nodeType": "YulTypedName",
														"src": "4965:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4977:8:7",
														"nodeType": "YulTypedName",
														"src": "4977:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4990:6:7",
														"nodeType": "YulTypedName",
														"src": "4990:6:7",
														"type": ""
													}
												],
												"src": "4921:393:7"
											},
											{
												"body": {
													"nativeSrc": "5352:28:7",
													"nodeType": "YulBlock",
													"src": "5352:28:7",
													"statements": [
														{
															"nativeSrc": "5362:12:7",
															"nodeType": "YulAssignment",
															"src": "5362:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5369:5:7",
																"nodeType": "YulIdentifier",
																"src": "5369:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5362:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5320:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5338:5:7",
														"nodeType": "YulTypedName",
														"src": "5338:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5348:3:7",
														"nodeType": "YulTypedName",
														"src": "5348:3:7",
														"type": ""
													}
												],
												"src": "5320:60:7"
											},
											{
												"body": {
													"nativeSrc": "5446:82:7",
													"nodeType": "YulBlock",
													"src": "5446:82:7",
													"statements": [
														{
															"nativeSrc": "5456:66:7",
															"nodeType": "YulAssignment",
															"src": "5456:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5514:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5514:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5496:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5496:17:7"
																				},
																				"nativeSrc": "5496:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5487:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5487:8:7"
																		},
																		"nativeSrc": "5487:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5487:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5469:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:7"
																},
																"nativeSrc": "5469:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5469:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5456:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5386:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5426:5:7",
														"nodeType": "YulTypedName",
														"src": "5426:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5436:9:7",
														"nodeType": "YulTypedName",
														"src": "5436:9:7",
														"type": ""
													}
												],
												"src": "5386:142:7"
											},
											{
												"body": {
													"nativeSrc": "5581:28:7",
													"nodeType": "YulBlock",
													"src": "5581:28:7",
													"statements": [
														{
															"nativeSrc": "5591:12:7",
															"nodeType": "YulAssignment",
															"src": "5591:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5598:5:7",
																"nodeType": "YulIdentifier",
																"src": "5598:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5591:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5534:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:7",
														"nodeType": "YulTypedName",
														"src": "5567:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5577:3:7",
														"nodeType": "YulTypedName",
														"src": "5577:3:7",
														"type": ""
													}
												],
												"src": "5534:75:7"
											},
											{
												"body": {
													"nativeSrc": "5691:193:7",
													"nodeType": "YulBlock",
													"src": "5691:193:7",
													"statements": [
														{
															"nativeSrc": "5701:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5701:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5756:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5756:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5725:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5725:30:7"
																},
																"nativeSrc": "5725:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5725:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5705:16:7",
																	"nodeType": "YulTypedName",
																	"src": "5705:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5780:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5820:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "5820:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5814:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5814:5:7"
																				},
																				"nativeSrc": "5814:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5827:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5827:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5859:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "5859:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5835:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "5835:23:7"
																				},
																				"nativeSrc": "5835:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5835:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5786:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "5786:27:7"
																		},
																		"nativeSrc": "5786:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:7"
																},
																"nativeSrc": "5773:105:7",
																"nodeType": "YulFunctionCall",
																"src": "5773:105:7"
															},
															"nativeSrc": "5773:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "5773:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5615:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5668:4:7",
														"nodeType": "YulTypedName",
														"src": "5668:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5682:7:7",
														"nodeType": "YulTypedName",
														"src": "5682:7:7",
														"type": ""
													}
												],
												"src": "5615:269:7"
											},
											{
												"body": {
													"nativeSrc": "5939:24:7",
													"nodeType": "YulBlock",
													"src": "5939:24:7",
													"statements": [
														{
															"nativeSrc": "5949:8:7",
															"nodeType": "YulAssignment",
															"src": "5949:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5956:1:7",
																"nodeType": "YulLiteral",
																"src": "5956:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5949:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5890:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5935:3:7",
														"nodeType": "YulTypedName",
														"src": "5935:3:7",
														"type": ""
													}
												],
												"src": "5890:73:7"
											},
											{
												"body": {
													"nativeSrc": "6022:136:7",
													"nodeType": "YulBlock",
													"src": "6022:136:7",
													"statements": [
														{
															"nativeSrc": "6032:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6032:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6046:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6046:30:7"
																},
																"nativeSrc": "6046:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6046:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6036:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6036:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6131:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6131:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6137:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6137:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6145:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6087:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6087:43:7"
																},
																"nativeSrc": "6087:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6087:65:7"
															},
															"nativeSrc": "6087:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6087:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5969:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6008:4:7",
														"nodeType": "YulTypedName",
														"src": "6008:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6014:6:7",
														"nodeType": "YulTypedName",
														"src": "6014:6:7",
														"type": ""
													}
												],
												"src": "5969:189:7"
											},
											{
												"body": {
													"nativeSrc": "6214:136:7",
													"nodeType": "YulBlock",
													"src": "6214:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6281:63:7",
																"nodeType": "YulBlock",
																"src": "6281:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6325:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6325:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6332:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6332:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6295:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6295:29:7"
																			},
																			"nativeSrc": "6295:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6295:39:7"
																		},
																		"nativeSrc": "6295:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6295:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6234:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6234:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6231:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6231:2:7"
																},
																"nativeSrc": "6231:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6231:14:7"
															},
															"nativeSrc": "6224:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6246:26:7",
																"nodeType": "YulBlock",
																"src": "6246:26:7",
																"statements": [
																	{
																		"nativeSrc": "6248:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6248:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6261:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6261:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6268:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6257:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6257:3:7"
																			},
																			"nativeSrc": "6257:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6257:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6248:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6248:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6228:2:7",
																"nodeType": "YulBlock",
																"src": "6228:2:7",
																"statements": []
															},
															"src": "6224:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6164:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6202:5:7",
														"nodeType": "YulTypedName",
														"src": "6202:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6209:3:7",
														"nodeType": "YulTypedName",
														"src": "6209:3:7",
														"type": ""
													}
												],
												"src": "6164:186:7"
											},
											{
												"body": {
													"nativeSrc": "6435:464:7",
													"nodeType": "YulBlock",
													"src": "6435:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6461:431:7",
																"nodeType": "YulBlock",
																"src": "6461:431:7",
																"statements": [
																	{
																		"nativeSrc": "6475:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6475:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6523:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6523:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6491:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6491:31:7"
																			},
																			"nativeSrc": "6491:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6479:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6479:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6542:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6542:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6565:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6565:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6593:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6593:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6575:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6575:17:7"
																					},
																					"nativeSrc": "6575:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6575:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6561:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6561:3:7"
																			},
																			"nativeSrc": "6561:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6561:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6546:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6546:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6762:27:7",
																			"nodeType": "YulBlock",
																			"src": "6762:27:7",
																			"statements": [
																				{
																					"nativeSrc": "6764:23:7",
																					"nodeType": "YulAssignment",
																					"src": "6764:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6779:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6779:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6764:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "6764:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6746:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6746:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6758:2:7",
																					"nodeType": "YulLiteral",
																					"src": "6758:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6743:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6743:2:7"
																			},
																			"nativeSrc": "6743:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:7"
																		},
																		"nativeSrc": "6740:49:7",
																		"nodeType": "YulIf",
																		"src": "6740:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6831:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "6831:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6848:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6848:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6876:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6876:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6858:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "6858:17:7"
																							},
																							"nativeSrc": "6858:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6858:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6844:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6844:3:7"
																					},
																					"nativeSrc": "6844:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6844:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6802:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "6802:28:7"
																			},
																			"nativeSrc": "6802:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6802:80:7"
																		},
																		"nativeSrc": "6802:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6802:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6452:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6452:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6449:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6449:2:7"
																},
																"nativeSrc": "6449:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6449:11:7"
															},
															"nativeSrc": "6446:446:7",
															"nodeType": "YulIf",
															"src": "6446:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6356:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6411:5:7",
														"nodeType": "YulTypedName",
														"src": "6411:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6418:3:7",
														"nodeType": "YulTypedName",
														"src": "6418:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6423:10:7",
														"nodeType": "YulTypedName",
														"src": "6423:10:7",
														"type": ""
													}
												],
												"src": "6356:543:7"
											},
											{
												"body": {
													"nativeSrc": "6968:54:7",
													"nodeType": "YulBlock",
													"src": "6968:54:7",
													"statements": [
														{
															"nativeSrc": "6978:37:7",
															"nodeType": "YulAssignment",
															"src": "6978:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7003:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7003:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7009:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7009:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:7"
																},
																"nativeSrc": "6999:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6999:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6978:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6978:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6905:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6943:4:7",
														"nodeType": "YulTypedName",
														"src": "6943:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6949:5:7",
														"nodeType": "YulTypedName",
														"src": "6949:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6959:8:7",
														"nodeType": "YulTypedName",
														"src": "6959:8:7",
														"type": ""
													}
												],
												"src": "6905:117:7"
											},
											{
												"body": {
													"nativeSrc": "7079:118:7",
													"nodeType": "YulBlock",
													"src": "7079:118:7",
													"statements": [
														{
															"nativeSrc": "7089:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7089:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7141:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7141:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7134:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:7"
																				},
																				"nativeSrc": "7134:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7153:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7153:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7149:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:7"
																				},
																				"nativeSrc": "7149:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7149:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7105:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7105:28:7"
																		},
																		"nativeSrc": "7105:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:7"
																},
																"nativeSrc": "7101:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7101:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7093:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7093:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7166:25:7",
															"nodeType": "YulAssignment",
															"src": "7166:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7180:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7180:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7186:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7186:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:7"
																},
																"nativeSrc": "7176:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7176:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7166:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7028:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7056:4:7",
														"nodeType": "YulTypedName",
														"src": "7056:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7062:5:7",
														"nodeType": "YulTypedName",
														"src": "7062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7072:6:7",
														"nodeType": "YulTypedName",
														"src": "7072:6:7",
														"type": ""
													}
												],
												"src": "7028:169:7"
											},
											{
												"body": {
													"nativeSrc": "7283:214:7",
													"nodeType": "YulBlock",
													"src": "7283:214:7",
													"statements": [
														{
															"nativeSrc": "7416:37:7",
															"nodeType": "YulAssignment",
															"src": "7416:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7443:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7449:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7449:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7424:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7424:18:7"
																},
																"nativeSrc": "7424:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7424:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7416:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:7"
																}
															]
														},
														{
															"nativeSrc": "7462:29:7",
															"nodeType": "YulAssignment",
															"src": "7462:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7473:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7473:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7486:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7486:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:7"
																		},
																		"nativeSrc": "7479:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7479:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7470:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7470:2:7"
																},
																"nativeSrc": "7470:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7470:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7462:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7202:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7264:4:7",
														"nodeType": "YulTypedName",
														"src": "7264:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7270:3:7",
														"nodeType": "YulTypedName",
														"src": "7270:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7278:4:7",
														"nodeType": "YulTypedName",
														"src": "7278:4:7",
														"type": ""
													}
												],
												"src": "7202:295:7"
											},
											{
												"body": {
													"nativeSrc": "7594:1303:7",
													"nodeType": "YulBlock",
													"src": "7594:1303:7",
													"statements": [
														{
															"nativeSrc": "7605:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7605:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7619:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7619:32:7"
																},
																"nativeSrc": "7619:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7619:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7609:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7609:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7741:22:7",
																"nodeType": "YulBlock",
																"src": "7741:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7743:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7743:16:7"
																			},
																			"nativeSrc": "7743:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:18:7"
																		},
																		"nativeSrc": "7743:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7713:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7713:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7721:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7721:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7710:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7710:2:7"
																},
																"nativeSrc": "7710:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7710:30:7"
															},
															"nativeSrc": "7707:56:7",
															"nodeType": "YulIf",
															"src": "7707:56:7"
														},
														{
															"nativeSrc": "7773:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7773:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7819:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7819:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7813:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7813:5:7"
																		},
																		"nativeSrc": "7813:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7787:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "7787:25:7"
																},
																"nativeSrc": "7787:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7787:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7777:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7777:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7918:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7924:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7932:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7872:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "7872:45:7"
																},
																"nativeSrc": "7872:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7872:67:7"
															},
															"nativeSrc": "7872:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7872:67:7"
														},
														{
															"nativeSrc": "7949:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7949:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7966:1:7",
																"nodeType": "YulLiteral",
																"src": "7966:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7953:9:7",
																	"nodeType": "YulTypedName",
																	"src": "7953:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7977:17:7",
															"nodeType": "YulAssignment",
															"src": "7977:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7990:4:7",
																"nodeType": "YulLiteral",
																"src": "7990:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7977:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7977:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8041:611:7",
																		"nodeType": "YulBlock",
																		"src": "8041:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8055:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8055:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8074:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8074:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8086:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8086:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8082:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8082:3:7"
																							},
																							"nativeSrc": "8082:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8082:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8070:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8070:3:7"
																					},
																					"nativeSrc": "8070:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8070:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8059:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8059:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8106:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8106:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8152:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8120:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8120:31:7"
																					},
																					"nativeSrc": "8120:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8120:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8110:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8110:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8170:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8170:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8179:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8179:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8174:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8174:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8238:163:7",
																					"nodeType": "YulBlock",
																					"src": "8238:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8263:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8263:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8281:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8281:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8286:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8286:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8277:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8277:3:7"
																												},
																												"nativeSrc": "8277:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8277:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8271:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8271:5:7"
																										},
																										"nativeSrc": "8271:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8271:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8256:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8256:6:7"
																								},
																								"nativeSrc": "8256:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8256:42:7"
																							},
																							"nativeSrc": "8256:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8256:42:7"
																						},
																						{
																							"nativeSrc": "8315:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8315:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8329:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8329:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8337:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8325:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8325:3:7"
																								},
																								"nativeSrc": "8325:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8325:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8315:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8315:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8356:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8356:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8373:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8373:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8384:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8384:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8369:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8369:3:7"
																								},
																								"nativeSrc": "8369:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8369:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8356:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8356:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8204:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8204:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8207:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8207:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8201:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8201:2:7"
																					},
																					"nativeSrc": "8201:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8201:14:7"
																				},
																				"nativeSrc": "8193:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8216:21:7",
																					"nodeType": "YulBlock",
																					"src": "8216:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8218:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8218:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8227:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8227:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8230:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8230:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8223:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8223:3:7"
																								},
																								"nativeSrc": "8223:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8223:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8218:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8218:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8197:3:7",
																					"nodeType": "YulBlock",
																					"src": "8197:3:7",
																					"statements": []
																				},
																				"src": "8193:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8437:156:7",
																					"nodeType": "YulBlock",
																					"src": "8437:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8455:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8455:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8482:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8482:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8487:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8487:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8478:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8478:3:7"
																										},
																										"nativeSrc": "8478:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8478:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8472:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8472:5:7"
																								},
																								"nativeSrc": "8472:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8472:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8459:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8459:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8522:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8522:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8549:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8549:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8564:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8564:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8572:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8572:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8560:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8560:3:7"
																												},
																												"nativeSrc": "8560:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8560:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8530:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8530:18:7"
																										},
																										"nativeSrc": "8530:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8530:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8515:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8515:6:7"
																								},
																								"nativeSrc": "8515:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8515:64:7"
																							},
																							"nativeSrc": "8515:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8515:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8420:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8420:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8429:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8429:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8417:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8417:2:7"
																					},
																					"nativeSrc": "8417:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8417:19:7"
																				},
																				"nativeSrc": "8414:179:7",
																				"nodeType": "YulIf",
																				"src": "8414:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8613:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8613:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8627:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8627:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8635:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8635:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8623:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8623:3:7"
																									},
																									"nativeSrc": "8623:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8623:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8639:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8639:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8619:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8619:3:7"
																							},
																							"nativeSrc": "8619:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8619:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8606:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8606:6:7"
																					},
																					"nativeSrc": "8606:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8606:36:7"
																				},
																				"nativeSrc": "8606:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8606:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8034:618:7",
																	"nodeType": "YulCase",
																	"src": "8034:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8039:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8039:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8669:222:7",
																		"nodeType": "YulBlock",
																		"src": "8669:222:7",
																		"statements": [
																			{
																				"nativeSrc": "8683:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8683:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8696:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8696:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8687:5:7",
																						"nodeType": "YulTypedName",
																						"src": "8687:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8720:67:7",
																					"nodeType": "YulBlock",
																					"src": "8720:67:7",
																					"statements": [
																						{
																							"nativeSrc": "8738:35:7",
																							"nodeType": "YulAssignment",
																							"src": "8738:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8757:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8757:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8762:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8762:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8753:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8753:3:7"
																										},
																										"nativeSrc": "8753:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8753:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8747:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8747:5:7"
																								},
																								"nativeSrc": "8747:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8747:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8738:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8738:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8713:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8713:6:7"
																				},
																				"nativeSrc": "8710:77:7",
																				"nodeType": "YulIf",
																				"src": "8710:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8807:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8807:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8866:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8866:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8873:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8873:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8813:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "8813:52:7"
																							},
																							"nativeSrc": "8813:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8813:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8800:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8800:6:7"
																					},
																					"nativeSrc": "8800:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8800:81:7"
																				},
																				"nativeSrc": "8800:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8800:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8661:230:7",
																	"nodeType": "YulCase",
																	"src": "8661:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8014:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8011:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8011:2:7"
																},
																"nativeSrc": "8011:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8011:14:7"
															},
															"nativeSrc": "8004:887:7",
															"nodeType": "YulSwitch",
															"src": "8004:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7502:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7583:4:7",
														"nodeType": "YulTypedName",
														"src": "7583:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7589:3:7",
														"nodeType": "YulTypedName",
														"src": "7589:3:7",
														"type": ""
													}
												],
												"src": "7502:1395:7"
											},
											{
												"body": {
													"nativeSrc": "8948:81:7",
													"nodeType": "YulBlock",
													"src": "8948:81:7",
													"statements": [
														{
															"nativeSrc": "8958:65:7",
															"nodeType": "YulAssignment",
															"src": "8958:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8973:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8973:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8980:42:7",
																		"nodeType": "YulLiteral",
																		"src": "8980:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:7"
																},
																"nativeSrc": "8969:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8969:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8958:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8958:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8903:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8930:5:7",
														"nodeType": "YulTypedName",
														"src": "8930:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8940:7:7",
														"nodeType": "YulTypedName",
														"src": "8940:7:7",
														"type": ""
													}
												],
												"src": "8903:126:7"
											},
											{
												"body": {
													"nativeSrc": "9080:51:7",
													"nodeType": "YulBlock",
													"src": "9080:51:7",
													"statements": [
														{
															"nativeSrc": "9090:35:7",
															"nodeType": "YulAssignment",
															"src": "9090:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9119:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9119:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9101:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9101:17:7"
																},
																"nativeSrc": "9101:24:7",
																"nodeType": "YulFunctionCall",
																"src": "9101:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9090:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9090:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9035:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9062:5:7",
														"nodeType": "YulTypedName",
														"src": "9062:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9072:7:7",
														"nodeType": "YulTypedName",
														"src": "9072:7:7",
														"type": ""
													}
												],
												"src": "9035:96:7"
											},
											{
												"body": {
													"nativeSrc": "9202:53:7",
													"nodeType": "YulBlock",
													"src": "9202:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9242:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9242:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9224:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9224:17:7"
																		},
																		"nativeSrc": "9224:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:7"
																},
																"nativeSrc": "9212:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9212:37:7"
															},
															"nativeSrc": "9212:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9212:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9137:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9190:5:7",
														"nodeType": "YulTypedName",
														"src": "9190:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9197:3:7",
														"nodeType": "YulTypedName",
														"src": "9197:3:7",
														"type": ""
													}
												],
												"src": "9137:118:7"
											},
											{
												"body": {
													"nativeSrc": "9359:124:7",
													"nodeType": "YulBlock",
													"src": "9359:124:7",
													"statements": [
														{
															"nativeSrc": "9369:26:7",
															"nodeType": "YulAssignment",
															"src": "9369:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9381:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9377:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:7"
																},
																"nativeSrc": "9377:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9377:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9449:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9473:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:7"
																		},
																		"nativeSrc": "9458:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9405:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9405:43:7"
																},
																"nativeSrc": "9405:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9405:71:7"
															},
															"nativeSrc": "9405:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9405:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9261:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9331:9:7",
														"nodeType": "YulTypedName",
														"src": "9331:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9343:6:7",
														"nodeType": "YulTypedName",
														"src": "9343:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9354:4:7",
														"nodeType": "YulTypedName",
														"src": "9354:4:7",
														"type": ""
													}
												],
												"src": "9261:222:7"
											},
											{
												"body": {
													"nativeSrc": "9517:152:7",
													"nodeType": "YulBlock",
													"src": "9517:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9534:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9534:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9537:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9527:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:7"
																},
																"nativeSrc": "9527:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9527:88:7"
															},
															"nativeSrc": "9527:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9527:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9631:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9631:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9634:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9634:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:7"
																},
																"nativeSrc": "9624:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9624:15:7"
															},
															"nativeSrc": "9624:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9624:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9655:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9655:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9658:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9658:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:7"
																},
																"nativeSrc": "9648:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9648:15:7"
															},
															"nativeSrc": "9648:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9648:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9489:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9489:180:7"
											},
											{
												"body": {
													"nativeSrc": "9726:51:7",
													"nodeType": "YulBlock",
													"src": "9726:51:7",
													"statements": [
														{
															"nativeSrc": "9736:34:7",
															"nodeType": "YulAssignment",
															"src": "9736:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9761:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9761:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9764:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9764:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9757:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9757:3:7"
																},
																"nativeSrc": "9757:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9757:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9736:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9736:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9675:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9707:5:7",
														"nodeType": "YulTypedName",
														"src": "9707:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9717:8:7",
														"nodeType": "YulTypedName",
														"src": "9717:8:7",
														"type": ""
													}
												],
												"src": "9675:102:7"
											},
											{
												"body": {
													"nativeSrc": "9856:775:7",
													"nodeType": "YulBlock",
													"src": "9856:775:7",
													"statements": [
														{
															"nativeSrc": "9866:15:7",
															"nodeType": "YulAssignment",
															"src": "9866:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "9875:6:7",
																"nodeType": "YulIdentifier",
																"src": "9875:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9866:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9866:5:7"
																}
															]
														},
														{
															"nativeSrc": "9890:14:7",
															"nodeType": "YulAssignment",
															"src": "9890:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "9899:5:7",
																"nodeType": "YulIdentifier",
																"src": "9899:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9890:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9890:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9948:677:7",
																"nodeType": "YulBlock",
																"src": "9948:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10036:22:7",
																			"nodeType": "YulBlock",
																			"src": "10036:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10038:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "10038:16:7"
																						},
																						"nativeSrc": "10038:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10038:18:7"
																					},
																					"nativeSrc": "10038:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "10038:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10014:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10014:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10024:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10024:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10029:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "10029:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10020:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10020:3:7"
																					},
																					"nativeSrc": "10020:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10020:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10011:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "10011:2:7"
																			},
																			"nativeSrc": "10011:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10011:24:7"
																		},
																		"nativeSrc": "10008:50:7",
																		"nodeType": "YulIf",
																		"src": "10008:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "10103:419:7",
																			"nodeType": "YulBlock",
																			"src": "10103:419:7",
																			"statements": [
																				{
																					"nativeSrc": "10483:25:7",
																					"nodeType": "YulAssignment",
																					"src": "10483:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10496:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "10496:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10503:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "10503:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10492:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10492:3:7"
																						},
																						"nativeSrc": "10492:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10492:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10483:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "10483:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10078:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10078:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10088:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10088:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10074:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10074:3:7"
																			},
																			"nativeSrc": "10074:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10074:16:7"
																		},
																		"nativeSrc": "10071:451:7",
																		"nodeType": "YulIf",
																		"src": "10071:451:7"
																	},
																	{
																		"nativeSrc": "10535:23:7",
																		"nodeType": "YulAssignment",
																		"src": "10535:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10547:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10547:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10553:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10553:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10543:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10543:3:7"
																			},
																			"nativeSrc": "10543:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10543:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10535:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10535:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10571:44:7",
																		"nodeType": "YulAssignment",
																		"src": "10571:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10606:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10606:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10583:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "10583:22:7"
																			},
																			"nativeSrc": "10583:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10583:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10571:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "10571:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9924:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9924:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9934:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9934:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9921:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9921:2:7"
																},
																"nativeSrc": "9921:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9921:15:7"
															},
															"nativeSrc": "9913:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9937:2:7",
																"nodeType": "YulBlock",
																"src": "9937:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9917:3:7",
																"nodeType": "YulBlock",
																"src": "9917:3:7",
																"statements": []
															},
															"src": "9913:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9783:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9811:6:7",
														"nodeType": "YulTypedName",
														"src": "9811:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9819:5:7",
														"nodeType": "YulTypedName",
														"src": "9819:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9826:8:7",
														"nodeType": "YulTypedName",
														"src": "9826:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9836:3:7",
														"nodeType": "YulTypedName",
														"src": "9836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9844:5:7",
														"nodeType": "YulTypedName",
														"src": "9844:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9851:4:7",
														"nodeType": "YulTypedName",
														"src": "9851:4:7",
														"type": ""
													}
												],
												"src": "9783:848:7"
											},
											{
												"body": {
													"nativeSrc": "10697:1013:7",
													"nodeType": "YulBlock",
													"src": "10697:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10892:20:7",
																"nodeType": "YulBlock",
																"src": "10892:20:7",
																"statements": [
																	{
																		"nativeSrc": "10894:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10894:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10903:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10903:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10894:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10894:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10905:5:7",
																		"nodeType": "YulLeave",
																		"src": "10905:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10882:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10882:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10875:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10875:6:7"
																},
																"nativeSrc": "10875:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10875:16:7"
															},
															"nativeSrc": "10872:40:7",
															"nodeType": "YulIf",
															"src": "10872:40:7"
														},
														{
															"body": {
																"nativeSrc": "10937:20:7",
																"nodeType": "YulBlock",
																"src": "10937:20:7",
																"statements": [
																	{
																		"nativeSrc": "10939:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10939:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10948:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10948:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10939:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10950:5:7",
																		"nodeType": "YulLeave",
																		"src": "10950:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10931:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10931:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10924:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:7"
																},
																"nativeSrc": "10924:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10924:12:7"
															},
															"nativeSrc": "10921:36:7",
															"nodeType": "YulIf",
															"src": "10921:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11067:20:7",
																		"nodeType": "YulBlock",
																		"src": "11067:20:7",
																		"statements": [
																			{
																				"nativeSrc": "11069:10:7",
																				"nodeType": "YulAssignment",
																				"src": "11069:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11078:1:7",
																					"nodeType": "YulLiteral",
																					"src": "11078:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11069:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11069:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11080:5:7",
																				"nodeType": "YulLeave",
																				"src": "11080:5:7"
																			}
																		]
																	},
																	"nativeSrc": "11060:27:7",
																	"nodeType": "YulCase",
																	"src": "11060:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11065:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11065:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11111:176:7",
																		"nodeType": "YulBlock",
																		"src": "11111:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11146:22:7",
																					"nodeType": "YulBlock",
																					"src": "11146:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11148:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "11148:16:7"
																								},
																								"nativeSrc": "11148:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11148:18:7"
																							},
																							"nativeSrc": "11148:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "11148:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11131:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "11131:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11141:3:7",
																							"nodeType": "YulLiteral",
																							"src": "11141:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11128:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "11128:2:7"
																					},
																					"nativeSrc": "11128:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11128:17:7"
																				},
																				"nativeSrc": "11125:43:7",
																				"nodeType": "YulIf",
																				"src": "11125:43:7"
																			},
																			{
																				"nativeSrc": "11181:25:7",
																				"nodeType": "YulAssignment",
																				"src": "11181:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11194:1:7",
																							"nodeType": "YulLiteral",
																							"src": "11194:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11197:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "11197:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11190:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11190:3:7"
																					},
																					"nativeSrc": "11190:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11190:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11181:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11181:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11237:22:7",
																					"nodeType": "YulBlock",
																					"src": "11237:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11239:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "11239:16:7"
																								},
																								"nativeSrc": "11239:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "11239:18:7"
																							},
																							"nativeSrc": "11239:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "11239:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11225:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "11225:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11232:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11232:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11222:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "11222:2:7"
																					},
																					"nativeSrc": "11222:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11222:14:7"
																				},
																				"nativeSrc": "11219:40:7",
																				"nodeType": "YulIf",
																				"src": "11219:40:7"
																			},
																			{
																				"nativeSrc": "11272:5:7",
																				"nodeType": "YulLeave",
																				"src": "11272:5:7"
																			}
																		]
																	},
																	"nativeSrc": "11096:191:7",
																	"nodeType": "YulCase",
																	"src": "11096:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11101:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11101:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11017:4:7",
																"nodeType": "YulIdentifier",
																"src": "11017:4:7"
															},
															"nativeSrc": "11010:277:7",
															"nodeType": "YulSwitch",
															"src": "11010:277:7"
														},
														{
															"body": {
																"nativeSrc": "11419:123:7",
																"nodeType": "YulBlock",
																"src": "11419:123:7",
																"statements": [
																	{
																		"nativeSrc": "11433:28:7",
																		"nodeType": "YulAssignment",
																		"src": "11433:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11446:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "11446:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11452:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "11452:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11442:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11442:3:7"
																			},
																			"nativeSrc": "11442:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11442:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11433:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11433:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11492:22:7",
																			"nodeType": "YulBlock",
																			"src": "11492:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11494:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "11494:16:7"
																						},
																						"nativeSrc": "11494:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11494:18:7"
																					},
																					"nativeSrc": "11494:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11494:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11480:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "11480:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11487:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11487:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11477:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "11477:2:7"
																			},
																			"nativeSrc": "11477:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11477:14:7"
																		},
																		"nativeSrc": "11474:40:7",
																		"nodeType": "YulIf",
																		"src": "11474:40:7"
																	},
																	{
																		"nativeSrc": "11527:5:7",
																		"nodeType": "YulLeave",
																		"src": "11527:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11322:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11322:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11328:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11328:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11319:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11319:2:7"
																				},
																				"nativeSrc": "11319:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11319:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11336:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "11336:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11346:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11346:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11333:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11333:2:7"
																				},
																				"nativeSrc": "11333:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11333:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11315:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11315:3:7"
																		},
																		"nativeSrc": "11315:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11315:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11371:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11371:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11377:3:7",
																						"nodeType": "YulLiteral",
																						"src": "11377:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11368:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11368:2:7"
																				},
																				"nativeSrc": "11368:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11368:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11386:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "11386:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11396:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11396:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11383:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11383:2:7"
																				},
																				"nativeSrc": "11383:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11383:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11364:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11364:3:7"
																		},
																		"nativeSrc": "11364:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11364:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11299:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11299:2:7"
																},
																"nativeSrc": "11299:111:7",
																"nodeType": "YulFunctionCall",
																"src": "11299:111:7"
															},
															"nativeSrc": "11296:246:7",
															"nodeType": "YulIf",
															"src": "11296:246:7"
														},
														{
															"nativeSrc": "11552:57:7",
															"nodeType": "YulAssignment",
															"src": "11552:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11586:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11586:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11589:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11589:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11595:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11595:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11605:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11605:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11567:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "11567:18:7"
																},
																"nativeSrc": "11567:42:7",
																"nodeType": "YulFunctionCall",
																"src": "11567:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11552:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11552:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "11559:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11559:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11648:22:7",
																"nodeType": "YulBlock",
																"src": "11648:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11650:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11650:16:7"
																			},
																			"nativeSrc": "11650:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11650:18:7"
																		},
																		"nativeSrc": "11650:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11650:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11625:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11625:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11636:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11636:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11641:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11641:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11632:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11632:3:7"
																		},
																		"nativeSrc": "11632:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11632:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11622:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11622:2:7"
																},
																"nativeSrc": "11622:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11622:25:7"
															},
															"nativeSrc": "11619:51:7",
															"nodeType": "YulIf",
															"src": "11619:51:7"
														},
														{
															"nativeSrc": "11679:25:7",
															"nodeType": "YulAssignment",
															"src": "11679:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11692:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11692:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11699:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11699:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11688:3:7"
																},
																"nativeSrc": "11688:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11688:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11679:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11679:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10637:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10667:4:7",
														"nodeType": "YulTypedName",
														"src": "10667:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10673:8:7",
														"nodeType": "YulTypedName",
														"src": "10673:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10683:3:7",
														"nodeType": "YulTypedName",
														"src": "10683:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10691:5:7",
														"nodeType": "YulTypedName",
														"src": "10691:5:7",
														"type": ""
													}
												],
												"src": "10637:1073:7"
											},
											{
												"body": {
													"nativeSrc": "11759:43:7",
													"nodeType": "YulBlock",
													"src": "11759:43:7",
													"statements": [
														{
															"nativeSrc": "11769:27:7",
															"nodeType": "YulAssignment",
															"src": "11769:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11784:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11784:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11791:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11791:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11780:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11780:3:7"
																},
																"nativeSrc": "11780:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11780:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11769:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11769:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11716:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11741:5:7",
														"nodeType": "YulTypedName",
														"src": "11741:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11751:7:7",
														"nodeType": "YulTypedName",
														"src": "11751:7:7",
														"type": ""
													}
												],
												"src": "11716:86:7"
											},
											{
												"body": {
													"nativeSrc": "11872:217:7",
													"nodeType": "YulBlock",
													"src": "11872:217:7",
													"statements": [
														{
															"nativeSrc": "11882:31:7",
															"nodeType": "YulAssignment",
															"src": "11882:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11908:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11908:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11890:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11890:17:7"
																},
																"nativeSrc": "11890:23:7",
																"nodeType": "YulFunctionCall",
																"src": "11890:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11882:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11882:4:7"
																}
															]
														},
														{
															"nativeSrc": "11922:37:7",
															"nodeType": "YulAssignment",
															"src": "11922:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11950:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11950:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11934:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "11934:15:7"
																},
																"nativeSrc": "11934:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11934:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11922:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11922:8:7"
																}
															]
														},
														{
															"nativeSrc": "11969:113:7",
															"nodeType": "YulAssignment",
															"src": "11969:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11999:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11999:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12005:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "12005:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12015:66:7",
																		"nodeType": "YulLiteral",
																		"src": "12015:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11978:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "11978:20:7"
																},
																"nativeSrc": "11978:104:7",
																"nodeType": "YulFunctionCall",
																"src": "11978:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11969:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11969:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11808:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11847:4:7",
														"nodeType": "YulTypedName",
														"src": "11847:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11853:8:7",
														"nodeType": "YulTypedName",
														"src": "11853:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11866:5:7",
														"nodeType": "YulTypedName",
														"src": "11866:5:7",
														"type": ""
													}
												],
												"src": "11808:281:7"
											},
											{
												"body": {
													"nativeSrc": "12143:362:7",
													"nodeType": "YulBlock",
													"src": "12143:362:7",
													"statements": [
														{
															"nativeSrc": "12153:25:7",
															"nodeType": "YulAssignment",
															"src": "12153:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12176:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12176:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12158:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12158:17:7"
																},
																"nativeSrc": "12158:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12158:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12153:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12153:1:7"
																}
															]
														},
														{
															"nativeSrc": "12187:25:7",
															"nodeType": "YulAssignment",
															"src": "12187:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12210:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12210:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12192:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12192:17:7"
																},
																"nativeSrc": "12192:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12192:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12187:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12187:1:7"
																}
															]
														},
														{
															"nativeSrc": "12221:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12221:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12244:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12244:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12247:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12247:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12240:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12240:3:7"
																},
																"nativeSrc": "12240:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12240:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12225:11:7",
																	"nodeType": "YulTypedName",
																	"src": "12225:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12258:41:7",
															"nodeType": "YulAssignment",
															"src": "12258:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12287:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "12287:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12269:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12269:17:7"
																},
																"nativeSrc": "12269:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12269:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12258:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12258:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12476:22:7",
																"nodeType": "YulBlock",
																"src": "12476:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12478:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12478:16:7"
																			},
																			"nativeSrc": "12478:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12478:18:7"
																		},
																		"nativeSrc": "12478:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12478:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12409:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12409:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12402:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12402:6:7"
																				},
																				"nativeSrc": "12402:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12402:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12432:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12432:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12439:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12439:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12448:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12448:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12435:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12435:3:7"
																						},
																						"nativeSrc": "12435:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12435:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12429:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12429:2:7"
																				},
																				"nativeSrc": "12429:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12429:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12382:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12382:2:7"
																		},
																		"nativeSrc": "12382:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12382:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12362:6:7"
																},
																"nativeSrc": "12362:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12362:113:7"
															},
															"nativeSrc": "12359:139:7",
															"nodeType": "YulIf",
															"src": "12359:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12095:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12126:1:7",
														"nodeType": "YulTypedName",
														"src": "12126:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12129:1:7",
														"nodeType": "YulTypedName",
														"src": "12129:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12135:7:7",
														"nodeType": "YulTypedName",
														"src": "12135:7:7",
														"type": ""
													}
												],
												"src": "12095:410:7"
											},
											{
												"body": {
													"nativeSrc": "12539:152:7",
													"nodeType": "YulBlock",
													"src": "12539:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12556:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12556:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12559:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12559:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12549:6:7"
																},
																"nativeSrc": "12549:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12549:88:7"
															},
															"nativeSrc": "12549:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12549:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12653:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12653:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12656:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12656:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12646:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12646:6:7"
																},
																"nativeSrc": "12646:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12646:15:7"
															},
															"nativeSrc": "12646:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12646:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12677:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12677:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12680:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12680:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12670:6:7"
																},
																"nativeSrc": "12670:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12670:15:7"
															},
															"nativeSrc": "12670:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12670:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "12511:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12511:180:7"
											},
											{
												"body": {
													"nativeSrc": "12741:147:7",
													"nodeType": "YulBlock",
													"src": "12741:147:7",
													"statements": [
														{
															"nativeSrc": "12751:25:7",
															"nodeType": "YulAssignment",
															"src": "12751:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12774:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12774:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12756:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12756:17:7"
																},
																"nativeSrc": "12756:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12756:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12751:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12751:1:7"
																}
															]
														},
														{
															"nativeSrc": "12785:25:7",
															"nodeType": "YulAssignment",
															"src": "12785:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12808:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12808:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12790:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12790:17:7"
																},
																"nativeSrc": "12790:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12790:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12785:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12785:1:7"
																}
															]
														},
														{
															"nativeSrc": "12819:16:7",
															"nodeType": "YulAssignment",
															"src": "12819:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12830:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12830:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12833:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12833:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12826:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12826:3:7"
																},
																"nativeSrc": "12826:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12826:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12819:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12859:22:7",
																"nodeType": "YulBlock",
																"src": "12859:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12861:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12861:16:7"
																			},
																			"nativeSrc": "12861:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12861:18:7"
																		},
																		"nativeSrc": "12861:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12861:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12851:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12851:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12854:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12854:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12848:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12848:2:7"
																},
																"nativeSrc": "12848:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12848:10:7"
															},
															"nativeSrc": "12845:36:7",
															"nodeType": "YulIf",
															"src": "12845:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12697:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12728:1:7",
														"nodeType": "YulTypedName",
														"src": "12728:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12731:1:7",
														"nodeType": "YulTypedName",
														"src": "12731:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12737:3:7",
														"nodeType": "YulTypedName",
														"src": "12737:3:7",
														"type": ""
													}
												],
												"src": "12697:191:7"
											},
											{
												"body": {
													"nativeSrc": "12959:53:7",
													"nodeType": "YulBlock",
													"src": "12959:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12976:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12976:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12999:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12999:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12981:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12981:17:7"
																		},
																		"nativeSrc": "12981:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12981:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12969:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12969:6:7"
																},
																"nativeSrc": "12969:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12969:37:7"
															},
															"nativeSrc": "12969:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12969:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12894:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12947:5:7",
														"nodeType": "YulTypedName",
														"src": "12947:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12954:3:7",
														"nodeType": "YulTypedName",
														"src": "12954:3:7",
														"type": ""
													}
												],
												"src": "12894:118:7"
											},
											{
												"body": {
													"nativeSrc": "13172:288:7",
													"nodeType": "YulBlock",
													"src": "13172:288:7",
													"statements": [
														{
															"nativeSrc": "13182:26:7",
															"nodeType": "YulAssignment",
															"src": "13182:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13194:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13194:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13205:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13190:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13190:3:7"
																},
																"nativeSrc": "13190:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13190:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13182:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13182:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13262:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13262:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13275:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13275:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13286:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13286:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13271:3:7"
																		},
																		"nativeSrc": "13271:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13271:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13218:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13218:43:7"
																},
																"nativeSrc": "13218:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13218:71:7"
															},
															"nativeSrc": "13218:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13218:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13343:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13343:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13356:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13356:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13367:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13367:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13352:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:7"
																		},
																		"nativeSrc": "13352:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13352:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13299:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13299:43:7"
																},
																"nativeSrc": "13299:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13299:72:7"
															},
															"nativeSrc": "13299:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13299:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13425:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13425:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13438:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13438:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13449:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13449:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13434:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13434:3:7"
																		},
																		"nativeSrc": "13434:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13434:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13381:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13381:43:7"
																},
																"nativeSrc": "13381:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13381:72:7"
															},
															"nativeSrc": "13381:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13381:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13018:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13128:9:7",
														"nodeType": "YulTypedName",
														"src": "13128:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13140:6:7",
														"nodeType": "YulTypedName",
														"src": "13140:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13148:6:7",
														"nodeType": "YulTypedName",
														"src": "13148:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13156:6:7",
														"nodeType": "YulTypedName",
														"src": "13156:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13167:4:7",
														"nodeType": "YulTypedName",
														"src": "13167:4:7",
														"type": ""
													}
												],
												"src": "13018:442:7"
											},
											{
												"body": {
													"nativeSrc": "13564:124:7",
													"nodeType": "YulBlock",
													"src": "13564:124:7",
													"statements": [
														{
															"nativeSrc": "13574:26:7",
															"nodeType": "YulAssignment",
															"src": "13574:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13586:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13586:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13597:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13597:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13582:3:7"
																},
																"nativeSrc": "13582:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13582:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13574:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13654:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13654:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13667:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13667:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13678:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13678:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13663:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13663:3:7"
																		},
																		"nativeSrc": "13663:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13663:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13610:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13610:43:7"
																},
																"nativeSrc": "13610:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13610:71:7"
															},
															"nativeSrc": "13610:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13610:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13466:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13536:9:7",
														"nodeType": "YulTypedName",
														"src": "13536:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13548:6:7",
														"nodeType": "YulTypedName",
														"src": "13548:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13559:4:7",
														"nodeType": "YulTypedName",
														"src": "13559:4:7",
														"type": ""
													}
												],
												"src": "13466:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612945380380612945833981810160405281019061003191906106e9565b33838381600390816100439190610978565b5080600490816100539190610978565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610a86565b60405180910390fd5b6100d58161020060201b60201c565b5061010a336100e86102c360201b60201c565b600a6100f49190610c07565b836100ff9190610c51565b6102cb60201b60201c565b600a60065f5f600381111561012257610121610c92565b5b600381111561013457610133610c92565b5b81526020019081526020015f2081905550600f60065f6001600381111561015e5761015d610c92565b5b60038111156101705761016f610c92565b5b81526020019081526020015f2081905550601460065f6002600381111561019a57610199610c92565b5b60038111156101ac576101ab610c92565b5b81526020019081526020015f2081905550601960065f6003808111156101d5576101d4610c92565b5b60038111156101e7576101e6610c92565b5b81526020019081526020015f2081905550505050610d4f565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361033b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103329190610a86565b60405180910390fd5b61034c5f838361035060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103a0578060025f8282546103949190610cbf565b9250508190555061046e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610429578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161042093929190610d01565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b5578060025f82825403925050819055506104ff565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055c9190610d36565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105c882610582565b810181811067ffffffffffffffff821117156105e7576105e6610592565b5b80604052505050565b5f6105f9610569565b905061060582826105bf565b919050565b5f67ffffffffffffffff82111561062457610623610592565b5b61062d82610582565b9050602081019050919050565b8281835e5f83830152505050565b5f61065a6106558461060a565b6105f0565b9050828152602081018484840111156106765761067561057e565b5b61068184828561063a565b509392505050565b5f82601f83011261069d5761069c61057a565b5b81516106ad848260208601610648565b91505092915050565b5f819050919050565b6106c8816106b6565b81146106d2575f5ffd5b50565b5f815190506106e3816106bf565b92915050565b5f5f5f60608486031215610700576106ff610572565b5b5f84015167ffffffffffffffff81111561071d5761071c610576565b5b61072986828701610689565b935050602084015167ffffffffffffffff81111561074a57610749610576565b5b61075686828701610689565b9250506040610767868287016106d5565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107bf57607f821691505b6020821081036107d2576107d161077b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108347fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107f9565b61083e86836107f9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61087961087461086f846106b6565b610856565b6106b6565b9050919050565b5f819050919050565b6108928361085f565b6108a661089e82610880565b848454610805565b825550505050565b5f5f905090565b6108bd6108ae565b6108c8818484610889565b505050565b5b818110156108eb576108e05f826108b5565b6001810190506108ce565b5050565b601f82111561093057610901816107d8565b61090a846107ea565b81016020851015610919578190505b61092d610925856107ea565b8301826108cd565b50505b505050565b5f82821c905092915050565b5f6109505f1984600802610935565b1980831691505092915050565b5f6109688383610941565b9150826002028217905092915050565b61098182610771565b67ffffffffffffffff81111561099a57610999610592565b5b6109a482546107a8565b6109af8282856108ef565b5f60209050601f8311600181146109e0575f84156109ce578287015190505b6109d8858261095d565b865550610a3f565b601f1984166109ee866107d8565b5f5b82811015610a15578489015182556001820191506020850194506020810190506109f0565b86831015610a325784890151610a2e601f891682610941565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a7082610a47565b9050919050565b610a8081610a66565b82525050565b5f602082019050610a995f830184610a77565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610b2157808604811115610afd57610afc610a9f565b5b6001851615610b0c5780820291505b8081029050610b1a85610acc565b9450610ae1565b94509492505050565b5f82610b395760019050610bf4565b81610b46575f9050610bf4565b8160018114610b5c5760028114610b6657610b95565b6001915050610bf4565b60ff841115610b7857610b77610a9f565b5b8360020a915084821115610b8f57610b8e610a9f565b5b50610bf4565b5060208310610133831016604e8410600b8410161715610bca5782820a905083811115610bc557610bc4610a9f565b5b610bf4565b610bd78484846001610ad8565b92509050818404811115610bee57610bed610a9f565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c11826106b6565b9150610c1c83610bfb565b9250610c497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b2a565b905092915050565b5f610c5b826106b6565b9150610c66836106b6565b9250828202610c74816106b6565b91508282048414831517610c8b57610c8a610a9f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f610cc9826106b6565b9150610cd4836106b6565b9250828201905080821115610cec57610ceb610a9f565b5b92915050565b610cfb816106b6565b82525050565b5f606082019050610d145f830186610a77565b610d216020830185610cf2565b610d2e6040830184610cf2565b949350505050565b5f602082019050610d495f830184610cf2565b92915050565b611be980610d5c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806340c10f19116100a057806395d89b411161006f57806395d89b41146102a3578063a9059cbb146102c1578063b5d5b5fa146102f1578063dd62ed3e14610325578063f2fde38b1461035557610109565b806340c10f191461022f57806370a082311461024b578063715018a61461027b5780638da5cb5b1461028557610109565b80631f1accb2116100dc5780631f1accb21461019557806323b872dd146101c55780632e1a7d4d146101f5578063313ce5671461021157610109565b806306fdde031461010d578063095ea7b31461012b57806310087fb11461015b57806318160ddd14610177575b5f5ffd5b610115610371565b6040516101229190611419565b60405180910390f35b610145600480360381019061014091906114ca565b610401565b6040516101529190611522565b60405180910390f35b6101756004803603810190610170919061155e565b610423565b005b61017f610669565b60405161018c91906115ab565b60405180910390f35b6101af60048036038101906101aa91906115c4565b610672565b6040516101bc91906115ab565b60405180910390f35b6101df60048036038101906101da91906115ef565b610687565b6040516101ec9190611522565b60405180910390f35b61020f600480360381019061020a919061163f565b6106b5565b005b610219610853565b6040516102269190611685565b60405180910390f35b610249600480360381019061024491906114ca565b61085b565b005b6102656004803603810190610260919061169e565b610871565b60405161027291906115ab565b60405180910390f35b6102836108b6565b005b61028d6108c9565b60405161029a91906116d8565b60405180910390f35b6102ab6108f1565b6040516102b89190611419565b60405180910390f35b6102db60048036038101906102d691906114ca565b610981565b6040516102e89190611522565b60405180910390f35b61030b600480360381019061030691906114ca565b6109a3565b60405161031c9594939291906116f1565b60405180910390f35b61033f600480360381019061033a9190611742565b6109ec565b60405161034c91906115ab565b60405180910390f35b61036f600480360381019061036a919061169e565b610a6e565b005b606060038054610380906117ad565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906117ad565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b5f5f61040b610af2565b9050610418818585610af9565b600191505092915050565b5f8211610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045c90611827565b60405180910390fd5b8161046f33610871565b10156104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a79061188f565b60405180910390fd5b5f6104ba82610b0b565b90505f816020015190505f825f015190505f4290505f83826104dc91906118da565b90505f81886104eb91906118da565b90503373ffffffffffffffffffffffffffffffffffffffff167f022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c898985856040516105399493929190611980565b60405180910390a26040518060a00160405280898152602001848152602001838152602001610168670de0b6b3a76400008760065f8d60038111156105815761058061190d565b5b60038111156105935761059261190d565b5b81526020019081526020015f20546105ab91906119c3565b6105b591906119c3565b6105bf9190611a31565b81526020016001151581525060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050505050505050505050565b5f600254905090565b6006602052805f5260405f205f915090505481565b5f5f610691610af2565b905061069e858285610c5d565b6106a9858585610cf0565b60019150509392505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff16610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90611ad1565b60405180910390fd5b806002015442101561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611b39565b60405180910390fd5b5f670de0b6b3a764000060648360030154845f01546107ba91906119c3565b6107c49190611a31565b6107ce9190611a31565b90505f81835f01546107e091906118da565b90505f836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc68286604051610845929190611b57565b60405180910390a250505050565b5f6012905090565b610863610de0565b61086d8282610e67565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108be610de0565b6108c75f610ee6565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610900906117ad565b80601f016020809104026020016040519081016040528092919081815260200182805461092c906117ad565b80156109775780601f1061094e57610100808354040283529160200191610977565b820191905f5260205f20905b81548152906001019060200180831161095a57829003601f168201915b5050505050905090565b5f5f61098b610af2565b9050610998818585610cf0565b600191505092915050565b6007602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610a76610de0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ae6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610add91906116d8565b60405180910390fd5b610aef81610ee6565b50565b5f33905090565b610b068383836001610fa9565b505050565b610b13611391565b5f6003811115610b2657610b2561190d565b5b826003811115610b3957610b3861190d565b5b03610b5c576040518060400160405280601e8152602001603c8152509050610c58565b60016003811115610b7057610b6f61190d565b5b826003811115610b8357610b8261190d565b5b03610ba6576040518060400160405280605a815260200160b48152509050610c58565b60026003811115610bba57610bb961190d565b5b826003811115610bcd57610bcc61190d565b5b03610bf157604051806040016040528060b4815260200161012c8152509050610c58565b600380811115610c0457610c0361190d565b5b826003811115610c1757610c1661190d565b5b03610c3c57604051806040016040528061016881526020016102588152509050610c58565b60405180604001604052806101688152602001610e1081525090505b919050565b5f610c6884846109ec565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cea5781811015610cdb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cd293929190611b7e565b60405180910390fd5b610ce984848484035f610fa9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d60575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d5791906116d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dc791906116d8565b60405180910390fd5b610ddb838383611178565b505050565b610de8610af2565b73ffffffffffffffffffffffffffffffffffffffff16610e066108c9565b73ffffffffffffffffffffffffffffffffffffffff1614610e6557610e29610af2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e5c91906116d8565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ece91906116d8565b60405180910390fd5b610ee25f8383611178565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611019575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161101091906116d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611089575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161108091906116d8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611172578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161116991906115ab565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c8578060025f8282546111bc91906118da565b92505081905550611296565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611251578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161124893929190611b7e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112dd578060025f8282540392505081905550611327565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161138491906115ab565b60405180910390a3505050565b60405180604001604052805f81526020015f81525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6113eb826113a9565b6113f581856113b3565b93506114058185602086016113c3565b61140e816113d1565b840191505092915050565b5f6020820190508181035f83015261143181846113e1565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114668261143d565b9050919050565b6114768161145c565b8114611480575f5ffd5b50565b5f813590506114918161146d565b92915050565b5f819050919050565b6114a981611497565b81146114b3575f5ffd5b50565b5f813590506114c4816114a0565b92915050565b5f5f604083850312156114e0576114df611439565b5b5f6114ed85828601611483565b92505060206114fe858286016114b6565b9150509250929050565b5f8115159050919050565b61151c81611508565b82525050565b5f6020820190506115355f830184611513565b92915050565b60048110611547575f5ffd5b50565b5f813590506115588161153b565b92915050565b5f5f6040838503121561157457611573611439565b5b5f611581858286016114b6565b92505060206115928582860161154a565b9150509250929050565b6115a581611497565b82525050565b5f6020820190506115be5f83018461159c565b92915050565b5f602082840312156115d9576115d8611439565b5b5f6115e68482850161154a565b91505092915050565b5f5f5f6060848603121561160657611605611439565b5b5f61161386828701611483565b935050602061162486828701611483565b9250506040611635868287016114b6565b9150509250925092565b5f6020828403121561165457611653611439565b5b5f611661848285016114b6565b91505092915050565b5f60ff82169050919050565b61167f8161166a565b82525050565b5f6020820190506116985f830184611676565b92915050565b5f602082840312156116b3576116b2611439565b5b5f6116c084828501611483565b91505092915050565b6116d28161145c565b82525050565b5f6020820190506116eb5f8301846116c9565b92915050565b5f60a0820190506117045f83018861159c565b611711602083018761159c565b61171e604083018661159c565b61172b606083018561159c565b6117386080830184611513565b9695505050505050565b5f5f6040838503121561175857611757611439565b5b5f61176585828601611483565b925050602061177685828601611483565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117c457607f821691505b6020821081036117d7576117d6611780565b5b50919050565b7f416d6f756e742073686f756c6420626520706f736974697665000000000000005f82015250565b5f6118116019836113b3565b915061181c826117dd565b602082019050919050565b5f6020820190508181035f83015261183e81611805565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6118796014836113b3565b915061188482611845565b602082019050919050565b5f6020820190508181035f8301526118a68161186d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118e482611497565b91506118ef83611497565b9250828201905080821115611907576119066118ad565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061194b5761194a61190d565b5b50565b5f81905061195b8261193a565b919050565b5f61196a8261194e565b9050919050565b61197a81611960565b82525050565b5f6080820190506119935f83018761159c565b6119a06020830186611971565b6119ad604083018561159c565b6119ba606083018461159c565b95945050505050565b5f6119cd82611497565b91506119d883611497565b92508282026119e681611497565b915082820484148315176119fd576119fc6118ad565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a3b82611497565b9150611a4683611497565b925082611a5657611a55611a04565b5b828204905092915050565b7f5374616b65206973206e6f7420616374697665206f7220616c726561647920775f8201527f697468647261776e000000000000000000000000000000000000000000000000602082015250565b5f611abb6028836113b3565b9150611ac682611a61565b604082019050919050565b5f6020820190508181035f830152611ae881611aaf565b9050919050565b7f5374616b6520706572696f64206973206e6f7420656e646564000000000000005f82015250565b5f611b236019836113b3565b9150611b2e82611aef565b602082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b5f604082019050611b6a5f83018561159c565b611b77602083018461159c565b9392505050565b5f606082019050611b915f8301866116c9565b611b9e602083018561159c565b611bab604083018461159c565b94935050505056fea26469706673582212201ee663003e08b037dccfe8f59a58f8e1e756ade2d622ead395d343b21768325364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2945 CODESIZE SUB DUP1 PUSH2 0x2945 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST CALLER DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x200 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x10A CALLER PUSH2 0xE8 PUSH2 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST DUP4 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0x2CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH1 0x6 PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x122 JUMPI PUSH2 0x121 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x134 JUMPI PUSH2 0x133 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15E JUMPI PUSH2 0x15D PUSH2 0xC92 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x170 JUMPI PUSH2 0x16F PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x6 PUSH0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AC JUMPI PUSH2 0x1AB PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x19 PUSH1 0x6 PUSH0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E6 PUSH2 0xC92 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xD4F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34C PUSH0 DUP4 DUP4 PUSH2 0x350 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A0 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x46E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x429 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x420 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4FF JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5C8 DUP3 PUSH2 0x582 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5E7 JUMPI PUSH2 0x5E6 PUSH2 0x592 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F9 PUSH2 0x569 JUMP JUMPDEST SWAP1 POP PUSH2 0x605 DUP3 DUP3 PUSH2 0x5BF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x592 JUMP JUMPDEST JUMPDEST PUSH2 0x62D DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65A PUSH2 0x655 DUP5 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x676 JUMPI PUSH2 0x675 PUSH2 0x57E JUMP JUMPDEST JUMPDEST PUSH2 0x681 DUP5 DUP3 DUP6 PUSH2 0x63A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x57A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x6AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x648 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C8 DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E3 DUP2 PUSH2 0x6BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x700 JUMPI PUSH2 0x6FF PUSH2 0x572 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71D JUMPI PUSH2 0x71C PUSH2 0x576 JUMP JUMPDEST JUMPDEST PUSH2 0x729 DUP7 DUP3 DUP8 ADD PUSH2 0x689 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x74A JUMPI PUSH2 0x749 PUSH2 0x576 JUMP JUMPDEST JUMPDEST PUSH2 0x756 DUP7 DUP3 DUP8 ADD PUSH2 0x689 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x767 DUP7 DUP3 DUP8 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D2 JUMPI PUSH2 0x7D1 PUSH2 0x77B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x834 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x83E DUP7 DUP4 PUSH2 0x7F9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x879 PUSH2 0x874 PUSH2 0x86F DUP5 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x892 DUP4 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x89E DUP3 PUSH2 0x880 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x805 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BD PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x8C8 DUP2 DUP5 DUP5 PUSH2 0x889 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH2 0x8E0 PUSH0 DUP3 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x930 JUMPI PUSH2 0x901 DUP2 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x90A DUP5 PUSH2 0x7EA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x919 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x92D PUSH2 0x925 DUP6 PUSH2 0x7EA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x950 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x935 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x968 DUP4 DUP4 PUSH2 0x941 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x981 DUP3 PUSH2 0x771 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99A JUMPI PUSH2 0x999 PUSH2 0x592 JUMP JUMPDEST JUMPDEST PUSH2 0x9A4 DUP3 SLOAD PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x9AF DUP3 DUP3 DUP6 PUSH2 0x8EF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9E0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9CE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9D8 DUP6 DUP3 PUSH2 0x95D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9EE DUP7 PUSH2 0x7D8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA15 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9F0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA32 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA2E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x941 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA70 DUP3 PUSH2 0xA47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA80 DUP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA99 PUSH0 DUP4 ADD DUP5 PUSH2 0xA77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB21 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0xA9F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB0C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB1A DUP6 PUSH2 0xACC JUMP JUMPDEST SWAP5 POP PUSH2 0xAE1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB39 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST DUP2 PUSH2 0xB46 JUMPI PUSH0 SWAP1 POP PUSH2 0xBF4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB5C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB66 JUMPI PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB77 PUSH2 0xA9F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0xA9F JUMP JUMPDEST JUMPDEST POP PUSH2 0xBF4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBCA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC4 PUSH2 0xA9F JUMP JUMPDEST JUMPDEST PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xBD7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBEE JUMPI PUSH2 0xBED PUSH2 0xA9F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC11 DUP3 PUSH2 0x6B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC1C DUP4 PUSH2 0xBFB JUMP JUMPDEST SWAP3 POP PUSH2 0xC49 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC5B DUP3 PUSH2 0x6B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC66 DUP4 PUSH2 0x6B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC74 DUP2 PUSH2 0x6B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xA9F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCC9 DUP3 PUSH2 0x6B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD4 DUP4 PUSH2 0x6B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0xA9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFB DUP2 PUSH2 0x6B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD14 PUSH0 DUP4 ADD DUP7 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0xD21 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCF2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD49 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP1 PUSH2 0xD5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1F1ACCB2 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x10087FB1 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x15EF JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40B PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x418 DUP2 DUP6 DUP6 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x46F CALLER PUSH2 0x871 JUMP JUMPDEST LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A7 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP9 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C DUP10 DUP10 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 PUSH8 0xDE0B6B3A7640000 DUP8 PUSH1 0x6 PUSH0 DUP14 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x691 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x69E DUP6 DUP3 DUP6 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x6A9 DUP6 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x845 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x863 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x86D DUP3 DUP3 PUSH2 0xE67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BE PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x8C7 PUSH0 PUSH2 0xEE6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x900 SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92C SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x98B PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x998 DUP2 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA76 PUSH2 0xDE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF DUP2 PUSH2 0xEE6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB06 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x1391 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB26 JUMPI PUSH2 0xB25 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB39 JUMPI PUSH2 0xB38 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3C DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB70 JUMPI PUSH2 0xB6F PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5A DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB4 DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC03 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE10 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC68 DUP5 DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDB DUP4 DUP4 DUP4 PUSH2 0x1178 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDE8 PUSH2 0xAF2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE06 PUSH2 0x8C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE65 JUMPI PUSH2 0xE29 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE2 PUSH0 DUP4 DUP4 PUSH2 0x1178 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1019 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1089 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1172 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1296 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1251 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12DD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1327 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EB DUP3 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x13F5 DUP2 DUP6 PUSH2 0x13B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1405 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x13D1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1431 DUP2 DUP5 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1466 DUP3 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1480 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1491 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A9 DUP2 PUSH2 0x1497 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C4 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14ED DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14FE DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151C DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1535 PUSH0 DUP4 ADD DUP5 PUSH2 0x1513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1547 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1558 DUP2 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1581 DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1592 DUP6 DUP3 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A5 DUP2 PUSH2 0x1497 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BE PUSH0 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x154A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1613 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1624 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1635 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1661 DUP5 DUP3 DUP6 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167F DUP2 PUSH2 0x166A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1698 PUSH0 DUP4 ADD DUP5 PUSH2 0x1676 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C0 DUP5 DUP3 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D2 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH0 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH0 DUP4 ADD DUP9 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1711 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x171E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x172B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1738 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1513 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1765 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1776 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C6420626520706F73697469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH1 0x19 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1879 PUSH1 0x14 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP3 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A6 DUP2 PUSH2 0x186D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18E4 DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EF DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x194B JUMPI PUSH2 0x194A PUSH2 0x190D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x195B DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196A DUP3 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x19A0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CD DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D8 DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19E6 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x18AD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A3B DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65206973206E6F7420616374697665206F7220616C72656164792077 PUSH0 DUP3 ADD MSTORE PUSH32 0x697468647261776E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABB PUSH1 0x28 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP3 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE8 DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520706572696F64206973206E6F7420656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x19 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B91 PUSH0 DUP4 ADD DUP7 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1B9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUPN 0x63 STOP RETURNDATACOPY ADDMOD 0xB0 CALLDATACOPY 0xDC 0xCF 0xE8 CREATE2 SWAP11 PC EXTCALL RJUMPI 0xE756 0xAD 0xE2 0xD6 0x22 0xEA 0xD3 SWAP6 0xD3 NUMBER 0xB2 OR PUSH9 0x325364736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:3979:6:-:0;;;1198:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1333:10;1311:4;1317:6;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1417:51:6::2;1423:10;1457;:8;;;:10;;:::i;:::-;1451:2;:16;;;;:::i;:::-;1435:13;:32;;;;:::i;:::-;1417:5;;;:51;;:::i;:::-;1510:2;1478:3;:29;1482:24;1478:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1570:2;1538:3;:29;1542:24;1538:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1637:2;1598:3;:36;1602:31;1598:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;;1697:2;1668:3;:26;1672:21;1668:26:::0;::::2;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;1198:527:::0;;;167:3979;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1009::-;3038:6;3046;3054;3103:2;3091:9;3082:7;3078:23;3074:32;3071:119;;;3109:79;;:::i;:::-;3071:119;3250:1;3239:9;3235:17;3229:24;3280:18;3272:6;3269:30;3266:117;;;3302:79;;:::i;:::-;3266:117;3407:74;3473:7;3464:6;3453:9;3449:22;3407:74;:::i;:::-;3397:84;;3200:291;3551:2;3540:9;3536:18;3530:25;3582:18;3574:6;3571:30;3568:117;;;3604:79;;:::i;:::-;3568:117;3709:74;3775:7;3766:6;3755:9;3751:22;3709:74;:::i;:::-;3699:84;;3501:292;3832:2;3858:64;3914:7;3905:6;3894:9;3890:22;3858:64;:::i;:::-;3848:74;;3803:129;2930:1009;;;;;:::o;3945:99::-;3997:6;4031:5;4025:12;4015:22;;3945:99;;;:::o;4050:180::-;4098:77;4095:1;4088:88;4195:4;4192:1;4185:15;4219:4;4216:1;4209:15;4236:320;4280:6;4317:1;4311:4;4307:12;4297:22;;4364:1;4358:4;4354:12;4385:18;4375:81;;4441:4;4433:6;4429:17;4419:27;;4375:81;4503:2;4495:6;4492:14;4472:18;4469:38;4466:84;;4522:18;;:::i;:::-;4466:84;4287:269;4236:320;;;:::o;4562:141::-;4611:4;4634:3;4626:11;;4657:3;4654:1;4647:14;4691:4;4688:1;4678:18;4670:26;;4562:141;;;:::o;4709:93::-;4746:6;4793:2;4788;4781:5;4777:14;4773:23;4763:33;;4709:93;;;:::o;4808:107::-;4852:8;4902:5;4896:4;4892:16;4871:37;;4808:107;;;;:::o;4921:393::-;4990:6;5040:1;5028:10;5024:18;5063:97;5093:66;5082:9;5063:97;:::i;:::-;5181:39;5211:8;5200:9;5181:39;:::i;:::-;5169:51;;5253:4;5249:9;5242:5;5238:21;5229:30;;5302:4;5292:8;5288:19;5281:5;5278:30;5268:40;;4997:317;;4921:393;;;;;:::o;5320:60::-;5348:3;5369:5;5362:12;;5320:60;;;:::o;5386:142::-;5436:9;5469:53;5487:34;5496:24;5514:5;5496:24;:::i;:::-;5487:34;:::i;:::-;5469:53;:::i;:::-;5456:66;;5386:142;;;:::o;5534:75::-;5577:3;5598:5;5591:12;;5534:75;;;:::o;5615:269::-;5725:39;5756:7;5725:39;:::i;:::-;5786:91;5835:41;5859:16;5835:41;:::i;:::-;5827:6;5820:4;5814:11;5786:91;:::i;:::-;5780:4;5773:105;5691:193;5615:269;;;:::o;5890:73::-;5935:3;5956:1;5949:8;;5890:73;:::o;5969:189::-;6046:32;;:::i;:::-;6087:65;6145:6;6137;6131:4;6087:65;:::i;:::-;6022:136;5969:189;;:::o;6164:186::-;6224:120;6241:3;6234:5;6231:14;6224:120;;;6295:39;6332:1;6325:5;6295:39;:::i;:::-;6268:1;6261:5;6257:13;6248:22;;6224:120;;;6164:186;;:::o;6356:543::-;6457:2;6452:3;6449:11;6446:446;;;6491:38;6523:5;6491:38;:::i;:::-;6575:29;6593:10;6575:29;:::i;:::-;6565:8;6561:44;6758:2;6746:10;6743:18;6740:49;;;6779:8;6764:23;;6740:49;6802:80;6858:22;6876:3;6858:22;:::i;:::-;6848:8;6844:37;6831:11;6802:80;:::i;:::-;6461:431;;6446:446;6356:543;;;:::o;6905:117::-;6959:8;7009:5;7003:4;6999:16;6978:37;;6905:117;;;;:::o;7028:169::-;7072:6;7105:51;7153:1;7149:6;7141:5;7138:1;7134:13;7105:51;:::i;:::-;7101:56;7186:4;7180;7176:15;7166:25;;7079:118;7028:169;;;;:::o;7202:295::-;7278:4;7424:29;7449:3;7443:4;7424:29;:::i;:::-;7416:37;;7486:3;7483:1;7479:11;7473:4;7470:21;7462:29;;7202:295;;;;:::o;7502:1395::-;7619:37;7652:3;7619:37;:::i;:::-;7721:18;7713:6;7710:30;7707:56;;;7743:18;;:::i;:::-;7707:56;7787:38;7819:4;7813:11;7787:38;:::i;:::-;7872:67;7932:6;7924;7918:4;7872:67;:::i;:::-;7966:1;7990:4;7977:17;;8022:2;8014:6;8011:14;8039:1;8034:618;;;;8696:1;8713:6;8710:77;;;8762:9;8757:3;8753:19;8747:26;8738:35;;8710:77;8813:67;8873:6;8866:5;8813:67;:::i;:::-;8807:4;8800:81;8669:222;8004:887;;8034:618;8086:4;8082:9;8074:6;8070:22;8120:37;8152:4;8120:37;:::i;:::-;8179:1;8193:208;8207:7;8204:1;8201:14;8193:208;;;8286:9;8281:3;8277:19;8271:26;8263:6;8256:42;8337:1;8329:6;8325:14;8315:24;;8384:2;8373:9;8369:18;8356:31;;8230:4;8227:1;8223:12;8218:17;;8193:208;;;8429:6;8420:7;8417:19;8414:179;;;8487:9;8482:3;8478:19;8472:26;8530:48;8572:4;8564:6;8560:17;8549:9;8530:48;:::i;:::-;8522:6;8515:64;8437:156;8414:179;8639:1;8635;8627:6;8623:14;8619:22;8613:4;8606:36;8041:611;;;8004:887;;7594:1303;;;7502:1395;;:::o;8903:126::-;8940:7;8980:42;8973:5;8969:54;8958:65;;8903:126;;;:::o;9035:96::-;9072:7;9101:24;9119:5;9101:24;:::i;:::-;9090:35;;9035:96;;;:::o;9137:118::-;9224:24;9242:5;9224:24;:::i;:::-;9219:3;9212:37;9137:118;;:::o;9261:222::-;9354:4;9392:2;9381:9;9377:18;9369:26;;9405:71;9473:1;9462:9;9458:17;9449:6;9405:71;:::i;:::-;9261:222;;;;:::o;9489:180::-;9537:77;9534:1;9527:88;9634:4;9631:1;9624:15;9658:4;9655:1;9648:15;9675:102;9717:8;9764:5;9761:1;9757:13;9736:34;;9675:102;;;:::o;9783:848::-;9844:5;9851:4;9875:6;9866:15;;9899:5;9890:14;;9913:712;9934:1;9924:8;9921:15;9913:712;;;10029:4;10024:3;10020:14;10014:4;10011:24;10008:50;;;10038:18;;:::i;:::-;10008:50;10088:1;10078:8;10074:16;10071:451;;;10503:4;10496:5;10492:16;10483:25;;10071:451;10553:4;10547;10543:15;10535:23;;10583:32;10606:8;10583:32;:::i;:::-;10571:44;;9913:712;;;9783:848;;;;;;;:::o;10637:1073::-;10691:5;10882:8;10872:40;;10903:1;10894:10;;10905:5;;10872:40;10931:4;10921:36;;10948:1;10939:10;;10950:5;;10921:36;11017:4;11065:1;11060:27;;;;11101:1;11096:191;;;;11010:277;;11060:27;11078:1;11069:10;;11080:5;;;11096:191;11141:3;11131:8;11128:17;11125:43;;;11148:18;;:::i;:::-;11125:43;11197:8;11194:1;11190:16;11181:25;;11232:3;11225:5;11222:14;11219:40;;;11239:18;;:::i;:::-;11219:40;11272:5;;;11010:277;;11396:2;11386:8;11383:16;11377:3;11371:4;11368:13;11364:36;11346:2;11336:8;11333:16;11328:2;11322:4;11319:12;11315:35;11299:111;11296:246;;;11452:8;11446:4;11442:19;11433:28;;11487:3;11480:5;11477:14;11474:40;;;11494:18;;:::i;:::-;11474:40;11527:5;;11296:246;11567:42;11605:3;11595:8;11589:4;11586:1;11567:42;:::i;:::-;11552:57;;;;11641:4;11636:3;11632:14;11625:5;11622:25;11619:51;;;11650:18;;:::i;:::-;11619:51;11699:4;11692:5;11688:16;11679:25;;10637:1073;;;;;;:::o;11716:86::-;11751:7;11791:4;11784:5;11780:16;11769:27;;11716:86;;;:::o;11808:281::-;11866:5;11890:23;11908:4;11890:23;:::i;:::-;11882:31;;11934:25;11950:8;11934:25;:::i;:::-;11922:37;;11978:104;12015:66;12005:8;11999:4;11978:104;:::i;:::-;11969:113;;11808:281;;;;:::o;12095:410::-;12135:7;12158:20;12176:1;12158:20;:::i;:::-;12153:25;;12192:20;12210:1;12192:20;:::i;:::-;12187:25;;12247:1;12244;12240:9;12269:30;12287:11;12269:30;:::i;:::-;12258:41;;12448:1;12439:7;12435:15;12432:1;12429:22;12409:1;12402:9;12382:83;12359:139;;12478:18;;:::i;:::-;12359:139;12143:362;12095:410;;;;:::o;12511:180::-;12559:77;12556:1;12549:88;12656:4;12653:1;12646:15;12680:4;12677:1;12670:15;12697:191;12737:3;12756:20;12774:1;12756:20;:::i;:::-;12751:25;;12790:20;12808:1;12790:20;:::i;:::-;12785:25;;12833:1;12830;12826:9;12819:16;;12854:3;12851:1;12848:10;12845:36;;;12861:18;;:::i;:::-;12845:36;12697:191;;;;:::o;12894:118::-;12981:24;12999:5;12981:24;:::i;:::-;12976:3;12969:37;12894:118;;:::o;13018:442::-;13167:4;13205:2;13194:9;13190:18;13182:26;;13218:71;13286:1;13275:9;13271:17;13262:6;13218:71;:::i;:::-;13299:72;13367:2;13356:9;13352:18;13343:6;13299:72;:::i;:::-;13381;13449:2;13438:9;13434:18;13425:6;13381:72;:::i;:::-;13018:442;;;;;;:::o;13466:222::-;13559:4;13597:2;13586:9;13582:18;13574:26;;13610:71;13678:1;13667:9;13663:17;13654:6;13610:71;:::i;:::-;13466:222;;;;:::o;167:3979:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2809,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4009,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3552,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getDuration_1221": {
									"entryPoint": 2827,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_639": {
									"entryPoint": 3687,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2802,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3165,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3814,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3312,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4472,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2540,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1025,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@apy_967": {
									"entryPoint": 1650,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_385": {
									"entryPoint": 2161,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 2131,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1067": {
									"entryPoint": 2139,
									"id": 1067,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 881,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2249,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2230,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1161": {
									"entryPoint": 1059,
									"id": 1161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2289,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1641,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1671,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2670,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2433,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@userStakes_974": {
									"entryPoint": 2467,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1286": {
									"entryPoint": 1717,
									"id": 1286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_StakingPeriod_$962": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_StakingPeriod_$962": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$962": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_StakingPeriod_$962_to_t_uint8_fromStack": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$962_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_StakingPeriod_$962": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_StakingPeriod_$962_to_t_uint8": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_StakingPeriod_$962": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_StakingPeriod_$962": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15892:7",
										"nodeType": "YulBlock",
										"src": "0:15892:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3399:56:7",
													"nodeType": "YulBlock",
													"src": "3399:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3433:16:7",
																"nodeType": "YulBlock",
																"src": "3433:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3442:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3445:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3445:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3435:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:7"
																			},
																			"nativeSrc": "3435:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3435:12:7"
																		},
																		"nativeSrc": "3435:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3435:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3422:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3422:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3429:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3429:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3419:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3419:2:7"
																		},
																		"nativeSrc": "3419:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3412:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:7"
																},
																"nativeSrc": "3412:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3412:20:7"
															},
															"nativeSrc": "3409:40:7",
															"nodeType": "YulIf",
															"src": "3409:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_StakingPeriod_$962",
												"nativeSrc": "3339:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													}
												],
												"src": "3339:116:7"
											},
											{
												"body": {
													"nativeSrc": "3530:104:7",
													"nodeType": "YulBlock",
													"src": "3530:104:7",
													"statements": [
														{
															"nativeSrc": "3540:29:7",
															"nodeType": "YulAssignment",
															"src": "3540:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3562:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3562:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3549:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3549:12:7"
																},
																"nativeSrc": "3549:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3549:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3540:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3540:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_StakingPeriod_$962",
																	"nativeSrc": "3578:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3578:43:7"
																},
																"nativeSrc": "3578:50:7",
																"nodeType": "YulFunctionCall",
																"src": "3578:50:7"
															},
															"nativeSrc": "3578:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "3578:50:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_StakingPeriod_$962",
												"nativeSrc": "3461:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3508:6:7",
														"nodeType": "YulTypedName",
														"src": "3508:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3516:3:7",
														"nodeType": "YulTypedName",
														"src": "3516:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3524:5:7",
														"nodeType": "YulTypedName",
														"src": "3524:5:7",
														"type": ""
													}
												],
												"src": "3461:173:7"
											},
											{
												"body": {
													"nativeSrc": "3740:408:7",
													"nodeType": "YulBlock",
													"src": "3740:408:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3786:83:7",
																"nodeType": "YulBlock",
																"src": "3786:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3788:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3788:77:7"
																			},
																			"nativeSrc": "3788:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3788:79:7"
																		},
																		"nativeSrc": "3788:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3788:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3761:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3770:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3757:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:7"
																		},
																		"nativeSrc": "3757:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3757:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3782:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:7"
																},
																"nativeSrc": "3753:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3753:32:7"
															},
															"nativeSrc": "3750:119:7",
															"nodeType": "YulIf",
															"src": "3750:119:7"
														},
														{
															"nativeSrc": "3879:117:7",
															"nodeType": "YulBlock",
															"src": "3879:117:7",
															"statements": [
																{
																	"nativeSrc": "3894:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3894:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3908:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3898:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3898:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3923:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3923:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3958:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3958:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3969:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3969:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3954:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3954:3:7"
																				},
																				"nativeSrc": "3954:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3954:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3978:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3978:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3933:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3933:20:7"
																		},
																		"nativeSrc": "3933:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3923:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3923:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4006:135:7",
															"nodeType": "YulBlock",
															"src": "4006:135:7",
															"statements": [
																{
																	"nativeSrc": "4021:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4021:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4035:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4051:80:7",
																	"nodeType": "YulAssignment",
																	"src": "4051:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4103:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4103:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4114:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4114:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4099:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4099:3:7"
																				},
																				"nativeSrc": "4099:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4099:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4123:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4123:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$962",
																			"nativeSrc": "4061:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "4061:37:7"
																		},
																		"nativeSrc": "4061:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4051:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4051:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$962",
												"nativeSrc": "3640:508:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3702:9:7",
														"nodeType": "YulTypedName",
														"src": "3702:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3713:7:7",
														"nodeType": "YulTypedName",
														"src": "3713:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3725:6:7",
														"nodeType": "YulTypedName",
														"src": "3725:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3733:6:7",
														"nodeType": "YulTypedName",
														"src": "3733:6:7",
														"type": ""
													}
												],
												"src": "3640:508:7"
											},
											{
												"body": {
													"nativeSrc": "4219:53:7",
													"nodeType": "YulBlock",
													"src": "4219:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4236:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4259:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4259:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4241:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4241:17:7"
																		},
																		"nativeSrc": "4241:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4241:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4229:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:7"
																},
																"nativeSrc": "4229:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4229:37:7"
															},
															"nativeSrc": "4229:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4229:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4154:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4207:5:7",
														"nodeType": "YulTypedName",
														"src": "4207:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4214:3:7",
														"nodeType": "YulTypedName",
														"src": "4214:3:7",
														"type": ""
													}
												],
												"src": "4154:118:7"
											},
											{
												"body": {
													"nativeSrc": "4376:124:7",
													"nodeType": "YulBlock",
													"src": "4376:124:7",
													"statements": [
														{
															"nativeSrc": "4386:26:7",
															"nodeType": "YulAssignment",
															"src": "4386:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4398:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4398:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4409:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4409:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:7"
																},
																"nativeSrc": "4394:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4394:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4386:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4466:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4466:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4479:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4479:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4490:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4490:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4475:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4475:3:7"
																		},
																		"nativeSrc": "4475:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4475:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4422:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4422:43:7"
																},
																"nativeSrc": "4422:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4422:71:7"
															},
															"nativeSrc": "4422:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4422:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4278:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:7",
														"nodeType": "YulTypedName",
														"src": "4348:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4360:6:7",
														"nodeType": "YulTypedName",
														"src": "4360:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4371:4:7",
														"nodeType": "YulTypedName",
														"src": "4371:4:7",
														"type": ""
													}
												],
												"src": "4278:222:7"
											},
											{
												"body": {
													"nativeSrc": "4589:280:7",
													"nodeType": "YulBlock",
													"src": "4589:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4635:83:7",
																"nodeType": "YulBlock",
																"src": "4635:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4637:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:77:7"
																			},
																			"nativeSrc": "4637:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4637:79:7"
																		},
																		"nativeSrc": "4637:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4637:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4606:3:7"
																		},
																		"nativeSrc": "4606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:7"
																},
																"nativeSrc": "4602:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4602:32:7"
															},
															"nativeSrc": "4599:119:7",
															"nodeType": "YulIf",
															"src": "4599:119:7"
														},
														{
															"nativeSrc": "4728:134:7",
															"nodeType": "YulBlock",
															"src": "4728:134:7",
															"statements": [
																{
																	"nativeSrc": "4743:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4743:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4757:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4757:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4747:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4747:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4772:80:7",
																	"nodeType": "YulAssignment",
																	"src": "4772:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:7"
																				},
																				"nativeSrc": "4820:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$962",
																			"nativeSrc": "4782:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "4782:37:7"
																		},
																		"nativeSrc": "4782:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4782:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4772:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4772:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_StakingPeriod_$962",
												"nativeSrc": "4506:363:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4559:9:7",
														"nodeType": "YulTypedName",
														"src": "4559:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4570:7:7",
														"nodeType": "YulTypedName",
														"src": "4570:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4582:6:7",
														"nodeType": "YulTypedName",
														"src": "4582:6:7",
														"type": ""
													}
												],
												"src": "4506:363:7"
											},
											{
												"body": {
													"nativeSrc": "4975:519:7",
													"nodeType": "YulBlock",
													"src": "4975:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5021:83:7",
																"nodeType": "YulBlock",
																"src": "5021:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5023:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5023:77:7"
																			},
																			"nativeSrc": "5023:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5023:79:7"
																		},
																		"nativeSrc": "5023:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5023:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4996:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4996:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5005:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5005:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4992:3:7"
																		},
																		"nativeSrc": "4992:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4992:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5017:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5017:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4988:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:7"
																},
																"nativeSrc": "4988:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4988:32:7"
															},
															"nativeSrc": "4985:119:7",
															"nodeType": "YulIf",
															"src": "4985:119:7"
														},
														{
															"nativeSrc": "5114:117:7",
															"nodeType": "YulBlock",
															"src": "5114:117:7",
															"statements": [
																{
																	"nativeSrc": "5129:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5129:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5143:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5143:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5133:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5133:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5158:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5158:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5193:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5193:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5204:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5204:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5189:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5189:3:7"
																				},
																				"nativeSrc": "5189:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5189:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5213:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5213:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5168:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:20:7"
																		},
																		"nativeSrc": "5168:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5158:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5158:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5241:118:7",
															"nodeType": "YulBlock",
															"src": "5241:118:7",
															"statements": [
																{
																	"nativeSrc": "5256:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5256:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5270:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5260:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5260:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5286:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5286:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5321:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5321:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5332:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5332:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5317:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5317:3:7"
																				},
																				"nativeSrc": "5317:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5317:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5341:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5341:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5296:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5296:20:7"
																		},
																		"nativeSrc": "5296:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5296:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5286:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5286:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5369:118:7",
															"nodeType": "YulBlock",
															"src": "5369:118:7",
															"statements": [
																{
																	"nativeSrc": "5384:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5384:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5398:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5398:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5388:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5388:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5414:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5414:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5449:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5449:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5460:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5460:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5445:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5445:3:7"
																				},
																				"nativeSrc": "5445:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5445:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5469:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5469:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5424:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5424:20:7"
																		},
																		"nativeSrc": "5424:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5424:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5414:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5414:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4875:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4929:9:7",
														"nodeType": "YulTypedName",
														"src": "4929:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4940:7:7",
														"nodeType": "YulTypedName",
														"src": "4940:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4952:6:7",
														"nodeType": "YulTypedName",
														"src": "4952:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4960:6:7",
														"nodeType": "YulTypedName",
														"src": "4960:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4968:6:7",
														"nodeType": "YulTypedName",
														"src": "4968:6:7",
														"type": ""
													}
												],
												"src": "4875:619:7"
											},
											{
												"body": {
													"nativeSrc": "5566:263:7",
													"nodeType": "YulBlock",
													"src": "5566:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5612:83:7",
																"nodeType": "YulBlock",
																"src": "5612:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5614:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5614:77:7"
																			},
																			"nativeSrc": "5614:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:79:7"
																		},
																		"nativeSrc": "5614:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5587:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5587:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5596:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5596:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:7"
																		},
																		"nativeSrc": "5583:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5583:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5608:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5608:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:7"
																},
																"nativeSrc": "5579:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5579:32:7"
															},
															"nativeSrc": "5576:119:7",
															"nodeType": "YulIf",
															"src": "5576:119:7"
														},
														{
															"nativeSrc": "5705:117:7",
															"nodeType": "YulBlock",
															"src": "5705:117:7",
															"statements": [
																{
																	"nativeSrc": "5720:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5720:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5734:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5734:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5724:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5724:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5749:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5749:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5784:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5784:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5795:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5795:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5780:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5780:3:7"
																				},
																				"nativeSrc": "5780:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5780:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5804:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5804:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5759:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5759:20:7"
																		},
																		"nativeSrc": "5759:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5759:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5749:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5749:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5500:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5536:9:7",
														"nodeType": "YulTypedName",
														"src": "5536:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5547:7:7",
														"nodeType": "YulTypedName",
														"src": "5547:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5559:6:7",
														"nodeType": "YulTypedName",
														"src": "5559:6:7",
														"type": ""
													}
												],
												"src": "5500:329:7"
											},
											{
												"body": {
													"nativeSrc": "5878:43:7",
													"nodeType": "YulBlock",
													"src": "5878:43:7",
													"statements": [
														{
															"nativeSrc": "5888:27:7",
															"nodeType": "YulAssignment",
															"src": "5888:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5903:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5903:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5910:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5910:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5899:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5899:3:7"
																},
																"nativeSrc": "5899:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5899:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5888:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5888:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5835:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5860:5:7",
														"nodeType": "YulTypedName",
														"src": "5860:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5870:7:7",
														"nodeType": "YulTypedName",
														"src": "5870:7:7",
														"type": ""
													}
												],
												"src": "5835:86:7"
											},
											{
												"body": {
													"nativeSrc": "5988:51:7",
													"nodeType": "YulBlock",
													"src": "5988:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6005:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6005:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6026:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6026:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6010:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "6010:15:7"
																		},
																		"nativeSrc": "6010:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6010:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5998:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5998:6:7"
																},
																"nativeSrc": "5998:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5998:35:7"
															},
															"nativeSrc": "5998:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5998:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5927:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5976:5:7",
														"nodeType": "YulTypedName",
														"src": "5976:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5983:3:7",
														"nodeType": "YulTypedName",
														"src": "5983:3:7",
														"type": ""
													}
												],
												"src": "5927:112:7"
											},
											{
												"body": {
													"nativeSrc": "6139:120:7",
													"nodeType": "YulBlock",
													"src": "6139:120:7",
													"statements": [
														{
															"nativeSrc": "6149:26:7",
															"nodeType": "YulAssignment",
															"src": "6149:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6161:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6161:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6172:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6172:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6157:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:7"
																},
																"nativeSrc": "6157:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6157:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6149:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6149:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6225:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6225:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6238:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6238:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6249:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6249:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6234:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6234:3:7"
																		},
																		"nativeSrc": "6234:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6234:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6185:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "6185:39:7"
																},
																"nativeSrc": "6185:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6185:67:7"
															},
															"nativeSrc": "6185:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6185:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6045:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6111:9:7",
														"nodeType": "YulTypedName",
														"src": "6111:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6123:6:7",
														"nodeType": "YulTypedName",
														"src": "6123:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"src": "6045:214:7"
											},
											{
												"body": {
													"nativeSrc": "6331:263:7",
													"nodeType": "YulBlock",
													"src": "6331:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6377:83:7",
																"nodeType": "YulBlock",
																"src": "6377:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6379:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6379:77:7"
																			},
																			"nativeSrc": "6379:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6379:79:7"
																		},
																		"nativeSrc": "6379:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6352:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6352:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6361:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6348:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:7"
																		},
																		"nativeSrc": "6348:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6348:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6373:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:7"
																},
																"nativeSrc": "6344:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6344:32:7"
															},
															"nativeSrc": "6341:119:7",
															"nodeType": "YulIf",
															"src": "6341:119:7"
														},
														{
															"nativeSrc": "6470:117:7",
															"nodeType": "YulBlock",
															"src": "6470:117:7",
															"statements": [
																{
																	"nativeSrc": "6485:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6485:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6499:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6499:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6489:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6489:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6514:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6514:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6549:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6549:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6560:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6560:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6545:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6545:3:7"
																				},
																				"nativeSrc": "6545:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6545:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6569:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6569:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6524:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6524:20:7"
																		},
																		"nativeSrc": "6524:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6514:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6514:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6265:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6301:9:7",
														"nodeType": "YulTypedName",
														"src": "6301:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6312:7:7",
														"nodeType": "YulTypedName",
														"src": "6312:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6324:6:7",
														"nodeType": "YulTypedName",
														"src": "6324:6:7",
														"type": ""
													}
												],
												"src": "6265:329:7"
											},
											{
												"body": {
													"nativeSrc": "6665:53:7",
													"nodeType": "YulBlock",
													"src": "6665:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6682:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6682:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6705:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6705:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6687:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6687:17:7"
																		},
																		"nativeSrc": "6687:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6675:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:7"
																},
																"nativeSrc": "6675:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6675:37:7"
															},
															"nativeSrc": "6675:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6675:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6600:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6653:5:7",
														"nodeType": "YulTypedName",
														"src": "6653:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6660:3:7",
														"nodeType": "YulTypedName",
														"src": "6660:3:7",
														"type": ""
													}
												],
												"src": "6600:118:7"
											},
											{
												"body": {
													"nativeSrc": "6822:124:7",
													"nodeType": "YulBlock",
													"src": "6822:124:7",
													"statements": [
														{
															"nativeSrc": "6832:26:7",
															"nodeType": "YulAssignment",
															"src": "6832:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6844:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6844:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6855:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6855:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6840:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6840:3:7"
																},
																"nativeSrc": "6840:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6840:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6832:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6832:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6912:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6925:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6925:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6936:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6936:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6921:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:7"
																		},
																		"nativeSrc": "6921:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6921:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6868:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6868:43:7"
																},
																"nativeSrc": "6868:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6868:71:7"
															},
															"nativeSrc": "6868:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6868:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6724:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6794:9:7",
														"nodeType": "YulTypedName",
														"src": "6794:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6806:6:7",
														"nodeType": "YulTypedName",
														"src": "6806:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6817:4:7",
														"nodeType": "YulTypedName",
														"src": "6817:4:7",
														"type": ""
													}
												],
												"src": "6724:222:7"
											},
											{
												"body": {
													"nativeSrc": "7156:448:7",
													"nodeType": "YulBlock",
													"src": "7156:448:7",
													"statements": [
														{
															"nativeSrc": "7166:27:7",
															"nodeType": "YulAssignment",
															"src": "7166:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7178:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7178:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7189:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7189:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:7"
																},
																"nativeSrc": "7174:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7174:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7166:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7247:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7260:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7271:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7271:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7256:3:7"
																		},
																		"nativeSrc": "7256:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7256:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7203:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7203:43:7"
																},
																"nativeSrc": "7203:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7203:71:7"
															},
															"nativeSrc": "7203:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7203:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7328:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7328:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7341:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7341:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7352:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7352:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7337:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:7"
																		},
																		"nativeSrc": "7337:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7337:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7284:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7284:43:7"
																},
																"nativeSrc": "7284:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7284:72:7"
															},
															"nativeSrc": "7284:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7284:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7410:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7410:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7423:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7423:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7434:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7434:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:7"
																		},
																		"nativeSrc": "7419:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7366:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7366:43:7"
																},
																"nativeSrc": "7366:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7366:72:7"
															},
															"nativeSrc": "7366:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7366:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7492:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7505:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7516:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7516:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7501:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:7"
																		},
																		"nativeSrc": "7501:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7501:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7448:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:43:7"
																},
																"nativeSrc": "7448:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7448:72:7"
															},
															"nativeSrc": "7448:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7448:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "7568:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7568:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7592:3:7",
																				"nodeType": "YulLiteral",
																				"src": "7592:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7577:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:7"
																		},
																		"nativeSrc": "7577:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7577:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "7530:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "7530:37:7"
																},
																"nativeSrc": "7530:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7530:67:7"
															},
															"nativeSrc": "7530:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "7530:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6952:652:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7096:9:7",
														"nodeType": "YulTypedName",
														"src": "7096:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7108:6:7",
														"nodeType": "YulTypedName",
														"src": "7108:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7116:6:7",
														"nodeType": "YulTypedName",
														"src": "7116:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7124:6:7",
														"nodeType": "YulTypedName",
														"src": "7124:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7132:6:7",
														"nodeType": "YulTypedName",
														"src": "7132:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7140:6:7",
														"nodeType": "YulTypedName",
														"src": "7140:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7151:4:7",
														"nodeType": "YulTypedName",
														"src": "7151:4:7",
														"type": ""
													}
												],
												"src": "6952:652:7"
											},
											{
												"body": {
													"nativeSrc": "7693:391:7",
													"nodeType": "YulBlock",
													"src": "7693:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7739:83:7",
																"nodeType": "YulBlock",
																"src": "7739:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7741:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7741:77:7"
																			},
																			"nativeSrc": "7741:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7741:79:7"
																		},
																		"nativeSrc": "7741:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7741:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7714:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7714:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7723:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7723:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7710:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7710:3:7"
																		},
																		"nativeSrc": "7710:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7710:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7735:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7735:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7706:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7706:3:7"
																},
																"nativeSrc": "7706:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7706:32:7"
															},
															"nativeSrc": "7703:119:7",
															"nodeType": "YulIf",
															"src": "7703:119:7"
														},
														{
															"nativeSrc": "7832:117:7",
															"nodeType": "YulBlock",
															"src": "7832:117:7",
															"statements": [
																{
																	"nativeSrc": "7847:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7847:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7861:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7861:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7851:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7851:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7876:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7876:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7911:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7911:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7922:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7922:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7907:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7907:3:7"
																				},
																				"nativeSrc": "7907:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7907:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7931:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7931:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7886:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7886:20:7"
																		},
																		"nativeSrc": "7886:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7886:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7876:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7876:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7959:118:7",
															"nodeType": "YulBlock",
															"src": "7959:118:7",
															"statements": [
																{
																	"nativeSrc": "7974:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7974:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7988:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7978:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7978:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8004:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8004:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8039:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8039:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8050:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8050:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8035:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8035:3:7"
																				},
																				"nativeSrc": "8035:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8035:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8059:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8059:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8014:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8014:20:7"
																		},
																		"nativeSrc": "8014:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8014:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8004:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8004:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7610:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7655:9:7",
														"nodeType": "YulTypedName",
														"src": "7655:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7666:7:7",
														"nodeType": "YulTypedName",
														"src": "7666:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7678:6:7",
														"nodeType": "YulTypedName",
														"src": "7678:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7686:6:7",
														"nodeType": "YulTypedName",
														"src": "7686:6:7",
														"type": ""
													}
												],
												"src": "7610:474:7"
											},
											{
												"body": {
													"nativeSrc": "8118:152:7",
													"nodeType": "YulBlock",
													"src": "8118:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8135:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8135:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8138:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8138:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8128:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8128:6:7"
																},
																"nativeSrc": "8128:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8128:88:7"
															},
															"nativeSrc": "8128:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8128:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8235:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8225:6:7"
																},
																"nativeSrc": "8225:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8225:15:7"
															},
															"nativeSrc": "8225:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8225:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8256:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8256:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8259:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8259:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8249:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:7"
																},
																"nativeSrc": "8249:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8249:15:7"
															},
															"nativeSrc": "8249:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8249:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8090:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8090:180:7"
											},
											{
												"body": {
													"nativeSrc": "8327:269:7",
													"nodeType": "YulBlock",
													"src": "8327:269:7",
													"statements": [
														{
															"nativeSrc": "8337:22:7",
															"nodeType": "YulAssignment",
															"src": "8337:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8351:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8351:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8357:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8347:3:7"
																},
																"nativeSrc": "8347:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8347:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:7"
																}
															]
														},
														{
															"nativeSrc": "8368:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8368:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8398:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8398:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8404:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8404:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:7"
																},
																"nativeSrc": "8394:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8394:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8372:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8372:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8445:51:7",
																"nodeType": "YulBlock",
																"src": "8445:51:7",
																"statements": [
																	{
																		"nativeSrc": "8459:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8459:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8473:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8473:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8481:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8481:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8469:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8469:3:7"
																			},
																			"nativeSrc": "8469:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8469:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8459:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8459:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8425:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8425:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:7"
																},
																"nativeSrc": "8418:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8418:26:7"
															},
															"nativeSrc": "8415:81:7",
															"nodeType": "YulIf",
															"src": "8415:81:7"
														},
														{
															"body": {
																"nativeSrc": "8548:42:7",
																"nodeType": "YulBlock",
																"src": "8548:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8562:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8562:16:7"
																			},
																			"nativeSrc": "8562:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8562:18:7"
																		},
																		"nativeSrc": "8562:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8562:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8512:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8512:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8535:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8535:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8543:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8543:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8532:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8532:2:7"
																		},
																		"nativeSrc": "8532:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8532:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8509:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8509:2:7"
																},
																"nativeSrc": "8509:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8509:38:7"
															},
															"nativeSrc": "8506:84:7",
															"nodeType": "YulIf",
															"src": "8506:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8276:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8311:4:7",
														"nodeType": "YulTypedName",
														"src": "8311:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8320:6:7",
														"nodeType": "YulTypedName",
														"src": "8320:6:7",
														"type": ""
													}
												],
												"src": "8276:320:7"
											},
											{
												"body": {
													"nativeSrc": "8708:69:7",
													"nodeType": "YulBlock",
													"src": "8708:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8730:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8730:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8738:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8738:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8726:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8726:3:7"
																		},
																		"nativeSrc": "8726:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8726:14:7"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c6420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "8742:27:7",
																		"nodeType": "YulLiteral",
																		"src": "8742:27:7",
																		"type": "",
																		"value": "Amount should be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8719:6:7"
																},
																"nativeSrc": "8719:51:7",
																"nodeType": "YulFunctionCall",
																"src": "8719:51:7"
															},
															"nativeSrc": "8719:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "8719:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
												"nativeSrc": "8602:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8700:6:7",
														"nodeType": "YulTypedName",
														"src": "8700:6:7",
														"type": ""
													}
												],
												"src": "8602:175:7"
											},
											{
												"body": {
													"nativeSrc": "8929:220:7",
													"nodeType": "YulBlock",
													"src": "8929:220:7",
													"statements": [
														{
															"nativeSrc": "8939:74:7",
															"nodeType": "YulAssignment",
															"src": "8939:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9005:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9005:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9010:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9010:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8946:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8946:58:7"
																},
																"nativeSrc": "8946:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8946:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8939:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8939:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9111:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9111:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																	"nativeSrc": "9022:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9022:88:7"
																},
																"nativeSrc": "9022:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9022:93:7"
															},
															"nativeSrc": "9022:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9022:93:7"
														},
														{
															"nativeSrc": "9124:19:7",
															"nodeType": "YulAssignment",
															"src": "9124:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9135:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9135:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9140:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9140:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9131:3:7"
																},
																"nativeSrc": "9131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9131:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9124:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8783:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8917:3:7",
														"nodeType": "YulTypedName",
														"src": "8917:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8925:3:7",
														"nodeType": "YulTypedName",
														"src": "8925:3:7",
														"type": ""
													}
												],
												"src": "8783:366:7"
											},
											{
												"body": {
													"nativeSrc": "9326:248:7",
													"nodeType": "YulBlock",
													"src": "9326:248:7",
													"statements": [
														{
															"nativeSrc": "9336:26:7",
															"nodeType": "YulAssignment",
															"src": "9336:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9348:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9348:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:7"
																},
																"nativeSrc": "9344:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9344:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9336:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9336:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9383:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9383:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9394:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9394:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9379:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9379:3:7"
																		},
																		"nativeSrc": "9379:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9379:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9402:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9402:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9408:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9408:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9398:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9398:3:7"
																		},
																		"nativeSrc": "9398:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9398:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9372:6:7"
																},
																"nativeSrc": "9372:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9372:47:7"
															},
															"nativeSrc": "9372:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9372:47:7"
														},
														{
															"nativeSrc": "9428:139:7",
															"nodeType": "YulAssignment",
															"src": "9428:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9562:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9562:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9436:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9436:124:7"
																},
																"nativeSrc": "9436:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9436:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9428:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9428:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9155:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9306:9:7",
														"nodeType": "YulTypedName",
														"src": "9306:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9321:4:7",
														"nodeType": "YulTypedName",
														"src": "9321:4:7",
														"type": ""
													}
												],
												"src": "9155:419:7"
											},
											{
												"body": {
													"nativeSrc": "9686:64:7",
													"nodeType": "YulBlock",
													"src": "9686:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9708:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9708:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9716:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9716:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9704:3:7"
																		},
																		"nativeSrc": "9704:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9704:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9720:22:7",
																		"nodeType": "YulLiteral",
																		"src": "9720:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9697:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9697:6:7"
																},
																"nativeSrc": "9697:46:7",
																"nodeType": "YulFunctionCall",
																"src": "9697:46:7"
															},
															"nativeSrc": "9697:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "9697:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "9580:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9678:6:7",
														"nodeType": "YulTypedName",
														"src": "9678:6:7",
														"type": ""
													}
												],
												"src": "9580:170:7"
											},
											{
												"body": {
													"nativeSrc": "9902:220:7",
													"nodeType": "YulBlock",
													"src": "9902:220:7",
													"statements": [
														{
															"nativeSrc": "9912:74:7",
															"nodeType": "YulAssignment",
															"src": "9912:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9978:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9983:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9919:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9919:58:7"
																},
																"nativeSrc": "9919:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9919:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9912:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9912:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10084:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9995:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9995:88:7"
																},
																"nativeSrc": "9995:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9995:93:7"
															},
															"nativeSrc": "9995:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9995:93:7"
														},
														{
															"nativeSrc": "10097:19:7",
															"nodeType": "YulAssignment",
															"src": "10097:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10108:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10108:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10113:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10113:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10104:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:7"
																},
																"nativeSrc": "10104:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10104:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10097:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9756:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9890:3:7",
														"nodeType": "YulTypedName",
														"src": "9890:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9898:3:7",
														"nodeType": "YulTypedName",
														"src": "9898:3:7",
														"type": ""
													}
												],
												"src": "9756:366:7"
											},
											{
												"body": {
													"nativeSrc": "10299:248:7",
													"nodeType": "YulBlock",
													"src": "10299:248:7",
													"statements": [
														{
															"nativeSrc": "10309:26:7",
															"nodeType": "YulAssignment",
															"src": "10309:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10321:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10321:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10332:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10332:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10317:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10317:3:7"
																},
																"nativeSrc": "10317:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10317:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10309:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10309:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10356:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10356:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10367:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10367:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:7"
																		},
																		"nativeSrc": "10352:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10375:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10375:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10371:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:7"
																		},
																		"nativeSrc": "10371:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10371:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10345:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:7"
																},
																"nativeSrc": "10345:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10345:47:7"
															},
															"nativeSrc": "10345:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10345:47:7"
														},
														{
															"nativeSrc": "10401:139:7",
															"nodeType": "YulAssignment",
															"src": "10401:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10535:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10535:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10409:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10409:124:7"
																},
																"nativeSrc": "10409:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10409:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10401:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10401:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10128:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10279:9:7",
														"nodeType": "YulTypedName",
														"src": "10279:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10294:4:7",
														"nodeType": "YulTypedName",
														"src": "10294:4:7",
														"type": ""
													}
												],
												"src": "10128:419:7"
											},
											{
												"body": {
													"nativeSrc": "10581:152:7",
													"nodeType": "YulBlock",
													"src": "10581:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10598:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10598:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10601:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10601:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10591:6:7"
																},
																"nativeSrc": "10591:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10591:88:7"
															},
															"nativeSrc": "10591:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10591:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10695:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10695:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10698:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10698:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10688:6:7"
																},
																"nativeSrc": "10688:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10688:15:7"
															},
															"nativeSrc": "10688:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10688:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10719:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10719:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10722:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10722:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10712:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:7"
																},
																"nativeSrc": "10712:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10712:15:7"
															},
															"nativeSrc": "10712:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10712:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10553:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10553:180:7"
											},
											{
												"body": {
													"nativeSrc": "10783:147:7",
													"nodeType": "YulBlock",
													"src": "10783:147:7",
													"statements": [
														{
															"nativeSrc": "10793:25:7",
															"nodeType": "YulAssignment",
															"src": "10793:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10816:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10816:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10798:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10798:17:7"
																},
																"nativeSrc": "10798:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10798:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10793:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10793:1:7"
																}
															]
														},
														{
															"nativeSrc": "10827:25:7",
															"nodeType": "YulAssignment",
															"src": "10827:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10850:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10850:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10832:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10832:17:7"
																},
																"nativeSrc": "10832:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10832:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10827:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10827:1:7"
																}
															]
														},
														{
															"nativeSrc": "10861:16:7",
															"nodeType": "YulAssignment",
															"src": "10861:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10872:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10872:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10875:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10875:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10868:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10868:3:7"
																},
																"nativeSrc": "10868:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10868:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10861:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10861:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10901:22:7",
																"nodeType": "YulBlock",
																"src": "10901:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10903:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10903:16:7"
																			},
																			"nativeSrc": "10903:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10903:18:7"
																		},
																		"nativeSrc": "10903:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10903:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10893:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10893:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10896:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10890:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:7"
																},
																"nativeSrc": "10890:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10890:10:7"
															},
															"nativeSrc": "10887:36:7",
															"nodeType": "YulIf",
															"src": "10887:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10739:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10770:1:7",
														"nodeType": "YulTypedName",
														"src": "10770:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10773:1:7",
														"nodeType": "YulTypedName",
														"src": "10773:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10779:3:7",
														"nodeType": "YulTypedName",
														"src": "10779:3:7",
														"type": ""
													}
												],
												"src": "10739:191:7"
											},
											{
												"body": {
													"nativeSrc": "10964:152:7",
													"nodeType": "YulBlock",
													"src": "10964:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10981:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10981:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10984:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10984:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10974:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10974:6:7"
																},
																"nativeSrc": "10974:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10974:88:7"
															},
															"nativeSrc": "10974:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10974:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11078:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11078:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11081:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11081:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11071:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11071:6:7"
																},
																"nativeSrc": "11071:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11071:15:7"
															},
															"nativeSrc": "11071:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11071:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11102:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11102:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11105:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11105:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11095:6:7"
																},
																"nativeSrc": "11095:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11095:15:7"
															},
															"nativeSrc": "11095:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11095:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "10936:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10936:180:7"
											},
											{
												"body": {
													"nativeSrc": "11182:62:7",
													"nodeType": "YulBlock",
													"src": "11182:62:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11216:22:7",
																"nodeType": "YulBlock",
																"src": "11216:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "11218:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11218:16:7"
																			},
																			"nativeSrc": "11218:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11218:18:7"
																		},
																		"nativeSrc": "11218:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11218:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11205:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11205:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11212:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11212:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11202:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11202:2:7"
																		},
																		"nativeSrc": "11202:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11202:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11195:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11195:6:7"
																},
																"nativeSrc": "11195:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11195:20:7"
															},
															"nativeSrc": "11192:46:7",
															"nodeType": "YulIf",
															"src": "11192:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_StakingPeriod_$962",
												"nativeSrc": "11122:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11175:5:7",
														"nodeType": "YulTypedName",
														"src": "11175:5:7",
														"type": ""
													}
												],
												"src": "11122:122:7"
											},
											{
												"body": {
													"nativeSrc": "11312:83:7",
													"nodeType": "YulBlock",
													"src": "11312:83:7",
													"statements": [
														{
															"nativeSrc": "11322:16:7",
															"nodeType": "YulAssignment",
															"src": "11322:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "11333:5:7",
																"nodeType": "YulIdentifier",
																"src": "11333:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11322:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11322:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11383:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11383:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_StakingPeriod_$962",
																	"nativeSrc": "11339:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11339:43:7"
																},
																"nativeSrc": "11339:50:7",
																"nodeType": "YulFunctionCall",
																"src": "11339:50:7"
															},
															"nativeSrc": "11339:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "11339:50:7"
														}
													]
												},
												"name": "cleanup_t_enum$_StakingPeriod_$962",
												"nativeSrc": "11250:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11294:5:7",
														"nodeType": "YulTypedName",
														"src": "11294:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11304:7:7",
														"nodeType": "YulTypedName",
														"src": "11304:7:7",
														"type": ""
													}
												],
												"src": "11250:145:7"
											},
											{
												"body": {
													"nativeSrc": "11476:70:7",
													"nodeType": "YulBlock",
													"src": "11476:70:7",
													"statements": [
														{
															"nativeSrc": "11486:54:7",
															"nodeType": "YulAssignment",
															"src": "11486:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11534:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11534:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_StakingPeriod_$962",
																	"nativeSrc": "11499:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "11499:34:7"
																},
																"nativeSrc": "11499:41:7",
																"nodeType": "YulFunctionCall",
																"src": "11499:41:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11486:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11486:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_StakingPeriod_$962_to_t_uint8",
												"nativeSrc": "11401:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11456:5:7",
														"nodeType": "YulTypedName",
														"src": "11456:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11466:9:7",
														"nodeType": "YulTypedName",
														"src": "11466:9:7",
														"type": ""
													}
												],
												"src": "11401:145:7"
											},
											{
												"body": {
													"nativeSrc": "11632:81:7",
													"nodeType": "YulBlock",
													"src": "11632:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11649:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11649:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11700:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11700:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_StakingPeriod_$962_to_t_uint8",
																			"nativeSrc": "11654:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "11654:45:7"
																		},
																		"nativeSrc": "11654:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11654:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11642:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11642:6:7"
																},
																"nativeSrc": "11642:65:7",
																"nodeType": "YulFunctionCall",
																"src": "11642:65:7"
															},
															"nativeSrc": "11642:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "11642:65:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_StakingPeriod_$962_to_t_uint8_fromStack",
												"nativeSrc": "11552:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11620:5:7",
														"nodeType": "YulTypedName",
														"src": "11620:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11627:3:7",
														"nodeType": "YulTypedName",
														"src": "11627:3:7",
														"type": ""
													}
												],
												"src": "11552:161:7"
											},
											{
												"body": {
													"nativeSrc": "11916:386:7",
													"nodeType": "YulBlock",
													"src": "11916:386:7",
													"statements": [
														{
															"nativeSrc": "11926:27:7",
															"nodeType": "YulAssignment",
															"src": "11926:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11938:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11938:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11949:3:7",
																		"nodeType": "YulLiteral",
																		"src": "11949:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11934:3:7"
																},
																"nativeSrc": "11934:19:7",
																"nodeType": "YulFunctionCall",
																"src": "11934:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11926:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11926:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12007:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12031:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12031:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12016:3:7"
																		},
																		"nativeSrc": "12016:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12016:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11963:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11963:43:7"
																},
																"nativeSrc": "11963:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11963:71:7"
															},
															"nativeSrc": "11963:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11963:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12103:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12116:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12116:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12127:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12127:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12112:3:7"
																		},
																		"nativeSrc": "12112:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12112:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$962_to_t_uint8_fromStack",
																	"nativeSrc": "12044:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12044:58:7"
																},
																"nativeSrc": "12044:87:7",
																"nodeType": "YulFunctionCall",
																"src": "12044:87:7"
															},
															"nativeSrc": "12044:87:7",
															"nodeType": "YulExpressionStatement",
															"src": "12044:87:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12185:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12185:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12198:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12198:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12209:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12209:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12194:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:7"
																		},
																		"nativeSrc": "12194:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12194:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12141:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12141:43:7"
																},
																"nativeSrc": "12141:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12141:72:7"
															},
															"nativeSrc": "12141:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12141:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12267:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12267:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12280:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12280:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12291:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12291:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:7"
																		},
																		"nativeSrc": "12276:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12276:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12223:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12223:43:7"
																},
																"nativeSrc": "12223:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12223:72:7"
															},
															"nativeSrc": "12223:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12223:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$962_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11719:583:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11864:9:7",
														"nodeType": "YulTypedName",
														"src": "11864:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11876:6:7",
														"nodeType": "YulTypedName",
														"src": "11876:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11884:6:7",
														"nodeType": "YulTypedName",
														"src": "11884:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11892:6:7",
														"nodeType": "YulTypedName",
														"src": "11892:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11900:6:7",
														"nodeType": "YulTypedName",
														"src": "11900:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11911:4:7",
														"nodeType": "YulTypedName",
														"src": "11911:4:7",
														"type": ""
													}
												],
												"src": "11719:583:7"
											},
											{
												"body": {
													"nativeSrc": "12356:362:7",
													"nodeType": "YulBlock",
													"src": "12356:362:7",
													"statements": [
														{
															"nativeSrc": "12366:25:7",
															"nodeType": "YulAssignment",
															"src": "12366:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12389:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12371:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12371:17:7"
																},
																"nativeSrc": "12371:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12371:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12366:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12366:1:7"
																}
															]
														},
														{
															"nativeSrc": "12400:25:7",
															"nodeType": "YulAssignment",
															"src": "12400:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12423:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12423:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12405:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12405:17:7"
																},
																"nativeSrc": "12405:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12405:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12400:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12400:1:7"
																}
															]
														},
														{
															"nativeSrc": "12434:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12434:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12457:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12457:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12460:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12460:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12453:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12453:3:7"
																},
																"nativeSrc": "12453:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12453:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12438:11:7",
																	"nodeType": "YulTypedName",
																	"src": "12438:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12471:41:7",
															"nodeType": "YulAssignment",
															"src": "12471:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12500:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "12500:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12482:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12482:17:7"
																},
																"nativeSrc": "12482:30:7",
																"nodeType": "YulFunctionCall",
																"src": "12482:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12471:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "12471:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12689:22:7",
																"nodeType": "YulBlock",
																"src": "12689:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12691:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12691:16:7"
																			},
																			"nativeSrc": "12691:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12691:18:7"
																		},
																		"nativeSrc": "12691:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12691:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12622:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12622:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12615:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12615:6:7"
																				},
																				"nativeSrc": "12615:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12615:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12645:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12645:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12652:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12652:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12661:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12661:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12648:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12648:3:7"
																						},
																						"nativeSrc": "12648:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12648:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12642:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12642:2:7"
																				},
																				"nativeSrc": "12642:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12642:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12595:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12595:2:7"
																		},
																		"nativeSrc": "12595:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12595:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12575:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12575:6:7"
																},
																"nativeSrc": "12575:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12575:113:7"
															},
															"nativeSrc": "12572:139:7",
															"nodeType": "YulIf",
															"src": "12572:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12308:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12339:1:7",
														"nodeType": "YulTypedName",
														"src": "12339:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12342:1:7",
														"nodeType": "YulTypedName",
														"src": "12342:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12348:7:7",
														"nodeType": "YulTypedName",
														"src": "12348:7:7",
														"type": ""
													}
												],
												"src": "12308:410:7"
											},
											{
												"body": {
													"nativeSrc": "12752:152:7",
													"nodeType": "YulBlock",
													"src": "12752:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12769:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12769:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12772:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12772:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12762:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12762:6:7"
																},
																"nativeSrc": "12762:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12762:88:7"
															},
															"nativeSrc": "12762:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12762:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12866:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12866:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12869:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12869:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:7"
																},
																"nativeSrc": "12859:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12859:15:7"
															},
															"nativeSrc": "12859:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12859:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12890:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12890:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12893:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12893:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12883:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12883:6:7"
																},
																"nativeSrc": "12883:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12883:15:7"
															},
															"nativeSrc": "12883:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12883:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12724:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12724:180:7"
											},
											{
												"body": {
													"nativeSrc": "12952:143:7",
													"nodeType": "YulBlock",
													"src": "12952:143:7",
													"statements": [
														{
															"nativeSrc": "12962:25:7",
															"nodeType": "YulAssignment",
															"src": "12962:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12985:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12985:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12967:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12967:17:7"
																},
																"nativeSrc": "12967:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12967:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12962:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12962:1:7"
																}
															]
														},
														{
															"nativeSrc": "12996:25:7",
															"nodeType": "YulAssignment",
															"src": "12996:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13019:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13019:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13001:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13001:17:7"
																},
																"nativeSrc": "13001:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13001:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12996:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12996:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13043:22:7",
																"nodeType": "YulBlock",
																"src": "13043:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13045:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13045:16:7"
																			},
																			"nativeSrc": "13045:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13045:18:7"
																		},
																		"nativeSrc": "13045:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13045:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13040:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13040:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13033:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:7"
																},
																"nativeSrc": "13033:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13033:9:7"
															},
															"nativeSrc": "13030:35:7",
															"nodeType": "YulIf",
															"src": "13030:35:7"
														},
														{
															"nativeSrc": "13075:14:7",
															"nodeType": "YulAssignment",
															"src": "13075:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13084:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13084:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13087:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13087:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13080:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13080:3:7"
																},
																"nativeSrc": "13080:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13080:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13075:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13075:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12910:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12941:1:7",
														"nodeType": "YulTypedName",
														"src": "12941:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12944:1:7",
														"nodeType": "YulTypedName",
														"src": "12944:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12950:1:7",
														"nodeType": "YulTypedName",
														"src": "12950:1:7",
														"type": ""
													}
												],
												"src": "12910:185:7"
											},
											{
												"body": {
													"nativeSrc": "13207:121:7",
													"nodeType": "YulBlock",
													"src": "13207:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13229:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13237:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13237:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13225:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13225:3:7"
																		},
																		"nativeSrc": "13225:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13225:14:7"
																	},
																	{
																		"hexValue": "5374616b65206973206e6f7420616374697665206f7220616c72656164792077",
																		"kind": "string",
																		"nativeSrc": "13241:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13241:34:7",
																		"type": "",
																		"value": "Stake is not active or already w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13218:6:7"
																},
																"nativeSrc": "13218:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13218:58:7"
															},
															"nativeSrc": "13218:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13218:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13297:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13297:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13305:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13305:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13293:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13293:3:7"
																		},
																		"nativeSrc": "13293:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:15:7"
																	},
																	{
																		"hexValue": "697468647261776e",
																		"kind": "string",
																		"nativeSrc": "13310:10:7",
																		"nodeType": "YulLiteral",
																		"src": "13310:10:7",
																		"type": "",
																		"value": "ithdrawn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:7"
																},
																"nativeSrc": "13286:35:7",
																"nodeType": "YulFunctionCall",
																"src": "13286:35:7"
															},
															"nativeSrc": "13286:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "13286:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
												"nativeSrc": "13101:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13199:6:7",
														"nodeType": "YulTypedName",
														"src": "13199:6:7",
														"type": ""
													}
												],
												"src": "13101:227:7"
											},
											{
												"body": {
													"nativeSrc": "13480:220:7",
													"nodeType": "YulBlock",
													"src": "13480:220:7",
													"statements": [
														{
															"nativeSrc": "13490:74:7",
															"nodeType": "YulAssignment",
															"src": "13490:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13556:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13556:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13561:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13561:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13497:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13497:58:7"
																},
																"nativeSrc": "13497:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13497:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13490:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13662:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13662:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																	"nativeSrc": "13573:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13573:88:7"
																},
																"nativeSrc": "13573:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13573:93:7"
															},
															"nativeSrc": "13573:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13573:93:7"
														},
														{
															"nativeSrc": "13675:19:7",
															"nodeType": "YulAssignment",
															"src": "13675:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13686:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13686:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13691:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13691:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13682:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13682:3:7"
																},
																"nativeSrc": "13682:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13682:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13675:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13675:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13334:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13468:3:7",
														"nodeType": "YulTypedName",
														"src": "13468:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13476:3:7",
														"nodeType": "YulTypedName",
														"src": "13476:3:7",
														"type": ""
													}
												],
												"src": "13334:366:7"
											},
											{
												"body": {
													"nativeSrc": "13877:248:7",
													"nodeType": "YulBlock",
													"src": "13877:248:7",
													"statements": [
														{
															"nativeSrc": "13887:26:7",
															"nodeType": "YulAssignment",
															"src": "13887:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13899:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13899:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13910:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13910:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13895:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13895:3:7"
																},
																"nativeSrc": "13895:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13895:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13887:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13887:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13934:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13934:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13945:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13945:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13930:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13930:3:7"
																		},
																		"nativeSrc": "13930:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13930:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13953:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13953:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13959:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13959:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13949:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:7"
																		},
																		"nativeSrc": "13949:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13949:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13923:6:7"
																},
																"nativeSrc": "13923:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13923:47:7"
															},
															"nativeSrc": "13923:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13923:47:7"
														},
														{
															"nativeSrc": "13979:139:7",
															"nodeType": "YulAssignment",
															"src": "13979:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14113:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14113:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13987:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13987:124:7"
																},
																"nativeSrc": "13987:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13987:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13979:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13979:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13706:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13857:9:7",
														"nodeType": "YulTypedName",
														"src": "13857:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13872:4:7",
														"nodeType": "YulTypedName",
														"src": "13872:4:7",
														"type": ""
													}
												],
												"src": "13706:419:7"
											},
											{
												"body": {
													"nativeSrc": "14237:69:7",
													"nodeType": "YulBlock",
													"src": "14237:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14259:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14259:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14267:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14267:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14255:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14255:3:7"
																		},
																		"nativeSrc": "14255:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14255:14:7"
																	},
																	{
																		"hexValue": "5374616b6520706572696f64206973206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "14271:27:7",
																		"nodeType": "YulLiteral",
																		"src": "14271:27:7",
																		"type": "",
																		"value": "Stake period is not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14248:6:7"
																},
																"nativeSrc": "14248:51:7",
																"nodeType": "YulFunctionCall",
																"src": "14248:51:7"
															},
															"nativeSrc": "14248:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "14248:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
												"nativeSrc": "14131:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14229:6:7",
														"nodeType": "YulTypedName",
														"src": "14229:6:7",
														"type": ""
													}
												],
												"src": "14131:175:7"
											},
											{
												"body": {
													"nativeSrc": "14458:220:7",
													"nodeType": "YulBlock",
													"src": "14458:220:7",
													"statements": [
														{
															"nativeSrc": "14468:74:7",
															"nodeType": "YulAssignment",
															"src": "14468:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14534:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14534:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14539:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14539:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14475:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14475:58:7"
																},
																"nativeSrc": "14475:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14475:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14468:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14640:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14640:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																	"nativeSrc": "14551:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14551:88:7"
																},
																"nativeSrc": "14551:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14551:93:7"
															},
															"nativeSrc": "14551:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14551:93:7"
														},
														{
															"nativeSrc": "14653:19:7",
															"nodeType": "YulAssignment",
															"src": "14653:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14664:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14664:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14669:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14669:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14660:3:7"
																},
																"nativeSrc": "14660:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14660:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14653:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14312:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14446:3:7",
														"nodeType": "YulTypedName",
														"src": "14446:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14454:3:7",
														"nodeType": "YulTypedName",
														"src": "14454:3:7",
														"type": ""
													}
												],
												"src": "14312:366:7"
											},
											{
												"body": {
													"nativeSrc": "14855:248:7",
													"nodeType": "YulBlock",
													"src": "14855:248:7",
													"statements": [
														{
															"nativeSrc": "14865:26:7",
															"nodeType": "YulAssignment",
															"src": "14865:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14877:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14877:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14888:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14888:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14873:3:7"
																},
																"nativeSrc": "14873:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14873:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14865:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14865:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14912:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14912:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14923:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14923:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14908:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14908:3:7"
																		},
																		"nativeSrc": "14908:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14908:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14931:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14931:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14927:3:7"
																		},
																		"nativeSrc": "14927:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14927:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14901:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14901:6:7"
																},
																"nativeSrc": "14901:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14901:47:7"
															},
															"nativeSrc": "14901:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14901:47:7"
														},
														{
															"nativeSrc": "14957:139:7",
															"nodeType": "YulAssignment",
															"src": "14957:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15091:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15091:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14965:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14965:124:7"
																},
																"nativeSrc": "14965:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14965:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14957:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14957:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14684:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14835:9:7",
														"nodeType": "YulTypedName",
														"src": "14835:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14850:4:7",
														"nodeType": "YulTypedName",
														"src": "14850:4:7",
														"type": ""
													}
												],
												"src": "14684:419:7"
											},
											{
												"body": {
													"nativeSrc": "15235:206:7",
													"nodeType": "YulBlock",
													"src": "15235:206:7",
													"statements": [
														{
															"nativeSrc": "15245:26:7",
															"nodeType": "YulAssignment",
															"src": "15245:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15257:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15257:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15268:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15268:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15253:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15253:3:7"
																},
																"nativeSrc": "15253:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15253:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15245:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15245:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15325:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15325:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15338:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15338:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15349:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15349:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15334:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15334:3:7"
																		},
																		"nativeSrc": "15334:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15334:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15281:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15281:43:7"
																},
																"nativeSrc": "15281:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15281:71:7"
															},
															"nativeSrc": "15281:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15281:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15406:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15419:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15430:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15430:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15415:3:7"
																		},
																		"nativeSrc": "15415:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15415:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15362:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15362:43:7"
																},
																"nativeSrc": "15362:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15362:72:7"
															},
															"nativeSrc": "15362:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15362:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15109:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15199:9:7",
														"nodeType": "YulTypedName",
														"src": "15199:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15211:6:7",
														"nodeType": "YulTypedName",
														"src": "15211:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15219:6:7",
														"nodeType": "YulTypedName",
														"src": "15219:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15230:4:7",
														"nodeType": "YulTypedName",
														"src": "15230:4:7",
														"type": ""
													}
												],
												"src": "15109:332:7"
											},
											{
												"body": {
													"nativeSrc": "15601:288:7",
													"nodeType": "YulBlock",
													"src": "15601:288:7",
													"statements": [
														{
															"nativeSrc": "15611:26:7",
															"nodeType": "YulAssignment",
															"src": "15611:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15623:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15634:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15634:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15619:3:7"
																},
																"nativeSrc": "15619:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15619:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15611:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15691:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15691:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15704:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15704:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15715:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15715:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15700:3:7"
																		},
																		"nativeSrc": "15700:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15700:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15647:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15647:43:7"
																},
																"nativeSrc": "15647:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15647:71:7"
															},
															"nativeSrc": "15647:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15647:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15772:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15772:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15785:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15785:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15796:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15796:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15781:3:7"
																		},
																		"nativeSrc": "15781:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15781:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15728:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15728:43:7"
																},
																"nativeSrc": "15728:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15728:72:7"
															},
															"nativeSrc": "15728:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15728:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15878:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15878:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15863:3:7"
																		},
																		"nativeSrc": "15863:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15863:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15810:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15810:43:7"
																},
																"nativeSrc": "15810:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15810:72:7"
															},
															"nativeSrc": "15810:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15810:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15447:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15557:9:7",
														"nodeType": "YulTypedName",
														"src": "15557:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15569:6:7",
														"nodeType": "YulTypedName",
														"src": "15569:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15577:6:7",
														"nodeType": "YulTypedName",
														"src": "15577:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15585:6:7",
														"nodeType": "YulTypedName",
														"src": "15585:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15596:4:7",
														"nodeType": "YulTypedName",
														"src": "15596:4:7",
														"type": ""
													}
												],
												"src": "15447:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_StakingPeriod_$962(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_StakingPeriod_$962(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_StakingPeriod_$962(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$962(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$962(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_enum$_StakingPeriod_$962(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_StakingPeriod_$962(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StakingPeriod_$962(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakingPeriod_$962(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakingPeriod_$962(value)\n    }\n\n    function convert_t_enum$_StakingPeriod_$962_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakingPeriod_$962(value)\n    }\n\n    function abi_encode_t_enum$_StakingPeriod_$962_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakingPeriod_$962_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$962_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_StakingPeriod_$962_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake is not active or already w\")\n\n        mstore(add(memPtr, 32), \"ithdrawn\")\n\n    }\n\n    function abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake period is not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806340c10f19116100a057806395d89b411161006f57806395d89b41146102a3578063a9059cbb146102c1578063b5d5b5fa146102f1578063dd62ed3e14610325578063f2fde38b1461035557610109565b806340c10f191461022f57806370a082311461024b578063715018a61461027b5780638da5cb5b1461028557610109565b80631f1accb2116100dc5780631f1accb21461019557806323b872dd146101c55780632e1a7d4d146101f5578063313ce5671461021157610109565b806306fdde031461010d578063095ea7b31461012b57806310087fb11461015b57806318160ddd14610177575b5f5ffd5b610115610371565b6040516101229190611419565b60405180910390f35b610145600480360381019061014091906114ca565b610401565b6040516101529190611522565b60405180910390f35b6101756004803603810190610170919061155e565b610423565b005b61017f610669565b60405161018c91906115ab565b60405180910390f35b6101af60048036038101906101aa91906115c4565b610672565b6040516101bc91906115ab565b60405180910390f35b6101df60048036038101906101da91906115ef565b610687565b6040516101ec9190611522565b60405180910390f35b61020f600480360381019061020a919061163f565b6106b5565b005b610219610853565b6040516102269190611685565b60405180910390f35b610249600480360381019061024491906114ca565b61085b565b005b6102656004803603810190610260919061169e565b610871565b60405161027291906115ab565b60405180910390f35b6102836108b6565b005b61028d6108c9565b60405161029a91906116d8565b60405180910390f35b6102ab6108f1565b6040516102b89190611419565b60405180910390f35b6102db60048036038101906102d691906114ca565b610981565b6040516102e89190611522565b60405180910390f35b61030b600480360381019061030691906114ca565b6109a3565b60405161031c9594939291906116f1565b60405180910390f35b61033f600480360381019061033a9190611742565b6109ec565b60405161034c91906115ab565b60405180910390f35b61036f600480360381019061036a919061169e565b610a6e565b005b606060038054610380906117ad565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906117ad565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b5f5f61040b610af2565b9050610418818585610af9565b600191505092915050565b5f8211610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045c90611827565b60405180910390fd5b8161046f33610871565b10156104b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a79061188f565b60405180910390fd5b5f6104ba82610b0b565b90505f816020015190505f825f015190505f4290505f83826104dc91906118da565b90505f81886104eb91906118da565b90503373ffffffffffffffffffffffffffffffffffffffff167f022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c898985856040516105399493929190611980565b60405180910390a26040518060a00160405280898152602001848152602001838152602001610168670de0b6b3a76400008760065f8d60038111156105815761058061190d565b5b60038111156105935761059261190d565b5b81526020019081526020015f20546105ab91906119c3565b6105b591906119c3565b6105bf9190611a31565b81526020016001151581525060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050505050505050505050565b5f600254905090565b6006602052805f5260405f205f915090505481565b5f5f610691610af2565b905061069e858285610c5d565b6106a9858585610cf0565b60019150509392505050565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff16610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90611ad1565b60405180910390fd5b806002015442101561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611b39565b60405180910390fd5b5f670de0b6b3a764000060648360030154845f01546107ba91906119c3565b6107c49190611a31565b6107ce9190611a31565b90505f81835f01546107e091906118da565b90505f836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc68286604051610845929190611b57565b60405180910390a250505050565b5f6012905090565b610863610de0565b61086d8282610e67565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108be610de0565b6108c75f610ee6565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610900906117ad565b80601f016020809104026020016040519081016040528092919081815260200182805461092c906117ad565b80156109775780601f1061094e57610100808354040283529160200191610977565b820191905f5260205f20905b81548152906001019060200180831161095a57829003601f168201915b5050505050905090565b5f5f61098b610af2565b9050610998818585610cf0565b600191505092915050565b6007602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610a76610de0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ae6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610add91906116d8565b60405180910390fd5b610aef81610ee6565b50565b5f33905090565b610b068383836001610fa9565b505050565b610b13611391565b5f6003811115610b2657610b2561190d565b5b826003811115610b3957610b3861190d565b5b03610b5c576040518060400160405280601e8152602001603c8152509050610c58565b60016003811115610b7057610b6f61190d565b5b826003811115610b8357610b8261190d565b5b03610ba6576040518060400160405280605a815260200160b48152509050610c58565b60026003811115610bba57610bb961190d565b5b826003811115610bcd57610bcc61190d565b5b03610bf157604051806040016040528060b4815260200161012c8152509050610c58565b600380811115610c0457610c0361190d565b5b826003811115610c1757610c1661190d565b5b03610c3c57604051806040016040528061016881526020016102588152509050610c58565b60405180604001604052806101688152602001610e1081525090505b919050565b5f610c6884846109ec565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cea5781811015610cdb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cd293929190611b7e565b60405180910390fd5b610ce984848484035f610fa9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d60575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d5791906116d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dd0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dc791906116d8565b60405180910390fd5b610ddb838383611178565b505050565b610de8610af2565b73ffffffffffffffffffffffffffffffffffffffff16610e066108c9565b73ffffffffffffffffffffffffffffffffffffffff1614610e6557610e29610af2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e5c91906116d8565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ece91906116d8565b60405180910390fd5b610ee25f8383611178565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611019575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161101091906116d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611089575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161108091906116d8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611172578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161116991906115ab565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111c8578060025f8282546111bc91906118da565b92505081905550611296565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611251578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161124893929190611b7e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112dd578060025f8282540392505081905550611327565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161138491906115ab565b60405180910390a3505050565b60405180604001604052805f81526020015f81525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6113eb826113a9565b6113f581856113b3565b93506114058185602086016113c3565b61140e816113d1565b840191505092915050565b5f6020820190508181035f83015261143181846113e1565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114668261143d565b9050919050565b6114768161145c565b8114611480575f5ffd5b50565b5f813590506114918161146d565b92915050565b5f819050919050565b6114a981611497565b81146114b3575f5ffd5b50565b5f813590506114c4816114a0565b92915050565b5f5f604083850312156114e0576114df611439565b5b5f6114ed85828601611483565b92505060206114fe858286016114b6565b9150509250929050565b5f8115159050919050565b61151c81611508565b82525050565b5f6020820190506115355f830184611513565b92915050565b60048110611547575f5ffd5b50565b5f813590506115588161153b565b92915050565b5f5f6040838503121561157457611573611439565b5b5f611581858286016114b6565b92505060206115928582860161154a565b9150509250929050565b6115a581611497565b82525050565b5f6020820190506115be5f83018461159c565b92915050565b5f602082840312156115d9576115d8611439565b5b5f6115e68482850161154a565b91505092915050565b5f5f5f6060848603121561160657611605611439565b5b5f61161386828701611483565b935050602061162486828701611483565b9250506040611635868287016114b6565b9150509250925092565b5f6020828403121561165457611653611439565b5b5f611661848285016114b6565b91505092915050565b5f60ff82169050919050565b61167f8161166a565b82525050565b5f6020820190506116985f830184611676565b92915050565b5f602082840312156116b3576116b2611439565b5b5f6116c084828501611483565b91505092915050565b6116d28161145c565b82525050565b5f6020820190506116eb5f8301846116c9565b92915050565b5f60a0820190506117045f83018861159c565b611711602083018761159c565b61171e604083018661159c565b61172b606083018561159c565b6117386080830184611513565b9695505050505050565b5f5f6040838503121561175857611757611439565b5b5f61176585828601611483565b925050602061177685828601611483565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117c457607f821691505b6020821081036117d7576117d6611780565b5b50919050565b7f416d6f756e742073686f756c6420626520706f736974697665000000000000005f82015250565b5f6118116019836113b3565b915061181c826117dd565b602082019050919050565b5f6020820190508181035f83015261183e81611805565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6118796014836113b3565b915061188482611845565b602082019050919050565b5f6020820190508181035f8301526118a68161186d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118e482611497565b91506118ef83611497565b9250828201905080821115611907576119066118ad565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061194b5761194a61190d565b5b50565b5f81905061195b8261193a565b919050565b5f61196a8261194e565b9050919050565b61197a81611960565b82525050565b5f6080820190506119935f83018761159c565b6119a06020830186611971565b6119ad604083018561159c565b6119ba606083018461159c565b95945050505050565b5f6119cd82611497565b91506119d883611497565b92508282026119e681611497565b915082820484148315176119fd576119fc6118ad565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a3b82611497565b9150611a4683611497565b925082611a5657611a55611a04565b5b828204905092915050565b7f5374616b65206973206e6f7420616374697665206f7220616c726561647920775f8201527f697468647261776e000000000000000000000000000000000000000000000000602082015250565b5f611abb6028836113b3565b9150611ac682611a61565b604082019050919050565b5f6020820190508181035f830152611ae881611aaf565b9050919050565b7f5374616b6520706572696f64206973206e6f7420656e646564000000000000005f82015250565b5f611b236019836113b3565b9150611b2e82611aef565b602082019050919050565b5f6020820190508181035f830152611b5081611b17565b9050919050565b5f604082019050611b6a5f83018561159c565b611b77602083018461159c565b9392505050565b5f606082019050611b915f8301866116c9565b611b9e602083018561159c565b611bab604083018461159c565b94935050505056fea26469706673582212201ee663003e08b037dccfe8f59a58f8e1e756ade2d622ead395d343b21768325364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1F1ACCB2 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x10087FB1 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x15EF JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x169E JUMP JUMPDEST PUSH2 0xA6E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x40B PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x418 DUP2 DUP6 DUP6 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45C SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x46F CALLER PUSH2 0x871 JUMP JUMPDEST LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A7 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA DUP3 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP9 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C DUP10 DUP10 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 PUSH8 0xDE0B6B3A7640000 DUP8 PUSH1 0x6 PUSH0 DUP14 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x190D JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x691 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x69E DUP6 DUP3 DUP6 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x6A9 DUP6 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x845 SWAP3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x863 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x86D DUP3 DUP3 PUSH2 0xE67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BE PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x8C7 PUSH0 PUSH2 0xEE6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x900 SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92C SWAP1 PUSH2 0x17AD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x98B PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x998 DUP2 DUP6 DUP6 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA76 PUSH2 0xDE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAEF DUP2 PUSH2 0xEE6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB06 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x1391 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB26 JUMPI PUSH2 0xB25 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB39 JUMPI PUSH2 0xB38 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3C DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB70 JUMPI PUSH2 0xB6F PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB83 JUMPI PUSH2 0xB82 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5A DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB4 DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC03 PUSH2 0x190D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC17 JUMPI PUSH2 0xC16 PUSH2 0x190D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC3C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 DUP2 MSTORE POP SWAP1 POP PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE10 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC68 DUP5 DUP5 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCDB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFA9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDD0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDB DUP4 DUP4 DUP4 PUSH2 0x1178 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDE8 PUSH2 0xAF2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE06 PUSH2 0x8C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE65 JUMPI PUSH2 0xE29 PUSH2 0xAF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE2 PUSH0 DUP4 DUP4 PUSH2 0x1178 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1019 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1089 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1172 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11BC SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1296 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1251 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12DD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1327 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13EB DUP3 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x13F5 DUP2 DUP6 PUSH2 0x13B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1405 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x13D1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1431 DUP2 DUP5 PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1466 DUP3 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1476 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1480 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1491 DUP2 PUSH2 0x146D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A9 DUP2 PUSH2 0x1497 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C4 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14ED DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14FE DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151C DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1535 PUSH0 DUP4 ADD DUP5 PUSH2 0x1513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1547 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1558 DUP2 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1581 DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1592 DUP6 DUP3 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A5 DUP2 PUSH2 0x1497 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BE PUSH0 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x154A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1613 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1624 DUP7 DUP3 DUP8 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1635 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1653 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1661 DUP5 DUP3 DUP6 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x167F DUP2 PUSH2 0x166A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1698 PUSH0 DUP4 ADD DUP5 PUSH2 0x1676 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C0 DUP5 DUP3 DUP6 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D2 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH0 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH0 DUP4 ADD DUP9 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1711 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x171E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x172B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1738 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1513 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1757 PUSH2 0x1439 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1765 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1776 DUP6 DUP3 DUP7 ADD PUSH2 0x1483 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D7 JUMPI PUSH2 0x17D6 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C6420626520706F73697469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH1 0x19 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1879 PUSH1 0x14 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP3 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A6 DUP2 PUSH2 0x186D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18E4 DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x18EF DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x18AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x194B JUMPI PUSH2 0x194A PUSH2 0x190D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x195B DUP3 PUSH2 0x193A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196A DUP3 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP8 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x19A0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1971 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CD DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D8 DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19E6 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x18AD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A3B DUP3 PUSH2 0x1497 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A46 DUP4 PUSH2 0x1497 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65206973206E6F7420616374697665206F7220616C72656164792077 PUSH0 DUP3 ADD MSTORE PUSH32 0x697468647261776E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABB PUSH1 0x28 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP3 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE8 DUP2 PUSH2 0x1AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520706572696F64206973206E6F7420656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B23 PUSH1 0x19 DUP4 PUSH2 0x13B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B50 DUP2 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1B77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B91 PUSH0 DUP4 ADD DUP7 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1B9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x159C JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x159C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUPN 0x63 STOP RETURNDATACOPY ADDMOD 0xB0 CALLDATACOPY 0xDC 0xCF 0xE8 CREATE2 SWAP11 PC EXTCALL RJUMPI 0xE756 0xAD 0xE2 0xD6 0x22 0xEA 0xD3 SWAP6 0xD3 NUMBER 0xB2 OR PUSH9 0x325364736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "167:3979:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1892:855:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2803:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:44:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3690:454:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:93:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:61:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3455:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;1892:855:6:-;1979:1;1972:6;:8;1964:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2051:6;2028:21;2038:10;2028:9;:21::i;:::-;:29;;2020:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2093:29;2125:20;2138:6;2125:12;:20::i;:::-;2093:52;;2155:11;2167:10;:15;;;2155:27;;2192:18;2211:10;:21;;;2192:40;;2242:14;2257:15;2242:30;;2282:12;2305:3;2296:6;:12;;;;:::i;:::-;2282:26;;2318:13;2339:4;2332:6;:11;;;;:::i;:::-;2318:25;;2372:10;2365:46;;;2384:6;2392;2400:4;2405:5;2365:46;;;;;;;;;:::i;:::-;;;;;;;;2452:288;;;;;;;;2479:6;2452:288;;;;2509:6;2452:288;;;;2537:4;2452:288;;;;2626:3;2619:6;2608:10;2596:3;:11;2600:6;2596:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;:::i;:::-;:29;;;;:::i;:::-;:33;;;;:::i;:::-;2452:288;;;;2693:4;2452:288;;;;;2422:10;:22;2433:10;2422:22;;;;;;;;;;;;;;;:29;2445:5;2422:29;;;;;;;;;;;:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:793;;;;;;1892:855;;:::o;2803:97:2:-;2855:7;2881:12;;2874:19;;2803:97;:::o;719:44:6:-;;;;;;;;;;;;;;;;;:::o;4680:244:2:-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3690:454:6:-;3747:15;3765:10;:22;3776:10;3765:22;;;;;;;;;;;;;;;:34;3788:10;3765:34;;;;;;;;;;;3747:52;;3817:1;:10;;;;;;;;;;;;3809:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3909:1;:9;;;3890:15;:28;;3882:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3958:14;3999:7;3995:3;3982:1;:12;;;3973:1;:8;;;:21;;;;:::i;:::-;:25;;;;:::i;:::-;:33;;;;:::i;:::-;3958:48;;4016:19;4045:6;4036:1;:8;;;:15;;;;:::i;:::-;4016:35;;4072:5;4061:1;:10;;;:16;;;;;;;;;;;;;;;;;;4103:10;4093:44;;;4114:11;4126:10;4093:44;;;;;;;:::i;:::-;;;;;;;;3737:407;;;3690:454;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;1793:93:6:-;1531:13:0;:11;:13::i;:::-;1862:17:6::1;1868:2;1872:6;1862:5;:17::i;:::-;1793:93:::0;;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;820:61:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3455:140:2:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;2800:884:6:-;2867:18;;:::i;:::-;2909:24;2901:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;2898:779;;2955:90;;;;;;;;2996:2;2955:90;;;;3021:9;2955:90;;;2948:97;;;;2898:779;3072:24;3064:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;3061:616;;3118:90;;;;;;;;3159:2;3118:90;;;;3184:9;3118:90;;;3111:97;;;;3061:616;3235:31;3227:39;;;;;;;;:::i;:::-;;:6;:39;;;;;;;;:::i;:::-;;;3224:453;;3288:91;;;;;;;;3329:3;3288:91;;;;3355:9;3288:91;;;3281:98;;;;3224:453;3406:21;3398:29;;;;;;;;:::i;:::-;;:6;:29;;;;;;;;:::i;:::-;;;3395:282;;3449:92;;;;;;;;3490:3;3449:92;;;;3516:10;3449:92;;;3442:99;;;;3395:282;3577:89;;;;;;;;3618:3;3577:89;;;;3644:7;3577:89;;;3570:96;;2800:884;;;;:::o;10319:476:2:-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:2:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9605:432:2:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:116::-;3429:1;3422:5;3419:12;3409:40;;3445:1;3442;3435:12;3409:40;3339:116;:::o;3461:173::-;3524:5;3562:6;3549:20;3540:29;;3578:50;3622:5;3578:50;:::i;:::-;3461:173;;;;:::o;3640:508::-;3725:6;3733;3782:2;3770:9;3761:7;3757:23;3753:32;3750:119;;;3788:79;;:::i;:::-;3750:119;3908:1;3933:53;3978:7;3969:6;3958:9;3954:22;3933:53;:::i;:::-;3923:63;;3879:117;4035:2;4061:70;4123:7;4114:6;4103:9;4099:22;4061:70;:::i;:::-;4051:80;;4006:135;3640:508;;;;;:::o;4154:118::-;4241:24;4259:5;4241:24;:::i;:::-;4236:3;4229:37;4154:118;;:::o;4278:222::-;4371:4;4409:2;4398:9;4394:18;4386:26;;4422:71;4490:1;4479:9;4475:17;4466:6;4422:71;:::i;:::-;4278:222;;;;:::o;4506:363::-;4582:6;4631:2;4619:9;4610:7;4606:23;4602:32;4599:119;;;4637:79;;:::i;:::-;4599:119;4757:1;4782:70;4844:7;4835:6;4824:9;4820:22;4782:70;:::i;:::-;4772:80;;4728:134;4506:363;;;;:::o;4875:619::-;4952:6;4960;4968;5017:2;5005:9;4996:7;4992:23;4988:32;4985:119;;;5023:79;;:::i;:::-;4985:119;5143:1;5168:53;5213:7;5204:6;5193:9;5189:22;5168:53;:::i;:::-;5158:63;;5114:117;5270:2;5296:53;5341:7;5332:6;5321:9;5317:22;5296:53;:::i;:::-;5286:63;;5241:118;5398:2;5424:53;5469:7;5460:6;5449:9;5445:22;5424:53;:::i;:::-;5414:63;;5369:118;4875:619;;;;;:::o;5500:329::-;5559:6;5608:2;5596:9;5587:7;5583:23;5579:32;5576:119;;;5614:79;;:::i;:::-;5576:119;5734:1;5759:53;5804:7;5795:6;5784:9;5780:22;5759:53;:::i;:::-;5749:63;;5705:117;5500:329;;;;:::o;5835:86::-;5870:7;5910:4;5903:5;5899:16;5888:27;;5835:86;;;:::o;5927:112::-;6010:22;6026:5;6010:22;:::i;:::-;6005:3;5998:35;5927:112;;:::o;6045:214::-;6134:4;6172:2;6161:9;6157:18;6149:26;;6185:67;6249:1;6238:9;6234:17;6225:6;6185:67;:::i;:::-;6045:214;;;;:::o;6265:329::-;6324:6;6373:2;6361:9;6352:7;6348:23;6344:32;6341:119;;;6379:79;;:::i;:::-;6341:119;6499:1;6524:53;6569:7;6560:6;6549:9;6545:22;6524:53;:::i;:::-;6514:63;;6470:117;6265:329;;;;:::o;6600:118::-;6687:24;6705:5;6687:24;:::i;:::-;6682:3;6675:37;6600:118;;:::o;6724:222::-;6817:4;6855:2;6844:9;6840:18;6832:26;;6868:71;6936:1;6925:9;6921:17;6912:6;6868:71;:::i;:::-;6724:222;;;;:::o;6952:652::-;7151:4;7189:3;7178:9;7174:19;7166:27;;7203:71;7271:1;7260:9;7256:17;7247:6;7203:71;:::i;:::-;7284:72;7352:2;7341:9;7337:18;7328:6;7284:72;:::i;:::-;7366;7434:2;7423:9;7419:18;7410:6;7366:72;:::i;:::-;7448;7516:2;7505:9;7501:18;7492:6;7448:72;:::i;:::-;7530:67;7592:3;7581:9;7577:19;7568:6;7530:67;:::i;:::-;6952:652;;;;;;;;:::o;7610:474::-;7678:6;7686;7735:2;7723:9;7714:7;7710:23;7706:32;7703:119;;;7741:79;;:::i;:::-;7703:119;7861:1;7886:53;7931:7;7922:6;7911:9;7907:22;7886:53;:::i;:::-;7876:63;;7832:117;7988:2;8014:53;8059:7;8050:6;8039:9;8035:22;8014:53;:::i;:::-;8004:63;;7959:118;7610:474;;;;;:::o;8090:180::-;8138:77;8135:1;8128:88;8235:4;8232:1;8225:15;8259:4;8256:1;8249:15;8276:320;8320:6;8357:1;8351:4;8347:12;8337:22;;8404:1;8398:4;8394:12;8425:18;8415:81;;8481:4;8473:6;8469:17;8459:27;;8415:81;8543:2;8535:6;8532:14;8512:18;8509:38;8506:84;;8562:18;;:::i;:::-;8506:84;8327:269;8276:320;;;:::o;8602:175::-;8742:27;8738:1;8730:6;8726:14;8719:51;8602:175;:::o;8783:366::-;8925:3;8946:67;9010:2;9005:3;8946:67;:::i;:::-;8939:74;;9022:93;9111:3;9022:93;:::i;:::-;9140:2;9135:3;9131:12;9124:19;;8783:366;;;:::o;9155:419::-;9321:4;9359:2;9348:9;9344:18;9336:26;;9408:9;9402:4;9398:20;9394:1;9383:9;9379:17;9372:47;9436:131;9562:4;9436:131;:::i;:::-;9428:139;;9155:419;;;:::o;9580:170::-;9720:22;9716:1;9708:6;9704:14;9697:46;9580:170;:::o;9756:366::-;9898:3;9919:67;9983:2;9978:3;9919:67;:::i;:::-;9912:74;;9995:93;10084:3;9995:93;:::i;:::-;10113:2;10108:3;10104:12;10097:19;;9756:366;;;:::o;10128:419::-;10294:4;10332:2;10321:9;10317:18;10309:26;;10381:9;10375:4;10371:20;10367:1;10356:9;10352:17;10345:47;10409:131;10535:4;10409:131;:::i;:::-;10401:139;;10128:419;;;:::o;10553:180::-;10601:77;10598:1;10591:88;10698:4;10695:1;10688:15;10722:4;10719:1;10712:15;10739:191;10779:3;10798:20;10816:1;10798:20;:::i;:::-;10793:25;;10832:20;10850:1;10832:20;:::i;:::-;10827:25;;10875:1;10872;10868:9;10861:16;;10896:3;10893:1;10890:10;10887:36;;;10903:18;;:::i;:::-;10887:36;10739:191;;;;:::o;10936:180::-;10984:77;10981:1;10974:88;11081:4;11078:1;11071:15;11105:4;11102:1;11095:15;11122:122;11212:1;11205:5;11202:12;11192:46;;11218:18;;:::i;:::-;11192:46;11122:122;:::o;11250:145::-;11304:7;11333:5;11322:16;;11339:50;11383:5;11339:50;:::i;:::-;11250:145;;;:::o;11401:::-;11466:9;11499:41;11534:5;11499:41;:::i;:::-;11486:54;;11401:145;;;:::o;11552:161::-;11654:52;11700:5;11654:52;:::i;:::-;11649:3;11642:65;11552:161;;:::o;11719:583::-;11911:4;11949:3;11938:9;11934:19;11926:27;;11963:71;12031:1;12020:9;12016:17;12007:6;11963:71;:::i;:::-;12044:87;12127:2;12116:9;12112:18;12103:6;12044:87;:::i;:::-;12141:72;12209:2;12198:9;12194:18;12185:6;12141:72;:::i;:::-;12223;12291:2;12280:9;12276:18;12267:6;12223:72;:::i;:::-;11719:583;;;;;;;:::o;12308:410::-;12348:7;12371:20;12389:1;12371:20;:::i;:::-;12366:25;;12405:20;12423:1;12405:20;:::i;:::-;12400:25;;12460:1;12457;12453:9;12482:30;12500:11;12482:30;:::i;:::-;12471:41;;12661:1;12652:7;12648:15;12645:1;12642:22;12622:1;12615:9;12595:83;12572:139;;12691:18;;:::i;:::-;12572:139;12356:362;12308:410;;;;:::o;12724:180::-;12772:77;12769:1;12762:88;12869:4;12866:1;12859:15;12893:4;12890:1;12883:15;12910:185;12950:1;12967:20;12985:1;12967:20;:::i;:::-;12962:25;;13001:20;13019:1;13001:20;:::i;:::-;12996:25;;13040:1;13030:35;;13045:18;;:::i;:::-;13030:35;13087:1;13084;13080:9;13075:14;;12910:185;;;;:::o;13101:227::-;13241:34;13237:1;13229:6;13225:14;13218:58;13310:10;13305:2;13297:6;13293:15;13286:35;13101:227;:::o;13334:366::-;13476:3;13497:67;13561:2;13556:3;13497:67;:::i;:::-;13490:74;;13573:93;13662:3;13573:93;:::i;:::-;13691:2;13686:3;13682:12;13675:19;;13334:366;;;:::o;13706:419::-;13872:4;13910:2;13899:9;13895:18;13887:26;;13959:9;13953:4;13949:20;13945:1;13934:9;13930:17;13923:47;13987:131;14113:4;13987:131;:::i;:::-;13979:139;;13706:419;;;:::o;14131:175::-;14271:27;14267:1;14259:6;14255:14;14248:51;14131:175;:::o;14312:366::-;14454:3;14475:67;14539:2;14534:3;14475:67;:::i;:::-;14468:74;;14551:93;14640:3;14551:93;:::i;:::-;14669:2;14664:3;14660:12;14653:19;;14312:366;;;:::o;14684:419::-;14850:4;14888:2;14877:9;14873:18;14865:26;;14937:9;14931:4;14927:20;14923:1;14912:9;14908:17;14901:47;14965:131;15091:4;14965:131;:::i;:::-;14957:139;;14684:419;;;:::o;15109:332::-;15230:4;15268:2;15257:9;15253:18;15245:26;;15281:71;15349:1;15338:9;15334:17;15325:6;15281:71;:::i;:::-;15362:72;15430:2;15419:9;15415:18;15406:6;15362:72;:::i;:::-;15109:332;;;;;:::o;15447:442::-;15596:4;15634:2;15623:9;15619:18;15611:26;;15647:71;15715:1;15704:9;15700:17;15691:6;15647:71;:::i;:::-;15728:72;15796:2;15785:9;15781:18;15772:6;15728:72;:::i;:::-;15810;15878:2;15867:9;15863:18;15854:6;15810:72;:::i;:::-;15447:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1429000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"apy(uint8)": "2735",
								"balanceOf(address)": "2873",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"stake(uint256,uint8)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"userStakes(address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_getDuration(enum MyToken.StakingPeriod)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1198,
									"end": 1725,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1333,
									"end": 1343,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1315,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1323,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1417,
									"end": 1468,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1423,
									"end": 1433,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1457,
									"end": 1465,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1457,
									"end": 1465,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1457,
									"end": 1465,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1457,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1467,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1467,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1457,
									"end": 1467,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1453,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1467,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1451,
									"end": 1467,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1448,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1435,
									"end": 1467,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1435,
									"end": 1467,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1417,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1417,
									"end": 1422,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1417,
									"end": 1468,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1417,
									"end": 1468,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1510,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1478,
									"end": 1481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1478,
									"end": 1507,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1478,
									"end": 1507,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1507,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1512,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1512,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1512,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1478,
									"end": 1512,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1572,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1538,
									"end": 1541,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1566,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1538,
									"end": 1567,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1538,
									"end": 1567,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1538,
									"end": 1567,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1572,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1572,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1572,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1538,
									"end": 1572,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1639,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1598,
									"end": 1601,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1602,
									"end": 1633,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1598,
									"end": 1634,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1598,
									"end": 1634,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1634,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1639,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1639,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1639,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1639,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1699,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1668,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1693,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1668,
									"end": 1694,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1668,
									"end": 1694,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1668,
									"end": 1694,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1668,
									"end": 1694,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1699,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1699,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1699,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1699,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3044,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3103,
									"end": 3105,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3091,
									"end": 3100,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3082,
									"end": 3089,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3101,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3106,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3109,
									"end": 3188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3239,
									"end": 3248,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3235,
									"end": 3252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3280,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3272,
									"end": 3278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3299,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3302,
									"end": 3381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3464,
									"end": 3470,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3453,
									"end": 3462,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3449,
									"end": 3471,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3407,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3200,
									"end": 3491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3553,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3549,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3555,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3601,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3604,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3775,
									"end": 3782,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3766,
									"end": 3772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3751,
									"end": 3773,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3709,
									"end": 3783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3501,
									"end": 3793,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3832,
									"end": 3834,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 3914,
									"end": 3921,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3911,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3903,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3858,
									"end": 3922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4036,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4025,
									"end": 4037,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3945,
									"end": 4044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4175,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4095,
									"end": 4096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4088,
									"end": 4176,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4192,
									"end": 4193,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4185,
									"end": 4200,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4219,
									"end": 4223,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4216,
									"end": 4217,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4209,
									"end": 4224,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4318,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4311,
									"end": 4315,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4319,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4358,
									"end": 4362,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4354,
									"end": 4366,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4385,
									"end": 4403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4433,
									"end": 4439,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4429,
									"end": 4446,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4503,
									"end": 4505,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4495,
									"end": 4501,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4492,
									"end": 4506,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4472,
									"end": 4490,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4507,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4522,
									"end": 4540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4236,
									"end": 4556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4611,
									"end": 4615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4637,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4657,
									"end": 4660,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4654,
									"end": 4655,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4691,
									"end": 4695,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4688,
									"end": 4689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4678,
									"end": 4696,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4746,
									"end": 4752,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4793,
									"end": 4795,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4788,
									"end": 4790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4781,
									"end": 4786,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4777,
									"end": 4791,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4796,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4709,
									"end": 4802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4852,
									"end": 4860,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4902,
									"end": 4907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4896,
									"end": 4900,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 4908,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4990,
									"end": 4996,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5041,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 5038,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5024,
									"end": 5042,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 5093,
									"end": 5159,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5082,
									"end": 5091,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5063,
									"end": 5160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 5211,
									"end": 5219,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5200,
									"end": 5209,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5181,
									"end": 5220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5249,
									"end": 5258,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5242,
									"end": 5247,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5238,
									"end": 5259,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5302,
									"end": 5306,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5292,
									"end": 5300,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5288,
									"end": 5307,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5278,
									"end": 5308,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 5314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5348,
									"end": 5351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5436,
									"end": 5445,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5514,
									"end": 5519,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 5496,
									"end": 5520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5487,
									"end": 5521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 5469,
									"end": 5522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5577,
									"end": 5580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5598,
									"end": 5603,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 5756,
									"end": 5763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5725,
									"end": 5764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5859,
									"end": 5875,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 5835,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5827,
									"end": 5833,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 5824,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5814,
									"end": 5825,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5786,
									"end": 5877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5773,
									"end": 5878,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5691,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5615,
									"end": 5884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5935,
									"end": 5938,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5956,
									"end": 5957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5957,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5949,
									"end": 5957,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5890,
									"end": 5963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 6046,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6145,
									"end": 6151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6143,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6131,
									"end": 6135,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 6087,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6022,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5969,
									"end": 6158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6241,
									"end": 6244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6234,
									"end": 6239,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6231,
									"end": 6245,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6332,
									"end": 6333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6330,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 6295,
									"end": 6334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6268,
									"end": 6269,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6261,
									"end": 6266,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6257,
									"end": 6270,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6457,
									"end": 6459,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6452,
									"end": 6455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6449,
									"end": 6460,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6523,
									"end": 6528,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 6491,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 6593,
									"end": 6603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 6575,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6573,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6561,
									"end": 6605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6756,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6787,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 6876,
									"end": 6879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 6858,
									"end": 6880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6848,
									"end": 6856,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6844,
									"end": 6881,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6831,
									"end": 6842,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 6802,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6356,
									"end": 6899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6959,
									"end": 6967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7009,
									"end": 7014,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7003,
									"end": 7007,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7015,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6905,
									"end": 7022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7153,
									"end": 7154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7149,
									"end": 7155,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7141,
									"end": 7146,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7134,
									"end": 7147,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 7105,
									"end": 7156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7157,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7186,
									"end": 7190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7180,
									"end": 7184,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7176,
									"end": 7191,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7079,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7028,
									"end": 7197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7278,
									"end": 7282,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7449,
									"end": 7452,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 7424,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7489,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7483,
									"end": 7484,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7479,
									"end": 7490,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7473,
									"end": 7477,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7470,
									"end": 7491,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7202,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 7652,
									"end": 7655,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 7619,
									"end": 7656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7739,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7713,
									"end": 7719,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7740,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 7743,
									"end": 7761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7819,
									"end": 7823,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7813,
									"end": 7824,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 7787,
									"end": 7825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7932,
									"end": 7938,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7918,
									"end": 7922,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 7872,
									"end": 7939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 7967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7990,
									"end": 7994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8022,
									"end": 8024,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8014,
									"end": 8020,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8011,
									"end": 8025,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8039,
									"end": 8040,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8696,
									"end": 8697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8757,
									"end": 8760,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8753,
									"end": 8772,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8773,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8873,
									"end": 8879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8866,
									"end": 8871,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 8813,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8807,
									"end": 8811,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8800,
									"end": 8881,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8669,
									"end": 8891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8082,
									"end": 8091,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8074,
									"end": 8080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8070,
									"end": 8092,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 8120,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8179,
									"end": 8180,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8204,
									"end": 8205,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8215,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8295,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8281,
									"end": 8284,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8277,
									"end": 8296,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8271,
									"end": 8297,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8263,
									"end": 8269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8298,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8338,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8329,
									"end": 8335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8386,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8373,
									"end": 8382,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8387,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8230,
									"end": 8234,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8227,
									"end": 8228,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8223,
									"end": 8235,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8429,
									"end": 8435,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8420,
									"end": 8427,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8417,
									"end": 8436,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8487,
									"end": 8496,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8482,
									"end": 8485,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8478,
									"end": 8497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8498,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8572,
									"end": 8576,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8564,
									"end": 8570,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8577,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8558,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 8530,
									"end": 8578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8522,
									"end": 8528,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8579,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8437,
									"end": 8593,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8639,
									"end": 8640,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8635,
									"end": 8636,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8627,
									"end": 8633,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8623,
									"end": 8637,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8619,
									"end": 8641,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8613,
									"end": 8617,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8642,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7502,
									"end": 8897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8940,
									"end": 8947,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8980,
									"end": 9022,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 9023,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9072,
									"end": 9079,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 9119,
									"end": 9124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 9101,
									"end": 9125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9035,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 9242,
									"end": 9247,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 9224,
									"end": 9248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9219,
									"end": 9222,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9212,
									"end": 9249,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9354,
									"end": 9358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9392,
									"end": 9394,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9381,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9377,
									"end": 9395,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9471,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9449,
									"end": 9455,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 9405,
									"end": 9476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9261,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9537,
									"end": 9614,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9534,
									"end": 9535,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9527,
									"end": 9615,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9634,
									"end": 9638,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9631,
									"end": 9632,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9624,
									"end": 9639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9658,
									"end": 9662,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9655,
									"end": 9656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9648,
									"end": 9663,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9777,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 9675,
									"end": 9777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9717,
									"end": 9725,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9764,
									"end": 9769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9761,
									"end": 9762,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9757,
									"end": 9770,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 9736,
									"end": 9770,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9736,
									"end": 9770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9777,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9777,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9675,
									"end": 9777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9844,
									"end": 9849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9851,
									"end": 9855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9875,
									"end": 9881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9866,
									"end": 9881,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9866,
									"end": 9881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9899,
									"end": 9904,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9890,
									"end": 9904,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9890,
									"end": 9904,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9934,
									"end": 9935,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9924,
									"end": 9932,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9921,
									"end": 9936,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10029,
									"end": 10033,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10024,
									"end": 10027,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10020,
									"end": 10034,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10014,
									"end": 10018,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10011,
									"end": 10035,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10008,
									"end": 10058,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10008,
									"end": 10058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10008,
									"end": 10058,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10038,
									"end": 10056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 10038,
									"end": 10056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 10038,
									"end": 10056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10038,
									"end": 10056,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 10038,
									"end": 10056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10008,
									"end": 10058,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 10008,
									"end": 10058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10088,
									"end": 10089,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10078,
									"end": 10086,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10074,
									"end": 10090,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10071,
									"end": 10522,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10071,
									"end": 10522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 10071,
									"end": 10522,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10503,
									"end": 10507,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10496,
									"end": 10501,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10492,
									"end": 10508,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10483,
									"end": 10508,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10483,
									"end": 10508,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10071,
									"end": 10522,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 10071,
									"end": 10522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10553,
									"end": 10557,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10547,
									"end": 10551,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10543,
									"end": 10558,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10535,
									"end": 10558,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10535,
									"end": 10558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10583,
									"end": 10615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10606,
									"end": 10614,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10583,
									"end": 10615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 10583,
									"end": 10615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10583,
									"end": 10615,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 10583,
									"end": 10615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10571,
									"end": 10615,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10571,
									"end": 10615,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 9913,
									"end": 10625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9783,
									"end": 10631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10691,
									"end": 10696,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10882,
									"end": 10890,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 10872,
									"end": 10912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10903,
									"end": 10904,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10894,
									"end": 10904,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10894,
									"end": 10904,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10905,
									"end": 10910,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 10905,
									"end": 10910,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10912,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 10872,
									"end": 10912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10931,
									"end": 10935,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10921,
									"end": 10957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10921,
									"end": 10957,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10948,
									"end": 10949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10939,
									"end": 10949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10939,
									"end": 10949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10950,
									"end": 10955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 10950,
									"end": 10955,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10921,
									"end": 10957,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 10921,
									"end": 10957,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11017,
									"end": 11021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11065,
									"end": 11066,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11101,
									"end": 11102,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11010,
									"end": 11287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 11010,
									"end": 11287,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 11060,
									"end": 11087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11078,
									"end": 11079,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11069,
									"end": 11079,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11069,
									"end": 11079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11080,
									"end": 11085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11080,
									"end": 11085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11080,
									"end": 11085,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 11096,
									"end": 11287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11141,
									"end": 11144,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 11131,
									"end": 11139,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11128,
									"end": 11145,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11125,
									"end": 11168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11125,
									"end": 11168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11125,
									"end": 11168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11148,
									"end": 11166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 11148,
									"end": 11166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 11148,
									"end": 11166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11148,
									"end": 11166,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 11148,
									"end": 11166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11125,
									"end": 11168,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 11125,
									"end": 11168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11197,
									"end": 11205,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11194,
									"end": 11195,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 11190,
									"end": 11206,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 11181,
									"end": 11206,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11181,
									"end": 11206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11232,
									"end": 11235,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11225,
									"end": 11230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11222,
									"end": 11236,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11219,
									"end": 11259,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11219,
									"end": 11259,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 11219,
									"end": 11259,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11239,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 11239,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 11239,
									"end": 11257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11239,
									"end": 11257,
									"name": "tag",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 11239,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11219,
									"end": 11259,
									"name": "tag",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 11219,
									"end": 11259,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11272,
									"end": 11277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11272,
									"end": 11277,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11272,
									"end": 11277,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11010,
									"end": 11287,
									"name": "tag",
									"source": 7,
									"value": "231"
								},
								{
									"begin": 11010,
									"end": 11287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11010,
									"end": 11287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11396,
									"end": 11398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11386,
									"end": 11394,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11383,
									"end": 11399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11377,
									"end": 11380,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 11371,
									"end": 11375,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11368,
									"end": 11381,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11400,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11346,
									"end": 11348,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 11336,
									"end": 11344,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11349,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11328,
									"end": 11330,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 11322,
									"end": 11326,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11319,
									"end": 11331,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11315,
									"end": 11350,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11299,
									"end": 11410,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 11296,
									"end": 11542,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11296,
									"end": 11542,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 11296,
									"end": 11542,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11452,
									"end": 11460,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11446,
									"end": 11450,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11442,
									"end": 11461,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 11433,
									"end": 11461,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11433,
									"end": 11461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11487,
									"end": 11490,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11480,
									"end": 11485,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11477,
									"end": 11491,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11514,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 11474,
									"end": 11514,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11494,
									"end": 11512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 11494,
									"end": 11512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 11494,
									"end": 11512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11494,
									"end": 11512,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 11494,
									"end": 11512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11474,
									"end": 11514,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 11474,
									"end": 11514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11527,
									"end": 11532,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 11527,
									"end": 11532,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11296,
									"end": 11542,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 11296,
									"end": 11542,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11567,
									"end": 11609,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 11605,
									"end": 11608,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11595,
									"end": 11603,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11589,
									"end": 11593,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11586,
									"end": 11587,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11567,
									"end": 11609,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 11567,
									"end": 11609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11567,
									"end": 11609,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 11567,
									"end": 11609,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11552,
									"end": 11609,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11552,
									"end": 11609,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11552,
									"end": 11609,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11552,
									"end": 11609,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11641,
									"end": 11645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11636,
									"end": 11639,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11646,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11625,
									"end": 11630,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11622,
									"end": 11647,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11619,
									"end": 11670,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11619,
									"end": 11670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 11619,
									"end": 11670,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11650,
									"end": 11668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 11650,
									"end": 11668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 11650,
									"end": 11668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11650,
									"end": 11668,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 11650,
									"end": 11668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11619,
									"end": 11670,
									"name": "tag",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 11619,
									"end": 11670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11699,
									"end": 11703,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11692,
									"end": 11697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11688,
									"end": 11704,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11679,
									"end": 11704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11679,
									"end": 11704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10637,
									"end": 11710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11802,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 11716,
									"end": 11802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11751,
									"end": 11758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11791,
									"end": 11795,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 11784,
									"end": 11789,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11780,
									"end": 11796,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11769,
									"end": 11796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11769,
									"end": 11796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11802,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11802,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11802,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11716,
									"end": 11802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11866,
									"end": 11871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11890,
									"end": 11913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11908,
									"end": 11912,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11890,
									"end": 11913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 11890,
									"end": 11913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11890,
									"end": 11913,
									"name": "tag",
									"source": 7,
									"value": "246"
								},
								{
									"begin": 11890,
									"end": 11913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11882,
									"end": 11913,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11882,
									"end": 11913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11934,
									"end": 11959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 11950,
									"end": 11958,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11934,
									"end": 11959,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 11934,
									"end": 11959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11934,
									"end": 11959,
									"name": "tag",
									"source": 7,
									"value": "247"
								},
								{
									"begin": 11934,
									"end": 11959,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11922,
									"end": 11959,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11922,
									"end": 11959,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11978,
									"end": 12082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 12015,
									"end": 12081,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12005,
									"end": 12013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11999,
									"end": 12003,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11978,
									"end": 12082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 11978,
									"end": 12082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11978,
									"end": 12082,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11978,
									"end": 12082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11969,
									"end": 12082,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11969,
									"end": 12082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11808,
									"end": 12089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12135,
									"end": 12142,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12158,
									"end": 12178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 12176,
									"end": 12177,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12158,
									"end": 12178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12158,
									"end": 12178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12158,
									"end": 12178,
									"name": "tag",
									"source": 7,
									"value": "250"
								},
								{
									"begin": 12158,
									"end": 12178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12153,
									"end": 12178,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12153,
									"end": 12178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12192,
									"end": 12212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12210,
									"end": 12211,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12192,
									"end": 12212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12192,
									"end": 12212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12192,
									"end": 12212,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12192,
									"end": 12212,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12187,
									"end": 12212,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12187,
									"end": 12212,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12247,
									"end": 12248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12244,
									"end": 12245,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12240,
									"end": 12249,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 12269,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12287,
									"end": 12298,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12269,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12269,
									"end": 12299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12269,
									"end": 12299,
									"name": "tag",
									"source": 7,
									"value": "252"
								},
								{
									"begin": 12269,
									"end": 12299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12258,
									"end": 12299,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12258,
									"end": 12299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12448,
									"end": 12449,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12439,
									"end": 12446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12435,
									"end": 12450,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 12432,
									"end": 12433,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12429,
									"end": 12451,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12409,
									"end": 12410,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12402,
									"end": 12411,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12382,
									"end": 12465,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 12359,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "253"
								},
								{
									"begin": 12359,
									"end": 12498,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 12478,
									"end": 12496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "tag",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12478,
									"end": 12496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12359,
									"end": 12498,
									"name": "tag",
									"source": 7,
									"value": "253"
								},
								{
									"begin": 12359,
									"end": 12498,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12143,
									"end": 12505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12095,
									"end": 12505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12691,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 12511,
									"end": 12691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12559,
									"end": 12636,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12556,
									"end": 12557,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12549,
									"end": 12637,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12656,
									"end": 12660,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 12653,
									"end": 12654,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 12646,
									"end": 12661,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12680,
									"end": 12684,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 12677,
									"end": 12678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12670,
									"end": 12685,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12737,
									"end": 12740,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12756,
									"end": 12776,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 12774,
									"end": 12775,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12756,
									"end": 12776,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12756,
									"end": 12776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12756,
									"end": 12776,
									"name": "tag",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 12756,
									"end": 12776,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12751,
									"end": 12776,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12751,
									"end": 12776,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12790,
									"end": 12810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 12808,
									"end": 12809,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12790,
									"end": 12810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12790,
									"end": 12810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12790,
									"end": 12810,
									"name": "tag",
									"source": 7,
									"value": "258"
								},
								{
									"begin": 12790,
									"end": 12810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12785,
									"end": 12810,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12785,
									"end": 12810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12833,
									"end": 12834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12830,
									"end": 12831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12826,
									"end": 12835,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12819,
									"end": 12835,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12819,
									"end": 12835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12854,
									"end": 12857,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 12851,
									"end": 12852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12848,
									"end": 12858,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12845,
									"end": 12881,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12845,
									"end": 12881,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 12845,
									"end": 12881,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12861,
									"end": 12879,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 12861,
									"end": 12879,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 12861,
									"end": 12879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12861,
									"end": 12879,
									"name": "tag",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 12861,
									"end": 12879,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12845,
									"end": 12881,
									"name": "tag",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 12845,
									"end": 12881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12697,
									"end": 12888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12894,
									"end": 13012,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 12894,
									"end": 13012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12981,
									"end": 13005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 12999,
									"end": 13004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12981,
									"end": 13005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 12981,
									"end": 13005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12981,
									"end": 13005,
									"name": "tag",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 12981,
									"end": 13005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12976,
									"end": 12979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12969,
									"end": 13006,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12894,
									"end": 13012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12894,
									"end": 13012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12894,
									"end": 13012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13167,
									"end": 13171,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13205,
									"end": 13207,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 13194,
									"end": 13203,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13190,
									"end": 13208,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13208,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13182,
									"end": 13208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13218,
									"end": 13289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "264"
								},
								{
									"begin": 13286,
									"end": 13287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13275,
									"end": 13284,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13271,
									"end": 13288,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13262,
									"end": 13268,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 13218,
									"end": 13289,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 13218,
									"end": 13289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13218,
									"end": 13289,
									"name": "tag",
									"source": 7,
									"value": "264"
								},
								{
									"begin": 13218,
									"end": 13289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13299,
									"end": 13371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13367,
									"end": 13369,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13356,
									"end": 13365,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13352,
									"end": 13370,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13343,
									"end": 13349,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13299,
									"end": 13371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 13299,
									"end": 13371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13299,
									"end": 13371,
									"name": "tag",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13299,
									"end": 13371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13381,
									"end": 13453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13449,
									"end": 13451,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 13438,
									"end": 13447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13434,
									"end": 13452,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13425,
									"end": 13431,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13381,
									"end": 13453,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 13381,
									"end": 13453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13381,
									"end": 13453,
									"name": "tag",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13381,
									"end": 13453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13018,
									"end": 13460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13559,
									"end": 13563,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13597,
									"end": 13599,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13586,
									"end": 13595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13582,
									"end": 13600,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13574,
									"end": 13600,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13574,
									"end": 13600,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13610,
									"end": 13681,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 13678,
									"end": 13679,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13667,
									"end": 13676,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13663,
									"end": 13680,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13654,
									"end": 13660,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13610,
									"end": 13681,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 13610,
									"end": 13681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13610,
									"end": 13681,
									"name": "tag",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 13610,
									"end": 13681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13466,
									"end": 13688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 4146,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ee663003e08b037dccfe8f59a58f8e1e756ade2d622ead395d343b21768325364736f6c634300081e0033",
									".code": [
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "B5D5B5FA"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "1F1ACCB2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "1F1ACCB2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "10087FB1"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 4146,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1892,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1892,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 719,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 719,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 719,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3690,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3690,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1793,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1793,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 820,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 820,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 820,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 820,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1980,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1964,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1964,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2038,
											"end": 2048,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2028,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2049,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2028,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2020,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2020,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2125,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2145,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2125,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2272,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2296,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2332,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2365,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2608,
											"end": 2618,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2596,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2596,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2607,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2596,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2596,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2596,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2596,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2432,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2443,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2444,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1954,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 719,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 719,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3786,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3787,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3799,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3817,
											"end": 3827,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3809,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3809,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3905,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3882,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3882,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4006,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3981,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3973,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3973,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3973,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3973,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3973,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3973,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4036,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 4114,
											"end": 4125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4136,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4093,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1868,
											"end": 1870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1862,
											"end": 1879,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1862,
											"end": 1879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 881,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 820,
											"end": 881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 820,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2867,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2901,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2901,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2898,
											"end": 3677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2948,
											"end": 3045,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3677,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2898,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3096,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3064,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3064,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3061,
											"end": 3677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3159,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "5A"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "B4"
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3111,
											"end": 3208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3677,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3061,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3227,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3227,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3224,
											"end": 3677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "B4"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3281,
											"end": 3379,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3677,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3224,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3427,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3398,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3398,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3395,
											"end": 3677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3442,
											"end": 3541,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3677,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3395,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 3684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3409,
											"end": 3449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3449,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3409,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3569,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3622,
											"end": 3627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3578,
											"end": 3628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3628,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3578,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3780,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3788,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3933,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3986,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4123,
											"end": 4130,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4099,
											"end": 4121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4061,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4131,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4061,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 4148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4259,
											"end": 4264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 4241,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4241,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4229,
											"end": 4266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4422,
											"end": 4493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4422,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4606,
											"end": 4629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4602,
											"end": 4634,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4599,
											"end": 4718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4637,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4637,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 4716,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4637,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4718,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4599,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4782,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4852,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4782,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4772,
											"end": 4852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4772,
											"end": 4852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5019,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5014,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5003,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 5015,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5020,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4985,
											"end": 5104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 5023,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5023,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5102,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 5023,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 5104,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4985,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5213,
											"end": 5220,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5193,
											"end": 5202,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5168,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5221,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5168,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5221,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5158,
											"end": 5221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5296,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5341,
											"end": 5348,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5296,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5296,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5296,
											"end": 5349,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5296,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5469,
											"end": 5476,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5424,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5477,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5424,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5369,
											"end": 5487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 5494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5608,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5594,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5611,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5576,
											"end": 5695,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5614,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5614,
											"end": 5693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5693,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5614,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5695,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5576,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5759,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5812,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5759,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5705,
											"end": 5822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5921,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5835,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5915,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5888,
											"end": 5915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6039,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5927,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6026,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6010,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 6010,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6174,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6249,
											"end": 6250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 6185,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6252,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6185,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6359,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6344,
											"end": 6376,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6379,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 6569,
											"end": 6576,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6558,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6524,
											"end": 6577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6718,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 6600,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6687,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6705,
											"end": 6710,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6687,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6687,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6687,
											"end": 6711,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6687,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6675,
											"end": 6712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 6718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6855,
											"end": 6857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 6938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 6868,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6868,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7192,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7178,
											"end": 7187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7203,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7203,
											"end": 7274,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7203,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7352,
											"end": 7354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7350,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7337,
											"end": 7355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7334,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7284,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7284,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7284,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7366,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7434,
											"end": 7436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7423,
											"end": 7432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7366,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7366,
											"end": 7438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7366,
											"end": 7438,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7366,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7448,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7520,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7448,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 7592,
											"end": 7595,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7568,
											"end": 7574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7530,
											"end": 7597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7597,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 7530,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 7604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7737,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7733,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7738,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7822,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 7703,
											"end": 7822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7741,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7741,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7820,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7741,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7822,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 7703,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7907,
											"end": 7929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7886,
											"end": 7939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7939,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 7886,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 7939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 7939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7832,
											"end": 7949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7988,
											"end": 7990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8014,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8014,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8067,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 8014,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 8077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 8084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8090,
											"end": 8270,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 8090,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8135,
											"end": 8136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8239,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8225,
											"end": 8240,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8263,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8264,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8596,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 8276,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8358,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8351,
											"end": 8355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8359,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8398,
											"end": 8402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8406,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8415,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 8415,
											"end": 8496,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8485,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8473,
											"end": 8479,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8469,
											"end": 8486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8415,
											"end": 8496,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 8415,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8545,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8535,
											"end": 8541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8546,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8509,
											"end": 8547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 8506,
											"end": 8590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 8562,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8506,
											"end": 8590,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 8506,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8327,
											"end": 8596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8596,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8777,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8602,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 8769,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E742073686F756C6420626520706F73697469766500000000000000"
										},
										{
											"begin": 8738,
											"end": 8739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8719,
											"end": 8770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 9149,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 8783,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8925,
											"end": 8928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 9010,
											"end": 9012,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 9005,
											"end": 9008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8946,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8946,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 9013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 9111,
											"end": 9114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9022,
											"end": 9115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9115,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 9022,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9135,
											"end": 9138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9131,
											"end": 9143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9124,
											"end": 9143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 9149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 9149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 9149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 9149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9574,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9155,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9321,
											"end": 9325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9348,
											"end": 9357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9344,
											"end": 9362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9436,
											"end": 9567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9567,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 9436,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9580,
											"end": 9750,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9580,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9742,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9704,
											"end": 9718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9697,
											"end": 9743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9580,
											"end": 9750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9580,
											"end": 9750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 10122,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9756,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9983,
											"end": 9985,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 9978,
											"end": 9981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9919,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9919,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9919,
											"end": 9986,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9919,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9995,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 10084,
											"end": 10087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9995,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9995,
											"end": 10088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9995,
											"end": 10088,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 9995,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10113,
											"end": 10115,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10108,
											"end": 10111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 10122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 10122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 10122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9756,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10547,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 10128,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10294,
											"end": 10298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10334,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10321,
											"end": 10330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 10391,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10367,
											"end": 10368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10409,
											"end": 10540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10409,
											"end": 10540,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 10409,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10401,
											"end": 10540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10401,
											"end": 10540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10733,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10553,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10678,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10698,
											"end": 10702,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10703,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10722,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10779,
											"end": 10782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10798,
											"end": 10818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10818,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 10798,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 10818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 10818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 10850,
											"end": 10851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10832,
											"end": 10852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10852,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10861,
											"end": 10877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10861,
											"end": 10877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10900,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 10887,
											"end": 10923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10903,
											"end": 10921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 10903,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10887,
											"end": 10923,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 10887,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10936,
											"end": 11116,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 10936,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10984,
											"end": 11061,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 11062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11071,
											"end": 11086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11105,
											"end": 11109,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11244,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11122,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11205,
											"end": 11210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11202,
											"end": 11214,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 11192,
											"end": 11238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 11218,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11192,
											"end": 11238,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 11192,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11395,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11250,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11333,
											"end": 11338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11383,
											"end": 11388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11339,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11389,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 11339,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11395,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11546,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11401,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 11534,
											"end": 11539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11499,
											"end": 11540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11540,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 11499,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11486,
											"end": 11540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11486,
											"end": 11540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11546,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11401,
											"end": 11546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11713,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11552,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11700,
											"end": 11705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11654,
											"end": 11706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11706,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11654,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11649,
											"end": 11652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11552,
											"end": 11713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11911,
											"end": 11915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11952,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11938,
											"end": 11947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11934,
											"end": 11953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11926,
											"end": 11953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11926,
											"end": 11953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12016,
											"end": 12033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12007,
											"end": 12013,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 12034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11963,
											"end": 12034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 12034,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11963,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12127,
											"end": 12129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12116,
											"end": 12125,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12103,
											"end": 12109,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 12044,
											"end": 12131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12044,
											"end": 12131,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12044,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12194,
											"end": 12212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12185,
											"end": 12191,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 12141,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12213,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 12141,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12223,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12291,
											"end": 12293,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12267,
											"end": 12273,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12223,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 12223,
											"end": 12295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12223,
											"end": 12295,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12223,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11719,
											"end": 12302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12371,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 12371,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12371,
											"end": 12391,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12371,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12366,
											"end": 12391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12366,
											"end": 12391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12423,
											"end": 12424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 12405,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12425,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12405,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12400,
											"end": 12425,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12400,
											"end": 12425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12460,
											"end": 12461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12457,
											"end": 12458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12453,
											"end": 12462,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12482,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12500,
											"end": 12511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12482,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 12482,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12482,
											"end": 12512,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12482,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12471,
											"end": 12512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12471,
											"end": 12512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12661,
											"end": 12662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12652,
											"end": 12659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12648,
											"end": 12663,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12645,
											"end": 12646,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12664,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12622,
											"end": 12623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12615,
											"end": 12624,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12678,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12572,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12572,
											"end": 12711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 12691,
											"end": 12709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 12691,
											"end": 12709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12709,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 12691,
											"end": 12709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12572,
											"end": 12711,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12572,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12724,
											"end": 12904,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 12724,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12772,
											"end": 12849,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12769,
											"end": 12770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12869,
											"end": 12873,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 12866,
											"end": 12867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12893,
											"end": 12897,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12890,
											"end": 12891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12898,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12950,
											"end": 12951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 12967,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12962,
											"end": 12987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12962,
											"end": 12987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13019,
											"end": 13020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 13001,
											"end": 13021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13001,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13021,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13030,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13030,
											"end": 13065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13045,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13045,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 13045,
											"end": 13063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13045,
											"end": 13063,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13045,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13030,
											"end": 13065,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13030,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13088,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13084,
											"end": 13085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13080,
											"end": 13089,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13075,
											"end": 13089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13075,
											"end": 13089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 13095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13101,
											"end": 13328,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 13101,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13241,
											"end": 13275,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B65206973206E6F7420616374697665206F7220616C72656164792077"
										},
										{
											"begin": 13237,
											"end": 13238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13225,
											"end": 13239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13218,
											"end": 13276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13310,
											"end": 13320,
											"name": "PUSH",
											"source": 7,
											"value": "697468647261776E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13305,
											"end": 13307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13297,
											"end": 13303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13286,
											"end": 13321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13101,
											"end": 13328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13101,
											"end": 13328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13700,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13334,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13476,
											"end": 13479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13561,
											"end": 13563,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 13556,
											"end": 13559,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 13497,
											"end": 13564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13564,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 13497,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13662,
											"end": 13665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 13573,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13666,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 13573,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13691,
											"end": 13693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13686,
											"end": 13689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13682,
											"end": 13694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13675,
											"end": 13694,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13675,
											"end": 13694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 14125,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 13706,
											"end": 14125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13910,
											"end": 13912,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13899,
											"end": 13908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13895,
											"end": 13913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13959,
											"end": 13968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13953,
											"end": 13957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 13969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13945,
											"end": 13946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13934,
											"end": 13943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 13947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13923,
											"end": 13970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 14113,
											"end": 14117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13987,
											"end": 14118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14118,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 13987,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 14125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 14125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 14125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13706,
											"end": 14125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14131,
											"end": 14306,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14131,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14298,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B6520706572696F64206973206E6F7420656E64656400000000000000"
										},
										{
											"begin": 14267,
											"end": 14268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14269,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14131,
											"end": 14306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14131,
											"end": 14306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14678,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 14312,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14454,
											"end": 14457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14475,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 14539,
											"end": 14541,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 14534,
											"end": 14537,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 14475,
											"end": 14542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14542,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 14475,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14468,
											"end": 14542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14468,
											"end": 14542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 14640,
											"end": 14643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14551,
											"end": 14644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14644,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 14551,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14664,
											"end": 14667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14660,
											"end": 14672,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14653,
											"end": 14672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14312,
											"end": 14678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 15103,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 14684,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14850,
											"end": 14854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14890,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14877,
											"end": 14886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14873,
											"end": 14891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14865,
											"end": 14891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14865,
											"end": 14891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14937,
											"end": 14946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14931,
											"end": 14935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 14947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14923,
											"end": 14924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14912,
											"end": 14921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14908,
											"end": 14925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 14948,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14965,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 15091,
											"end": 15095,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14965,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 14965,
											"end": 15096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14965,
											"end": 15096,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 14965,
											"end": 15096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14957,
											"end": 15096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14957,
											"end": 15096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 15103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 15103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 15103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 15103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15230,
											"end": 15234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15268,
											"end": 15270,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15257,
											"end": 15266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15253,
											"end": 15271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15245,
											"end": 15271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 15349,
											"end": 15350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15347,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15334,
											"end": 15351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15325,
											"end": 15331,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 15281,
											"end": 15352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15352,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 15281,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15362,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 15430,
											"end": 15432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15419,
											"end": 15428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15415,
											"end": 15433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15406,
											"end": 15412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15362,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 15362,
											"end": 15434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15362,
											"end": 15434,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 15362,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15109,
											"end": 15441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15596,
											"end": 15600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15634,
											"end": 15636,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15623,
											"end": 15632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15619,
											"end": 15637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15611,
											"end": 15637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15611,
											"end": 15637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 15715,
											"end": 15716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15704,
											"end": 15713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15700,
											"end": 15717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15697,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 15647,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15718,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 15647,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15728,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 15796,
											"end": 15798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15785,
											"end": 15794,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15781,
											"end": 15799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15772,
											"end": 15778,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15728,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 15728,
											"end": 15800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15728,
											"end": 15800,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 15728,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15867,
											"end": 15876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15863,
											"end": 15881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15854,
											"end": 15860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 15810,
											"end": 15882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15810,
											"end": 15882,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 15810,
											"end": 15882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15447,
											"end": 15889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"apy(uint8)": "1f1accb2",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256,uint8)": "10087fb1",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"userStakes(address,uint256)": "b5d5b5fa",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum MyToken.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum MyToken.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum MyToken.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x16f160d923bf4c764b08b2d9f85507fb594d3fc8845ce2754116b2e6578357f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a43f4b950f2a0a3303a687ca7b8d370f11e6a67902a8f8cf918faaac51ac728\",\"dweb:/ipfs/QmcPXUWogWQCXMoEFaDzEW5z7Y3XCdzXzdBpPUF6EJKMy7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "apy",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_enum(StakingPeriod)962,t_uint256)"
							},
							{
								"astId": 974,
								"contract": "contracts/MyToken.sol:MyToken",
								"label": "userStakes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)952_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(StakingPeriod)962": {
								"encoding": "inplace",
								"label": "enum MyToken.StakingPeriod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)952_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct MyToken.Stake))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Stake)952_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(StakingPeriod)962,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)962",
								"label": "mapping(enum MyToken.StakingPeriod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)952_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MyToken.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)952_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Stake)952_storage": {
								"encoding": "inplace",
								"label": "struct MyToken.Stake",
								"members": [
									{
										"astId": 943,
										"contract": "contracts/MyToken.sol:MyToken",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "contracts/MyToken.sol:MyToken",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 947,
										"contract": "contracts/MyToken.sol:MyToken",
										"label": "endTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 949,
										"contract": "contracts/MyToken.sol:MyToken",
										"label": "rewardRate",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 951,
										"contract": "contracts/MyToken.sol:MyToken",
										"label": "isActive",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MyToken": [
							1287
						],
						"Ownable": [
							147
						]
					},
					"id": 1288,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1288,
							"sourceUnit": 800,
							"src": "57:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1288,
							"sourceUnit": 148,
							"src": "113:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"187:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "187:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "187:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"194:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "194:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "194:7:6"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1287,
							"linearizedBaseContracts": [
								1287,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MyToken",
							"nameLocation": "176:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyToken.Stake",
									"id": 952,
									"members": [
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "240:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "232:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "232:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "289:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "281:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 944,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "344:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "336:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "336:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "399:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "391:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "466:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "461:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 950,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "461:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "216:5:6",
									"nodeType": "StructDefinition",
									"scope": 1287,
									"src": "209:304:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MyToken.timeMapping",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "periodDays",
											"nameLocation": "556:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "548:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "548:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "584:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "576:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "576:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "timeMapping",
									"nameLocation": "526:11:6",
									"nodeType": "StructDefinition",
									"scope": 1287,
									"src": "519:76:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MyToken.StakingPeriod",
									"id": 962,
									"members": [
										{
											"id": 958,
											"name": "ThirtyDays",
											"nameLocation": "631:10:6",
											"nodeType": "EnumValue",
											"src": "631:10:6"
										},
										{
											"id": 959,
											"name": "NinetyDays",
											"nameLocation": "651:10:6",
											"nodeType": "EnumValue",
											"src": "651:10:6"
										},
										{
											"id": 960,
											"name": "HundredEightyDays",
											"nameLocation": "672:17:6",
											"nodeType": "EnumValue",
											"src": "672:17:6"
										},
										{
											"id": 961,
											"name": "OneYear",
											"nameLocation": "700:7:6",
											"nodeType": "EnumValue",
											"src": "700:7:6"
										}
									],
									"name": "StakingPeriod",
									"nameLocation": "606:13:6",
									"nodeType": "EnumDefinition",
									"src": "601:112:6"
								},
								{
									"constant": false,
									"functionSelector": "1f1accb2",
									"id": 967,
									"mutability": "mutable",
									"name": "apy",
									"nameLocation": "760:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1287,
									"src": "719:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
										"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 966,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 964,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 963,
												"name": "StakingPeriod",
												"nameLocations": [
													"727:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 962,
												"src": "727:13:6"
											},
											"referencedDeclaration": 962,
											"src": "727:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$962",
												"typeString": "enum MyToken.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "719:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
											"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "744:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5d5b5fa",
									"id": 974,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "871:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1287,
									"src": "820:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct MyToken.Stake))"
									},
									"typeName": {
										"id": 973,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 968,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:43:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct MyToken.Stake))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 972,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 969,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "847:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "839:23:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$",
												"typeString": "mapping(uint256 => struct MyToken.Stake)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 971,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 970,
													"name": "Stake",
													"nameLocations": [
														"856:5:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 952,
													"src": "856:5:6"
												},
												"referencedDeclaration": 952,
												"src": "856:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
													"typeString": "struct MyToken.Stake"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c",
									"id": 987,
									"name": "Staked",
									"nameLocation": "925:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "957:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "941:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "979:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "971:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1009:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "995:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$962",
													"typeString": "enum MyToken.StakingPeriod"
												},
												"typeName": {
													"id": 980,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 979,
														"name": "StakingPeriod",
														"nameLocations": [
															"995:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "995:13:6"
													},
													"referencedDeclaration": 962,
													"src": "995:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$962",
														"typeString": "enum MyToken.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1033:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1025:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1060:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1052:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:145:6"
									},
									"src": "919:158:6"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 995,
									"name": "Withdrawn",
									"nameLocation": "1089:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1124:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1108:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "1146:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1138:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1175:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1167:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:93:6"
									},
									"src": "1083:109:6"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1346:379:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1013,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1423:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1427:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1423:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "1435:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1451:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1017,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1457:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1457:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1451:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1435:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1012,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1417:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "1417:51:6"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1023,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1478:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
																"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
															}
														},
														"id": 1026,
														"indexExpression": {
															"expression": {
																"id": 1024,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1482:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																	"typeString": "type(enum MyToken.StakingPeriod)"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1496:10:6",
															"memberName": "ThirtyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 958,
															"src": "1482:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1478:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1510:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1478:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1478:34:6"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1030,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1538:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
																"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
															}
														},
														"id": 1033,
														"indexExpression": {
															"expression": {
																"id": 1031,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1542:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																	"typeString": "type(enum MyToken.StakingPeriod)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1556:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 959,
															"src": "1542:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1538:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1570:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1538:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1538:34:6"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1037,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1598:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
																"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"expression": {
																"id": 1038,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1602:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																	"typeString": "type(enum MyToken.StakingPeriod)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1616:17:6",
															"memberName": "HundredEightyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "1602:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1598:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1637:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "1598:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1598:41:6"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1044,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1668:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
																"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
															}
														},
														"id": 1047,
														"indexExpression": {
															"expression": {
																"id": 1045,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "1672:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																	"typeString": "type(enum MyToken.StakingPeriod)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1686:7:6",
															"memberName": "OneYear",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 961,
															"src": "1672:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1668:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3235",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1697:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_25_by_1",
															"typeString": "int_const 25"
														},
														"value": "25"
													},
													"src": "1668:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1668:31:6"
											}
										]
									},
									"id": 1052,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1004,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 997,
													"src": "1311:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1005,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 999,
													"src": "1317:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1006,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1003,
												"name": "ERC20",
												"nameLocations": [
													"1305:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1305:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1305:19:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1008,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1333:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1337:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1333:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1010,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1007,
												"name": "Ownable",
												"nameLocations": [
													"1325:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1325:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1325:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1233:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1219:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 996,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1219:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1261:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1247:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1285:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1277:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:95:6"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:0:6"
									},
									"scope": 1287,
									"src": "1198:527:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1852:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "1868:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "1872:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1862:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1862:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1059,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1058,
												"name": "onlyOwner",
												"nameLocations": [
													"1842:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1842:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1842:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1802:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1815:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1807:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1827:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1819:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:28:6"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1852:0:6"
									},
									"scope": 1287,
									"src": "1793:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "1954:793:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1972:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1979:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1972:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c6420626520706f736974697665",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																"typeString": "literal_string \"Amount should be positive\""
															},
															"value": "Amount should be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																"typeString": "literal_string \"Amount should be positive\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1964:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1964:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1084,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2038:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2042:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2038:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1083,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2028:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2028:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1087,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2051:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2028:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2020:62:6"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "durMapping",
														"nameLocation": "2112:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2093:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
															"typeString": "struct MyToken.timeMapping"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "timeMapping",
																"nameLocations": [
																	"2093:11:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "2093:11:6"
															},
															"referencedDeclaration": 957,
															"src": "2093:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_timeMapping_$957_storage_ptr",
																"typeString": "struct MyToken.timeMapping"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [
														{
															"id": 1096,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2138:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														],
														"id": 1095,
														"name": "_getDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "2125:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_StakingPeriod_$962_$returns$_t_struct$_timeMapping_$957_memory_ptr_$",
															"typeString": "function (enum MyToken.StakingPeriod) pure returns (struct MyToken.timeMapping memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2125:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
														"typeString": "struct MyToken.timeMapping memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2093:52:6"
											},
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "dur",
														"nameLocation": "2163:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2155:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1099,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2155:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"expression": {
														"id": 1101,
														"name": "durMapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "2167:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
															"typeString": "struct MyToken.timeMapping memory"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2178:4:6",
													"memberName": "time",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "2167:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2155:27:6"
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "periodDays",
														"nameLocation": "2200:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2192:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2192:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"expression": {
														"id": 1106,
														"name": "durMapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "2211:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
															"typeString": "struct MyToken.timeMapping memory"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2222:10:6",
													"memberName": "periodDays",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 954,
													"src": "2211:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2192:40:6"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "startT",
														"nameLocation": "2250:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2242:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"expression": {
														"id": 1111,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2257:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2263:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2257:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:30:6"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "endT",
														"nameLocation": "2290:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2282:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "startT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "2296:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1117,
														"name": "dur",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "2305:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2296:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2282:26:6"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2326:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2318:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2318:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "2332:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1123,
														"name": "endT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2339:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2332:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2318:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2372:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2376:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2372:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2384:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1130,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2392:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														{
															"id": 1131,
															"name": "endT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2400:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1132,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2365:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$962_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum MyToken.StakingPeriod,uint256,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "2360:51:6"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1135,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2422:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct MyToken.Stake storage ref))"
																}
															},
															"id": 1139,
															"indexExpression": {
																"expression": {
																	"id": 1136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2433:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2437:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2433:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2422:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$",
																"typeString": "mapping(uint256 => struct MyToken.Stake storage ref)"
															}
														},
														"id": 1140,
														"indexExpression": {
															"id": 1138,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2445:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2422:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$952_storage",
															"typeString": "struct MyToken.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1142,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2479:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1143,
																"name": "startT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "2509:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1144,
																"name": "endT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "2537:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1145,
																				"name": "apy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "2596:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$962_$_t_uint256_$",
																					"typeString": "mapping(enum MyToken.StakingPeriod => uint256)"
																				}
																			},
																			"id": 1147,
																			"indexExpression": {
																				"id": 1146,
																				"name": "period",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "2600:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_StakingPeriod_$962",
																					"typeString": "enum MyToken.StakingPeriod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2596:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1148,
																			"name": "periodDays",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "2608:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2596:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2619:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 1151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2623:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "2619:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	},
																	"src": "2596:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "333630",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2626:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_360_by_1",
																		"typeString": "int_const 360"
																	},
																	"value": "360"
																},
																"src": "2596:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2693:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1141,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2452:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$952_storage_ptr_$",
																"typeString": "type(struct MyToken.Stake storage pointer)"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2472:6:6",
															"2499:9:6",
															"2529:7:6",
															"2585:10:6",
															"2684:8:6"
														],
														"names": [
															"amount",
															"startTime",
															"endTime",
															"rewardRate",
															"isActive"
														],
														"nodeType": "FunctionCall",
														"src": "2452:288:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$952_memory_ptr",
															"typeString": "struct MyToken.Stake memory"
														}
													},
													"src": "2422:318:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$952_storage",
														"typeString": "struct MyToken.Stake storage ref"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "2422:318:6"
											}
										]
									},
									"functionSelector": "10087fb1",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1901:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1915:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1907:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1937:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1923:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$962",
													"typeString": "enum MyToken.StakingPeriod"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "StakingPeriod",
														"nameLocations": [
															"1923:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "1923:13:6"
													},
													"referencedDeclaration": 962,
													"src": "1923:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$962",
														"typeString": "enum MyToken.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:38:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:0:6"
									},
									"scope": 1287,
									"src": "1892:855:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "2887:797:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_StakingPeriod_$962",
														"typeString": "enum MyToken.StakingPeriod"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1170,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2901:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$962",
															"typeString": "enum MyToken.StakingPeriod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1171,
															"name": "StakingPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2909:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																"typeString": "type(enum MyToken.StakingPeriod)"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2923:10:6",
														"memberName": "ThirtyDays",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "2909:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$962",
															"typeString": "enum MyToken.StakingPeriod"
														}
													},
													"src": "2901:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_StakingPeriod_$962",
															"typeString": "enum MyToken.StakingPeriod"
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1180,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "3064:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1181,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "3072:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																	"typeString": "type(enum MyToken.StakingPeriod)"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3086:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 959,
															"src": "3072:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															}
														},
														"src": "3064:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_StakingPeriod_$962",
																"typeString": "enum MyToken.StakingPeriod"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1190,
																"name": "period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "3227:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$962",
																	"typeString": "enum MyToken.StakingPeriod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1191,
																	"name": "StakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "3235:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																		"typeString": "type(enum MyToken.StakingPeriod)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3249:17:6",
																"memberName": "HundredEightyDays",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 960,
																"src": "3235:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$962",
																	"typeString": "enum MyToken.StakingPeriod"
																}
															},
															"src": "3227:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$962",
																	"typeString": "enum MyToken.StakingPeriod"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1200,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3398:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$962",
																		"typeString": "enum MyToken.StakingPeriod"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1201,
																		"name": "StakingPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "3406:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$962_$",
																			"typeString": "type(enum MyToken.StakingPeriod)"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3420:7:6",
																	"memberName": "OneYear",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 961,
																	"src": "3406:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$962",
																		"typeString": "enum MyToken.StakingPeriod"
																	}
																},
																"src": "3398:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1215,
																"nodeType": "Block",
																"src": "3556:121:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "333630",
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3618:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					"value": "360"
																				},
																				{
																					"hexValue": "31",
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3644:7:6",
																					"subdenomination": "hours",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3600_by_1",
																						"typeString": "int_const 3600"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					{
																						"typeIdentifier": "t_rational_3600_by_1",
																						"typeString": "int_const 3600"
																					}
																				],
																				"id": 1210,
																				"name": "timeMapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "3577:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_timeMapping_$957_storage_ptr_$",
																					"typeString": "type(struct MyToken.timeMapping storage pointer)"
																				}
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"3607:10:6",
																				"3639:4:6"
																			],
																			"names": [
																				"periodDays",
																				"time"
																			],
																			"nodeType": "FunctionCall",
																			"src": "3577:89:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
																				"typeString": "struct MyToken.timeMapping memory"
																			}
																		},
																		"functionReturnParameters": 1169,
																		"id": 1214,
																		"nodeType": "Return",
																		"src": "3570:96:6"
																	}
																]
															},
															"id": 1216,
															"nodeType": "IfStatement",
															"src": "3395:282:6",
															"trueBody": {
																"id": 1209,
																"nodeType": "Block",
																"src": "3428:124:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "333630",
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3490:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					"value": "360"
																				},
																				{
																					"hexValue": "3130",
																					"id": 1206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3516:10:6",
																					"subdenomination": "minutes",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_600_by_1",
																						"typeString": "int_const 600"
																					},
																					"value": "10"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					{
																						"typeIdentifier": "t_rational_600_by_1",
																						"typeString": "int_const 600"
																					}
																				],
																				"id": 1204,
																				"name": "timeMapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "3449:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_timeMapping_$957_storage_ptr_$",
																					"typeString": "type(struct MyToken.timeMapping storage pointer)"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"3479:10:6",
																				"3511:4:6"
																			],
																			"names": [
																				"periodDays",
																				"time"
																			],
																			"nodeType": "FunctionCall",
																			"src": "3449:92:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
																				"typeString": "struct MyToken.timeMapping memory"
																			}
																		},
																		"functionReturnParameters": 1169,
																		"id": 1208,
																		"nodeType": "Return",
																		"src": "3442:99:6"
																	}
																]
															}
														},
														"id": 1217,
														"nodeType": "IfStatement",
														"src": "3224:453:6",
														"trueBody": {
															"id": 1199,
															"nodeType": "Block",
															"src": "3267:123:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313830",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3329:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_180_by_1",
																					"typeString": "int_const 180"
																				},
																				"value": "180"
																			},
																			{
																				"hexValue": "35",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3355:9:6",
																				"subdenomination": "minutes",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_300_by_1",
																					"typeString": "int_const 300"
																				},
																				"value": "5"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_180_by_1",
																					"typeString": "int_const 180"
																				},
																				{
																					"typeIdentifier": "t_rational_300_by_1",
																					"typeString": "int_const 300"
																				}
																			],
																			"id": 1194,
																			"name": "timeMapping",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "3288:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_timeMapping_$957_storage_ptr_$",
																				"typeString": "type(struct MyToken.timeMapping storage pointer)"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"3318:10:6",
																			"3350:4:6"
																		],
																		"names": [
																			"periodDays",
																			"time"
																		],
																		"nodeType": "FunctionCall",
																		"src": "3288:91:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
																			"typeString": "struct MyToken.timeMapping memory"
																		}
																	},
																	"functionReturnParameters": 1169,
																	"id": 1198,
																	"nodeType": "Return",
																	"src": "3281:98:6"
																}
															]
														}
													},
													"id": 1218,
													"nodeType": "IfStatement",
													"src": "3061:616:6",
													"trueBody": {
														"id": 1189,
														"nodeType": "Block",
														"src": "3097:122:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "3930",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3159:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_90_by_1",
																				"typeString": "int_const 90"
																			},
																			"value": "90"
																		},
																		{
																			"hexValue": "33",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3184:9:6",
																			"subdenomination": "minutes",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_180_by_1",
																				"typeString": "int_const 180"
																			},
																			"value": "3"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_90_by_1",
																				"typeString": "int_const 90"
																			},
																			{
																				"typeIdentifier": "t_rational_180_by_1",
																				"typeString": "int_const 180"
																			}
																		],
																		"id": 1184,
																		"name": "timeMapping",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "3118:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_timeMapping_$957_storage_ptr_$",
																			"typeString": "type(struct MyToken.timeMapping storage pointer)"
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"3148:10:6",
																		"3179:4:6"
																	],
																	"names": [
																		"periodDays",
																		"time"
																	],
																	"nodeType": "FunctionCall",
																	"src": "3118:90:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
																		"typeString": "struct MyToken.timeMapping memory"
																	}
																},
																"functionReturnParameters": 1169,
																"id": 1188,
																"nodeType": "Return",
																"src": "3111:97:6"
															}
														]
													}
												},
												"id": 1219,
												"nodeType": "IfStatement",
												"src": "2898:779:6",
												"trueBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "2934:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "3330",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2996:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	{
																		"hexValue": "31",
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3021:9:6",
																		"subdenomination": "minutes",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		{
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		}
																	],
																	"id": 1174,
																	"name": "timeMapping",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "2955:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_timeMapping_$957_storage_ptr_$",
																		"typeString": "type(struct MyToken.timeMapping storage pointer)"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"2985:10:6",
																	"3016:4:6"
																],
																"names": [
																	"periodDays",
																	"time"
																],
																"nodeType": "FunctionCall",
																"src": "2955:90:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
																	"typeString": "struct MyToken.timeMapping memory"
																}
															},
															"functionReturnParameters": 1169,
															"id": 1178,
															"nodeType": "Return",
															"src": "2948:97:6"
														}
													]
												}
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDuration",
									"nameLocation": "2809:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "2836:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2822:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$962",
													"typeString": "enum MyToken.StakingPeriod"
												},
												"typeName": {
													"id": 1163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1162,
														"name": "StakingPeriod",
														"nameLocations": [
															"2822:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 962,
														"src": "2822:13:6"
													},
													"referencedDeclaration": 962,
													"src": "2822:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$962",
														"typeString": "enum MyToken.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:22:6"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2867:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_timeMapping_$957_memory_ptr",
													"typeString": "struct MyToken.timeMapping"
												},
												"typeName": {
													"id": 1167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1166,
														"name": "timeMapping",
														"nameLocations": [
															"2867:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 957,
														"src": "2867:11:6"
													},
													"referencedDeclaration": 957,
													"src": "2867:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_timeMapping_$957_storage_ptr",
														"typeString": "struct MyToken.timeMapping"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2866:20:6"
									},
									"scope": 1287,
									"src": "2800:884:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3737:407:6",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "3761:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3747:15:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
															"typeString": "struct MyToken.Stake"
														},
														"typeName": {
															"id": 1227,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1226,
																"name": "Stake",
																"nameLocations": [
																	"3747:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 952,
																"src": "3747:5:6"
															},
															"referencedDeclaration": 952,
															"src": "3747:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																"typeString": "struct MyToken.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1229,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3765:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MyToken.Stake storage ref))"
															}
														},
														"id": 1232,
														"indexExpression": {
															"expression": {
																"id": 1230,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3776:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3780:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3776:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3765:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$952_storage_$",
															"typeString": "mapping(uint256 => struct MyToken.Stake storage ref)"
														}
													},
													"id": 1234,
													"indexExpression": {
														"id": 1233,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3788:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3765:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$952_storage",
														"typeString": "struct MyToken.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3747:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1237,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "3817:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																	"typeString": "struct MyToken.Stake storage pointer"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3819:8:6",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 951,
															"src": "3817:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206973206e6f7420616374697665206f7220616c72656164792077697468647261776e",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3829:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																"typeString": "literal_string \"Stake is not active or already withdrawn\""
															},
															"value": "Stake is not active or already withdrawn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																"typeString": "literal_string \"Stake is not active or already withdrawn\""
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "3809:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1243,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3890:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3896:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3890:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1245,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "3909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																		"typeString": "struct MyToken.Stake storage pointer"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3911:7:6",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "3909:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3890:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520706572696f64206973206e6f7420656e646564",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3920:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																"typeString": "literal_string \"Stake period is not ended\""
															},
															"value": "Stake period is not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																"typeString": "literal_string \"Stake period is not ended\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3882:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3882:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3882:66:6"
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3966:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3958:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1253,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "3973:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																		"typeString": "struct MyToken.Stake storage pointer"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3975:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "3973:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1255,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "3982:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																		"typeString": "struct MyToken.Stake storage pointer"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3984:10:6",
																"memberName": "rewardRate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 949,
																"src": "3982:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3973:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3995:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "3973:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3999:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4004:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "3999:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "3973:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:48:6"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "4024:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "4016:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4016:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1267,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4036:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																"typeString": "struct MyToken.Stake storage pointer"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4038:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "4036:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1269,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "4045:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4036:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4016:35:6"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1272,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$952_storage_ptr",
																"typeString": "struct MyToken.Stake storage pointer"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4063:8:6",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "4061:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4072:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4061:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "4061:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4103:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4107:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4103:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "4114:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1282,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4126:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1278,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "4093:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4093:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "EmitStatement",
												"src": "4088:49:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3699:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3716:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3708:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:20:6"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3737:0:6"
									},
									"scope": 1287,
									"src": "3690:454:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1288,
							"src": "167:3979:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								987,
								995
							]
						}
					],
					"src": "32:4114:6"
				},
				"id": 6
			}
		}
	}
}