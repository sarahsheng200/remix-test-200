{
	"id": "c040c1b96fe50aad8ce7d96c5455bc19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MtkContracts  {\n\n    struct Stake {\n        uint256 amount;          // 质押数量\n        uint256 startTime;       // 质押开始时间\n        uint256 endTime;         // 质押结束时间\n        uint256 rewardRate;      // 收益率（根据期限计算）\n        bool isActive;           // 订单是否有效\n        uint256 stakeIndex;\n    }\n\n    struct timeMapping {\n        uint256 periodDays;\n        uint256 time;\n    }\n\n    enum StakingPeriod { \n        ThirtyDays,\n        NinetyDays, \n        HundredEightyDays, \n        OneYear\n    }\n    \n    IERC20 public stakingToken; \n\n    mapping(StakingPeriod => uint256) public apy; // 年化收益率（百分比，如20表示20%）\n    mapping(address => mapping(uint256=>Stake)) public userStakes; // 用户的所有质押订单\n    mapping(address => uint256) public nextStakeId; // 自增计数器\n    mapping(uint256=>address) public stakeOwnerMapping;\n\n    uint256[] public stakeList;\n    uint256 public stakeCount; \n    uint256 private nonce;\n\n    event Staked(\n        address indexed user,\n        uint256 amount,\n        StakingPeriod period,\n        uint256 timestamp,\n        uint256 stakeIndex\n    );\n\n    event Withdrawn(\n        address indexed user,\n        uint256 totalAmount,\n        uint256 stakeIndex\n    );\n\n    constructor(\n        IERC20 _mtkToken\n    )  { \n        stakingToken=_mtkToken;\n\n        apy[StakingPeriod.ThirtyDays] = 10;   // 10% 年化\n        apy[StakingPeriod.NinetyDays] = 15;   // 15% 年化\n        apy[StakingPeriod.HundredEightyDays] = 20;      // 20% 年化\n        apy[StakingPeriod.OneYear] = 25;      // 20% 年化\n    }\n\n\n\n    function stake(uint256 amount, StakingPeriod period) external {\n        uint256 amountWei=amount*10**18;\n        require(amount>0, \"Amount should be positive\");\n        require(stakingToken.balanceOf(msg.sender)>=amountWei, \"Insufficient balance\");\n        require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Staking: Transfer failed\");\n       \n\n        timeMapping memory durMapping = _getDuration(period);\n        uint256 dur=durMapping.time;\n        uint256 periodDays=durMapping.periodDays;\n        uint256 startT=block.timestamp;\n        uint256 endT= startT + dur;\n        uint256 index =nextStakeId[msg.sender]++;\n        uint256 rate=apy[period]*periodDays*10**18/360;\n\n        emit Staked(msg.sender, amount, period, endT,index);\n\n        userStakes[msg.sender][index]=Stake({\n            amount:amount,\n            startTime:startT,\n            endTime:endT,         // 质押结束时间\n            rewardRate:rate,     // 收益率（根据期限计算）\n            isActive:true,           // 订单是否有效\n            stakeIndex:index\n        });\n        stakeOwnerMapping[index]=msg.sender;\n        stakeList.push(index);\n        stakeCount++;\n        \n    }\n\n    // 内部函数：根据期限返回秒数\n    function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {\n\n        if(period==StakingPeriod.ThirtyDays){\n            return timeMapping({\n                periodDays:30,\n                time:1 minutes\n            });\n        }else if(period==StakingPeriod.NinetyDays){\n            return timeMapping({\n                periodDays:90,\n                time:3 minutes\n            });\n        }else if(period==StakingPeriod.HundredEightyDays){\n            return timeMapping({\n                periodDays:180,\n                time:5 minutes\n            });\n        }else if(period==StakingPeriod.OneYear){\n            return timeMapping({\n                periodDays:360,\n                time:10 minutes\n            });\n        }else{\n            return timeMapping({\n                periodDays:360,\n                time:1 hours\n            });\n        }\n\n    }\n\n    function withdraw(uint256 stakeIndex) external {\n        require(stakeOwnerMapping[stakeIndex]==msg.sender, \"You are not the owner of this stake\");\n\n        Stake storage s = userStakes[msg.sender][stakeIndex];\n       \n        require(s.isActive, \"Stake is not active or already withdrawn\");\n        require(block.timestamp >= s.endTime, \"Stake period is not ended\");\n        \n        uint256 reward=s.amount*s.rewardRate/100/10** 18;\n        uint256 totalAmount=s.amount+reward;\n        s.isActive=false;\n\n        emit Withdrawn(msg.sender,totalAmount,stakeIndex);\n    }\n\n    // 生成唯一的质押ID\n    function _generateStakeId() internal returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, nonce++)));\n    }\n    \n    // 获取用户所有活跃的质押\n    function getUserActiveStakes(address user) external view returns (Stake[] memory) {       \n        Stake[] memory activeStakes = new Stake[](stakeCount);\n        uint256 activeIndex=0;\n        for (uint256 i = 0; i < stakeCount; i++) {\n            uint256 index=stakeList[i];\n            Stake storage s = userStakes[user][index];\n            if (s.isActive) {\n                activeStakes[activeIndex]=s;\n                activeIndex++;\n            }\n        }\n        \n        return activeStakes;\n    }\n    \n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"MtkContracts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_mtkToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "period",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserActiveStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "rewardRate",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isActive",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "stakeIndex",
											"type": "uint256"
										}
									],
									"internalType": "struct MtkContracts.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nextStakeId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "enum MtkContracts.StakingPeriod",
									"name": "period",
									"type": "uint8"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakeList",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakeOwnerMapping",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":168:5281  contract MtkContracts  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":1472:1808  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyToken.sol\":1541:1550  _mtkToken */\n  dup1\n    /* \"contracts/MyToken.sol\":1528:1540  stakingToken */\n  0x00\n  0x00\n    /* \"contracts/MyToken.sol\":1528:1550  stakingToken=_mtkToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1593:1595  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":1561:1564  apy */\n  0x01\n    /* \"contracts/MyToken.sol\":1561:1590  apy[StakingPeriod.ThirtyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1565:1589  StakingPeriod.ThirtyDays */\n  0x00\n    /* \"contracts/MyToken.sol\":1561:1590  apy[StakingPeriod.ThirtyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_6\n  jumpi\n  tag_7\n  tag_8\n  jump\t// in\ntag_7:\ntag_6:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_8\n  jump\t// in\ntag_10:\ntag_9:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1561:1595  apy[StakingPeriod.ThirtyDays] = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1653:1655  15 */\n  0x0f\n    /* \"contracts/MyToken.sol\":1621:1624  apy */\n  0x01\n    /* \"contracts/MyToken.sol\":1621:1650  apy[StakingPeriod.NinetyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1625:1649  StakingPeriod.NinetyDays */\n  0x01\n    /* \"contracts/MyToken.sol\":1621:1650  apy[StakingPeriod.NinetyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_8\n  jump\t// in\ntag_12:\ntag_11:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_8\n  jump\t// in\ntag_14:\ntag_13:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1621:1655  apy[StakingPeriod.NinetyDays] = 15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1720:1722  20 */\n  0x14\n    /* \"contracts/MyToken.sol\":1681:1684  apy */\n  0x01\n    /* \"contracts/MyToken.sol\":1681:1717  apy[StakingPeriod.HundredEightyDays] */\n  0x00\n    /* \"contracts/MyToken.sol\":1685:1716  StakingPeriod.HundredEightyDays */\n  0x02\n    /* \"contracts/MyToken.sol\":1681:1717  apy[StakingPeriod.HundredEightyDays] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_8\n  jump\t// in\ntag_16:\ntag_15:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_8\n  jump\t// in\ntag_18:\ntag_17:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1681:1722  apy[StakingPeriod.HundredEightyDays] = 20 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1780:1782  25 */\n  0x19\n    /* \"contracts/MyToken.sol\":1751:1754  apy */\n  0x01\n    /* \"contracts/MyToken.sol\":1751:1777  apy[StakingPeriod.OneYear] */\n  0x00\n    /* \"contracts/MyToken.sol\":1755:1776  StakingPeriod.OneYear */\n  0x03\n    /* \"contracts/MyToken.sol\":1751:1777  apy[StakingPeriod.OneYear] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_8\n  jump\t// in\ntag_20:\ntag_19:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_8\n  jump\t// in\ntag_22:\ntag_21:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1751:1782  apy[StakingPeriod.OneYear] = 25 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1472:1808  constructor(... */\n  pop\n    /* \"contracts/MyToken.sol\":168:5281  contract MtkContracts  {... */\n  jump(tag_23)\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_27:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_28:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_38\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_27\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_29:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_40\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_28\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_30:\n    /* \"#utility.yul\":771:809   */\n  tag_42\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_29\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_43:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_31:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_45\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_30\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_48\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1118:1237   */\ntag_47:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_49\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_31\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1402:1582   */\ntag_8:\n    /* \"#utility.yul\":1450:1527   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1447:1448   */\n  0x00\n    /* \"#utility.yul\":1440:1528   */\n  mstore\n    /* \"#utility.yul\":1547:1551   */\n  0x21\n    /* \"#utility.yul\":1544:1545   */\n  0x04\n    /* \"#utility.yul\":1537:1552   */\n  mstore\n    /* \"#utility.yul\":1571:1575   */\n  0x24\n    /* \"#utility.yul\":1568:1569   */\n  0x00\n    /* \"#utility.yul\":1561:1576   */\n  revert\n    /* \"contracts/MyToken.sol\":168:5281  contract MtkContracts  {... */\ntag_23:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":168:5281  contract MtkContracts  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x762e54fc\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x762e54fc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa262ab35\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa57a5304\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb5d5b5fa\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc4a9e116\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x10087fb1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f1accb2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4c86259e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MyToken.sol\":1816:3015  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/MyToken.sol\":774:818  mapping(StakingPeriod => uint256) public apy */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":3958:4529  function withdraw(uint256 stakeIndex) external {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/MyToken.sol\":1101:1127  uint256[] public stakeList */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":740:766  IERC20 public stakingToken */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":973:1019  mapping(address => uint256) public nextStakeId */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":4770:5274  function getUserActiveStakes(address user) external view returns (Stake[] memory) {       ... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1044:1094  mapping(uint256=>address) public stakeOwnerMapping */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":875:936  mapping(address => mapping(uint256=>Stake)) public userStakes */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1133:1158  uint256 public stakeCount */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1816:3015  function stake(uint256 amount, StakingPeriod period) external {... */\n    tag_17:\n        /* \"contracts/MyToken.sol\":1888:1905  uint256 amountWei */\n      0x00\n        /* \"contracts/MyToken.sol\":1913:1919  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyToken.sol\":1906:1912  amount */\n      dup4\n        /* \"contracts/MyToken.sol\":1906:1919  amount*10**18 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/MyToken.sol\":1888:1919  uint256 amountWei=amount*10**18 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1944:1945  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1937:1943  amount */\n      dup4\n        /* \"contracts/MyToken.sol\":1937:1945  amount>0 */\n      gt\n        /* \"contracts/MyToken.sol\":1929:1975  require(amount>0, \"Amount should be positive\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/MyToken.sol\":2029:2038  amountWei */\n      dup1\n        /* \"contracts/MyToken.sol\":1993:2005  stakingToken */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1993:2015  stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/MyToken.sol\":2016:2026  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1993:2027  stakingToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"contracts/MyToken.sol\":1993:2038  stakingToken.balanceOf(msg.sender)>=amountWei */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":1985:2063  require(stakingToken.balanceOf(msg.sender)>=amountWei, \"Insufficient balance\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/MyToken.sol\":2081:2093  stakingToken */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2081:2106  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":2107:2117  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2127:2131  this */\n      address\n        /* \"contracts/MyToken.sol\":2134:2140  amount */\n      dup7\n        /* \"contracts/MyToken.sol\":2081:2141  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/MyToken.sol\":2073:2169  require(stakingToken.transferFrom(msg.sender, address(this), amount),\"Staking: Transfer failed\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/MyToken.sol\":2188:2217  timeMapping memory durMapping */\n      0x00\n        /* \"contracts/MyToken.sol\":2220:2240  _getDuration(period) */\n      tag_83\n        /* \"contracts/MyToken.sol\":2233:2239  period */\n      dup4\n        /* \"contracts/MyToken.sol\":2220:2232  _getDuration */\n      tag_84\n        /* \"contracts/MyToken.sol\":2220:2240  _getDuration(period) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/MyToken.sol\":2188:2240  timeMapping memory durMapping = _getDuration(period) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2250:2261  uint256 dur */\n      0x00\n        /* \"contracts/MyToken.sol\":2262:2272  durMapping */\n      dup2\n        /* \"contracts/MyToken.sol\":2262:2277  durMapping.time */\n      0x20\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2250:2277  uint256 dur=durMapping.time */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2287:2305  uint256 periodDays */\n      0x00\n        /* \"contracts/MyToken.sol\":2306:2316  durMapping */\n      dup3\n        /* \"contracts/MyToken.sol\":2306:2327  durMapping.periodDays */\n      0x00\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2287:2327  uint256 periodDays=durMapping.periodDays */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2337:2351  uint256 startT */\n      0x00\n        /* \"contracts/MyToken.sol\":2352:2367  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":2337:2367  uint256 startT=block.timestamp */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2377:2389  uint256 endT */\n      0x00\n        /* \"contracts/MyToken.sol\":2400:2403  dur */\n      dup4\n        /* \"contracts/MyToken.sol\":2391:2397  startT */\n      dup3\n        /* \"contracts/MyToken.sol\":2391:2403  startT + dur */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/MyToken.sol\":2377:2403  uint256 endT= startT + dur */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2413:2426  uint256 index */\n      0x00\n        /* \"contracts/MyToken.sol\":2428:2439  nextStakeId */\n      0x03\n        /* \"contracts/MyToken.sol\":2428:2451  nextStakeId[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2440:2450  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2428:2451  nextStakeId[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":2428:2453  nextStakeId[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contracts/MyToken.sol\":2413:2453  uint256 index =nextStakeId[msg.sender]++ */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2463:2475  uint256 rate */\n      0x00\n        /* \"contracts/MyToken.sol\":2506:2509  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":2499:2505  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyToken.sol\":2488:2498  periodDays */\n      dup7\n        /* \"contracts/MyToken.sol\":2476:2479  apy */\n      0x01\n        /* \"contracts/MyToken.sol\":2476:2487  apy[period] */\n      0x00\n        /* \"contracts/MyToken.sol\":2480:2486  period */\n      dup14\n        /* \"contracts/MyToken.sol\":2476:2487  apy[period] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n    tag_89:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_92\n      jumpi\n      tag_93\n      tag_91\n      jump\t// in\n    tag_93:\n    tag_92:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":2476:2498  apy[period]*periodDays */\n      tag_94\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_94:\n        /* \"contracts/MyToken.sol\":2476:2505  apy[period]*periodDays*10**18 */\n      tag_95\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_95:\n        /* \"contracts/MyToken.sol\":2476:2509  apy[period]*periodDays*10**18/360 */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/MyToken.sol\":2463:2509  uint256 rate=apy[period]*periodDays*10**18/360 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2532:2542  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2525:2571  Staked(msg.sender, amount, period, endT,index) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c\n        /* \"contracts/MyToken.sol\":2544:2550  amount */\n      dup12\n        /* \"contracts/MyToken.sol\":2552:2558  period */\n      dup12\n        /* \"contracts/MyToken.sol\":2560:2564  endT */\n      dup7\n        /* \"contracts/MyToken.sol\":2565:2570  index */\n      dup7\n        /* \"contracts/MyToken.sol\":2525:2571  Staked(msg.sender, amount, period, endT,index) */\n      mload(0x40)\n      tag_98\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":2639:2645  amount */\n      dup12\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2669:2675  startT */\n      dup6\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2697:2701  endT */\n      dup5\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2756:2760  rate */\n      dup3\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2824:2828  true */\n      0x01\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":2885:2890  index */\n      dup4\n        /* \"contracts/MyToken.sol\":2612:2901  Stake({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":2582:2592  userStakes */\n      0x02\n        /* \"contracts/MyToken.sol\":2582:2604  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":2593:2603  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2582:2604  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2582:2611  userStakes[msg.sender][index] */\n      0x00\n        /* \"contracts/MyToken.sol\":2605:2610  index */\n      dup5\n        /* \"contracts/MyToken.sol\":2582:2611  userStakes[msg.sender][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2582:2901  userStakes[msg.sender][index]=Stake({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2911:2928  stakeOwnerMapping */\n      0x04\n        /* \"contracts/MyToken.sol\":2911:2935  stakeOwnerMapping[index] */\n      0x00\n        /* \"contracts/MyToken.sol\":2929:2934  index */\n      dup5\n        /* \"contracts/MyToken.sol\":2911:2935  stakeOwnerMapping[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":2911:2946  stakeOwnerMapping[index]=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2956:2965  stakeList */\n      0x05\n        /* \"contracts/MyToken.sol\":2971:2976  index */\n      dup3\n        /* \"contracts/MyToken.sol\":2956:2977  stakeList.push(index) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/MyToken.sol\":2987:2997  stakeCount */\n      0x06\n      0x00\n        /* \"contracts/MyToken.sol\":2987:2999  stakeCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_101\n      swap1\n      tag_88\n      jump\t// in\n    tag_101:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1878:3015  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1816:3015  function stake(uint256 amount, StakingPeriod period) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":774:818  mapping(StakingPeriod => uint256) public apy */\n    tag_21:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3958:4529  function withdraw(uint256 stakeIndex) external {... */\n    tag_27:\n        /* \"contracts/MyToken.sol\":4054:4064  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":4023:4064  stakeOwnerMapping[stakeIndex]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":4023:4040  stakeOwnerMapping */\n      0x04\n        /* \"contracts/MyToken.sol\":4023:4052  stakeOwnerMapping[stakeIndex] */\n      0x00\n        /* \"contracts/MyToken.sol\":4041:4051  stakeIndex */\n      dup4\n        /* \"contracts/MyToken.sol\":4023:4052  stakeOwnerMapping[stakeIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":4023:4064  stakeOwnerMapping[stakeIndex]==msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":4015:4104  require(stakeOwnerMapping[stakeIndex]==msg.sender, \"You are not the owner of this stake\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/MyToken.sol\":4115:4130  Stake storage s */\n      0x00\n        /* \"contracts/MyToken.sol\":4133:4143  userStakes */\n      0x02\n        /* \"contracts/MyToken.sol\":4133:4155  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":4144:4154  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":4133:4155  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":4133:4167  userStakes[msg.sender][stakeIndex] */\n      0x00\n        /* \"contracts/MyToken.sol\":4156:4166  stakeIndex */\n      dup4\n        /* \"contracts/MyToken.sol\":4133:4167  userStakes[msg.sender][stakeIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":4115:4167  Stake storage s = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4193:4194  s */\n      dup1\n        /* \"contracts/MyToken.sol\":4193:4203  s.isActive */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4185:4248  require(s.isActive, \"Stake is not active or already withdrawn\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/MyToken.sol\":4285:4286  s */\n      dup1\n        /* \"contracts/MyToken.sol\":4285:4294  s.endTime */\n      0x02\n      add\n      sload\n        /* \"contracts/MyToken.sol\":4266:4281  block.timestamp */\n      timestamp\n        /* \"contracts/MyToken.sol\":4266:4294  block.timestamp >= s.endTime */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":4258:4324  require(block.timestamp >= s.endTime, \"Stake period is not ended\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/MyToken.sol\":4343:4357  uint256 reward */\n      0x00\n        /* \"contracts/MyToken.sol\":4384:4391  10** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/MyToken.sol\":4380:4383  100 */\n      0x64\n        /* \"contracts/MyToken.sol\":4367:4368  s */\n      dup4\n        /* \"contracts/MyToken.sol\":4367:4379  s.rewardRate */\n      0x03\n      add\n      sload\n        /* \"contracts/MyToken.sol\":4358:4359  s */\n      dup5\n        /* \"contracts/MyToken.sol\":4358:4366  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/MyToken.sol\":4358:4379  s.amount*s.rewardRate */\n      tag_112\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_112:\n        /* \"contracts/MyToken.sol\":4358:4383  s.amount*s.rewardRate/100 */\n      tag_113\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_113:\n        /* \"contracts/MyToken.sol\":4358:4391  s.amount*s.rewardRate/100/10** 18 */\n      tag_114\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_114:\n        /* \"contracts/MyToken.sol\":4343:4391  uint256 reward=s.amount*s.rewardRate/100/10** 18 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4401:4420  uint256 totalAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":4430:4436  reward */\n      dup2\n        /* \"contracts/MyToken.sol\":4421:4422  s */\n      dup4\n        /* \"contracts/MyToken.sol\":4421:4429  s.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/MyToken.sol\":4421:4436  s.amount+reward */\n      tag_115\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_115:\n        /* \"contracts/MyToken.sol\":4401:4436  uint256 totalAmount=s.amount+reward */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4457:4462  false */\n      0x00\n        /* \"contracts/MyToken.sol\":4446:4447  s */\n      dup4\n        /* \"contracts/MyToken.sol\":4446:4456  s.isActive */\n      0x04\n      add\n      0x00\n        /* \"contracts/MyToken.sol\":4446:4462  s.isActive=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":4488:4498  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":4478:4522  Withdrawn(msg.sender,totalAmount,stakeIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n        /* \"contracts/MyToken.sol\":4499:4510  totalAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":4511:4521  stakeIndex */\n      dup7\n        /* \"contracts/MyToken.sol\":4478:4522  Withdrawn(msg.sender,totalAmount,stakeIndex) */\n      mload(0x40)\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/MyToken.sol\":4005:4529  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":3958:4529  function withdraw(uint256 stakeIndex) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1101:1127  uint256[] public stakeList */\n    tag_30:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":740:766  IERC20 public stakingToken */\n    tag_33:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":973:1019  mapping(address => uint256) public nextStakeId */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4770:5274  function getUserActiveStakes(address user) external view returns (Stake[] memory) {       ... */\n    tag_43:\n        /* \"contracts/MyToken.sol\":4836:4850  Stake[] memory */\n      0x60\n        /* \"contracts/MyToken.sol\":4869:4896  Stake[] memory activeStakes */\n      0x00\n        /* \"contracts/MyToken.sol\":4911:4921  stakeCount */\n      sload(0x06)\n        /* \"contracts/MyToken.sol\":4899:4922  new Stake[](stakeCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup2\n      0x20\n      add\n    tag_125:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_125\n      jumpi\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"contracts/MyToken.sol\":4869:4922  Stake[] memory activeStakes = new Stake[](stakeCount) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4932:4951  uint256 activeIndex */\n      0x00\n        /* \"contracts/MyToken.sol\":4952:4953  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":4932:4953  uint256 activeIndex=0 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4968:4977  uint256 i */\n      0x00\n        /* \"contracts/MyToken.sol\":4980:4981  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":4968:4981  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4963:5230  for (uint256 i = 0; i < stakeCount; i++) {... */\n    tag_128:\n        /* \"contracts/MyToken.sol\":4987:4997  stakeCount */\n      sload(0x06)\n        /* \"contracts/MyToken.sol\":4983:4984  i */\n      dup2\n        /* \"contracts/MyToken.sol\":4983:4997  i < stakeCount */\n      lt\n        /* \"contracts/MyToken.sol\":4963:5230  for (uint256 i = 0; i < stakeCount; i++) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/MyToken.sol\":5018:5031  uint256 index */\n      0x00\n        /* \"contracts/MyToken.sol\":5032:5041  stakeList */\n      0x05\n        /* \"contracts/MyToken.sol\":5042:5043  i */\n      dup3\n        /* \"contracts/MyToken.sol\":5032:5044  stakeList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n    tag_131:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/MyToken.sol\":5018:5044  uint256 index=stakeList[i] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":5058:5073  Stake storage s */\n      0x00\n        /* \"contracts/MyToken.sol\":5076:5086  userStakes */\n      0x02\n        /* \"contracts/MyToken.sol\":5076:5092  userStakes[user] */\n      0x00\n        /* \"contracts/MyToken.sol\":5087:5091  user */\n      dup9\n        /* \"contracts/MyToken.sol\":5076:5092  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":5076:5099  userStakes[user][index] */\n      0x00\n        /* \"contracts/MyToken.sol\":5093:5098  index */\n      dup4\n        /* \"contracts/MyToken.sol\":5076:5099  userStakes[user][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":5058:5099  Stake storage s = userStakes[user][index] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":5117:5118  s */\n      dup1\n        /* \"contracts/MyToken.sol\":5117:5127  s.isActive */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":5113:5220  if (s.isActive) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"contracts/MyToken.sol\":5173:5174  s */\n      dup1\n        /* \"contracts/MyToken.sol\":5147:5174  activeStakes[activeIndex]=s */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":5147:5159  activeStakes */\n      dup6\n        /* \"contracts/MyToken.sol\":5160:5171  activeIndex */\n      dup6\n        /* \"contracts/MyToken.sol\":5147:5172  activeStakes[activeIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_133\n      jump\t// in\n    tag_137:\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/MyToken.sol\":5147:5174  activeStakes[activeIndex]=s */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":5192:5205  activeIndex++ */\n      dup4\n      dup1\n      tag_138\n      swap1\n      tag_88\n      jump\t// in\n    tag_138:\n      swap5\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":5113:5220  if (s.isActive) {... */\n    tag_135:\n        /* \"contracts/MyToken.sol\":5004:5230  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":4999:5002  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":4963:5230  for (uint256 i = 0; i < stakeCount; i++) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"contracts/MyToken.sol\":5255:5267  activeStakes */\n      dup2\n        /* \"contracts/MyToken.sol\":5248:5267  return activeStakes */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":4770:5274  function getUserActiveStakes(address user) external view returns (Stake[] memory) {       ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1044:1094  mapping(uint256=>address) public stakeOwnerMapping */\n    tag_48:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":875:936  mapping(address => mapping(uint256=>Stake)) public userStakes */\n    tag_54:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1133:1158  uint256 public stakeCount */\n    tag_58:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3068:3952  function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {... */\n    tag_84:\n        /* \"contracts/MyToken.sol\":3135:3153  timeMapping memory */\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/MyToken.sol\":3177:3201  StakingPeriod.ThirtyDays */\n      0x00\n        /* \"contracts/MyToken.sol\":3169:3201  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_91\n      jump\t// in\n    tag_143:\n    tag_142:\n        /* \"contracts/MyToken.sol\":3169:3175  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3169:3201  period==StakingPeriod.ThirtyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_91\n      jump\t// in\n    tag_145:\n    tag_144:\n      sub\n        /* \"contracts/MyToken.sol\":3166:3945  if(period==StakingPeriod.ThirtyDays){... */\n      tag_146\n      jumpi\n        /* \"contracts/MyToken.sol\":3223:3313  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3264:3266  30 */\n      0x1e\n        /* \"contracts/MyToken.sol\":3223:3313  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3289:3298  1 minutes */\n      0x3c\n        /* \"contracts/MyToken.sol\":3223:3313  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3216:3313  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_141)\n        /* \"contracts/MyToken.sol\":3166:3945  if(period==StakingPeriod.ThirtyDays){... */\n    tag_146:\n        /* \"contracts/MyToken.sol\":3340:3364  StakingPeriod.NinetyDays */\n      0x01\n        /* \"contracts/MyToken.sol\":3332:3364  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_91\n      jump\t// in\n    tag_149:\n    tag_148:\n        /* \"contracts/MyToken.sol\":3332:3338  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3332:3364  period==StakingPeriod.NinetyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      tag_151\n      tag_91\n      jump\t// in\n    tag_151:\n    tag_150:\n      sub\n        /* \"contracts/MyToken.sol\":3329:3945  if(period==StakingPeriod.NinetyDays){... */\n      tag_152\n      jumpi\n        /* \"contracts/MyToken.sol\":3386:3476  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3427:3429  90 */\n      0x5a\n        /* \"contracts/MyToken.sol\":3386:3476  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3452:3461  3 minutes */\n      0xb4\n        /* \"contracts/MyToken.sol\":3386:3476  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3379:3476  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_141)\n        /* \"contracts/MyToken.sol\":3329:3945  if(period==StakingPeriod.NinetyDays){... */\n    tag_152:\n        /* \"contracts/MyToken.sol\":3503:3534  StakingPeriod.HundredEightyDays */\n      0x02\n        /* \"contracts/MyToken.sol\":3495:3534  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_154\n      jumpi\n      tag_155\n      tag_91\n      jump\t// in\n    tag_155:\n    tag_154:\n        /* \"contracts/MyToken.sol\":3495:3501  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3495:3534  period==StakingPeriod.HundredEightyDays */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      tag_157\n      tag_91\n      jump\t// in\n    tag_157:\n    tag_156:\n      sub\n        /* \"contracts/MyToken.sol\":3492:3945  if(period==StakingPeriod.HundredEightyDays){... */\n      tag_158\n      jumpi\n        /* \"contracts/MyToken.sol\":3556:3647  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3597:3600  180 */\n      0xb4\n        /* \"contracts/MyToken.sol\":3556:3647  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3623:3632  5 minutes */\n      0x012c\n        /* \"contracts/MyToken.sol\":3556:3647  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3549:3647  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_141)\n        /* \"contracts/MyToken.sol\":3492:3945  if(period==StakingPeriod.HundredEightyDays){... */\n    tag_158:\n        /* \"contracts/MyToken.sol\":3674:3695  StakingPeriod.OneYear */\n      0x03\n        /* \"contracts/MyToken.sol\":3666:3695  period==StakingPeriod.OneYear */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_161\n      tag_91\n      jump\t// in\n    tag_161:\n    tag_160:\n        /* \"contracts/MyToken.sol\":3666:3672  period */\n      dup3\n        /* \"contracts/MyToken.sol\":3666:3695  period==StakingPeriod.OneYear */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      tag_163\n      tag_91\n      jump\t// in\n    tag_163:\n    tag_162:\n      sub\n        /* \"contracts/MyToken.sol\":3663:3945  if(period==StakingPeriod.OneYear){... */\n      tag_164\n      jumpi\n        /* \"contracts/MyToken.sol\":3717:3809  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3758:3761  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":3717:3809  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3784:3794  10 minutes */\n      0x0258\n        /* \"contracts/MyToken.sol\":3717:3809  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3710:3809  return timeMapping({... */\n      swap1\n      pop\n      jump(tag_141)\n        /* \"contracts/MyToken.sol\":3663:3945  if(period==StakingPeriod.OneYear){... */\n    tag_164:\n        /* \"contracts/MyToken.sol\":3845:3934  timeMapping({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/MyToken.sol\":3886:3889  360 */\n      0x0168\n        /* \"contracts/MyToken.sol\":3845:3934  timeMapping({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/MyToken.sol\":3912:3919  1 hours */\n      0x0e10\n        /* \"contracts/MyToken.sol\":3845:3934  timeMapping({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyToken.sol\":3838:3934  return timeMapping({... */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3068:3952  function _getDuration(StakingPeriod period) internal pure returns (timeMapping memory) {... */\n    tag_141:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_127:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_140:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_167:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_169:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_170:\n        /* \"#utility.yul\":490:514   */\n      tag_224\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_169\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_225:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_171:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_227\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_170\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:806   */\n    tag_172:\n        /* \"#utility.yul\":780:781   */\n      0x04\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":770:782   */\n      lt\n        /* \"#utility.yul\":760:800   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":796:797   */\n      0x00\n        /* \"#utility.yul\":793:794   */\n      0x00\n        /* \"#utility.yul\":786:798   */\n      revert\n        /* \"#utility.yul\":760:800   */\n    tag_229:\n        /* \"#utility.yul\":690:806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":812:985   */\n    tag_173:\n        /* \"#utility.yul\":875:880   */\n      0x00\n        /* \"#utility.yul\":913:919   */\n      dup2\n        /* \"#utility.yul\":900:920   */\n      calldataload\n        /* \"#utility.yul\":891:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":929:979   */\n      tag_231\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":929:979   */\n      tag_172\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":812:985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":991:1499   */\n    tag_16:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      0x00\n        /* \"#utility.yul\":1133:1135   */\n      0x40\n        /* \"#utility.yul\":1121:1130   */\n      dup4\n        /* \"#utility.yul\":1112:1119   */\n      dup6\n        /* \"#utility.yul\":1108:1131   */\n      sub\n        /* \"#utility.yul\":1104:1136   */\n      slt\n        /* \"#utility.yul\":1101:1220   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1139:1218   */\n      tag_234\n      tag_167\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1101:1220   */\n    tag_233:\n        /* \"#utility.yul\":1259:1260   */\n      0x00\n        /* \"#utility.yul\":1284:1337   */\n      tag_235\n        /* \"#utility.yul\":1329:1336   */\n      dup6\n        /* \"#utility.yul\":1320:1326   */\n      dup3\n        /* \"#utility.yul\":1309:1318   */\n      dup7\n        /* \"#utility.yul\":1305:1327   */\n      add\n        /* \"#utility.yul\":1284:1337   */\n      tag_171\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1274:1337   */\n      swap3\n      pop\n        /* \"#utility.yul\":1230:1347   */\n      pop\n        /* \"#utility.yul\":1386:1388   */\n      0x20\n        /* \"#utility.yul\":1412:1482   */\n      tag_236\n        /* \"#utility.yul\":1474:1481   */\n      dup6\n        /* \"#utility.yul\":1465:1471   */\n      dup3\n        /* \"#utility.yul\":1454:1463   */\n      dup7\n        /* \"#utility.yul\":1450:1472   */\n      add\n        /* \"#utility.yul\":1412:1482   */\n      tag_173\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1402:1482   */\n      swap2\n      pop\n        /* \"#utility.yul\":1357:1492   */\n      pop\n        /* \"#utility.yul\":991:1499   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1505:1868   */\n    tag_20:\n        /* \"#utility.yul\":1581:1587   */\n      0x00\n        /* \"#utility.yul\":1630:1632   */\n      0x20\n        /* \"#utility.yul\":1618:1627   */\n      dup3\n        /* \"#utility.yul\":1609:1616   */\n      dup5\n        /* \"#utility.yul\":1605:1628   */\n      sub\n        /* \"#utility.yul\":1601:1633   */\n      slt\n        /* \"#utility.yul\":1598:1717   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1636:1715   */\n      tag_239\n      tag_167\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1598:1717   */\n    tag_238:\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1781:1851   */\n      tag_240\n        /* \"#utility.yul\":1843:1850   */\n      dup5\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1823:1832   */\n      dup6\n        /* \"#utility.yul\":1819:1841   */\n      add\n        /* \"#utility.yul\":1781:1851   */\n      tag_173\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1771:1851   */\n      swap2\n      pop\n        /* \"#utility.yul\":1727:1861   */\n      pop\n        /* \"#utility.yul\":1505:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:1992   */\n    tag_174:\n        /* \"#utility.yul\":1961:1985   */\n      tag_242\n        /* \"#utility.yul\":1979:1984   */\n      dup2\n        /* \"#utility.yul\":1961:1985   */\n      tag_169\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1956:1959   */\n      dup3\n        /* \"#utility.yul\":1949:1986   */\n      mstore\n        /* \"#utility.yul\":1874:1992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2220   */\n    tag_23:\n        /* \"#utility.yul\":2091:2095   */\n      0x00\n        /* \"#utility.yul\":2129:2131   */\n      0x20\n        /* \"#utility.yul\":2118:2127   */\n      dup3\n        /* \"#utility.yul\":2114:2132   */\n      add\n        /* \"#utility.yul\":2106:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":2142:2213   */\n      tag_244\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2199:2208   */\n      dup4\n        /* \"#utility.yul\":2195:2212   */\n      add\n        /* \"#utility.yul\":2186:2192   */\n      dup5\n        /* \"#utility.yul\":2142:2213   */\n      tag_174\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1998:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_26:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_247\n      tag_167\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2302:2421   */\n    tag_246:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_248\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_171\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_175:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2753   */\n    tag_176:\n        /* \"#utility.yul\":2721:2724   */\n      0x00\n        /* \"#utility.yul\":2742:2747   */\n      dup2\n        /* \"#utility.yul\":2735:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2901   */\n    tag_177:\n        /* \"#utility.yul\":2809:2818   */\n      0x00\n        /* \"#utility.yul\":2842:2895   */\n      tag_252\n        /* \"#utility.yul\":2860:2894   */\n      tag_253\n        /* \"#utility.yul\":2869:2893   */\n      tag_254\n        /* \"#utility.yul\":2887:2892   */\n      dup5\n        /* \"#utility.yul\":2869:2893   */\n      tag_175\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2860:2894   */\n      tag_176\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2842:2895   */\n      tag_175\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2829:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2907:3033   */\n    tag_178:\n        /* \"#utility.yul\":2957:2966   */\n      0x00\n        /* \"#utility.yul\":2990:3027   */\n      tag_256\n        /* \"#utility.yul\":3021:3026   */\n      dup3\n        /* \"#utility.yul\":2990:3027   */\n      tag_177\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2977:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:3033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3179   */\n    tag_179:\n        /* \"#utility.yul\":3103:3112   */\n      0x00\n        /* \"#utility.yul\":3136:3173   */\n      tag_258\n        /* \"#utility.yul\":3167:3172   */\n      dup3\n        /* \"#utility.yul\":3136:3173   */\n      tag_178\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3123:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3185:3344   */\n    tag_180:\n        /* \"#utility.yul\":3286:3337   */\n      tag_260\n        /* \"#utility.yul\":3331:3336   */\n      dup2\n        /* \"#utility.yul\":3286:3337   */\n      tag_179\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3281:3284   */\n      dup3\n        /* \"#utility.yul\":3274:3338   */\n      mstore\n        /* \"#utility.yul\":3185:3344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3600   */\n    tag_35:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3508:3593   */\n      tag_262\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3508:3593   */\n      tag_180\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3350:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:3702   */\n    tag_181:\n        /* \"#utility.yul\":3643:3650   */\n      0x00\n        /* \"#utility.yul\":3672:3696   */\n      tag_264\n        /* \"#utility.yul\":3690:3695   */\n      dup3\n        /* \"#utility.yul\":3672:3696   */\n      tag_175\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3661:3696   */\n      swap1\n      pop\n        /* \"#utility.yul\":3606:3702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3830   */\n    tag_182:\n        /* \"#utility.yul\":3781:3805   */\n      tag_266\n        /* \"#utility.yul\":3799:3804   */\n      dup2\n        /* \"#utility.yul\":3781:3805   */\n      tag_181\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3774:3779   */\n      dup2\n        /* \"#utility.yul\":3771:3806   */\n      eq\n        /* \"#utility.yul\":3761:3824   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3817:3818   */\n      0x00\n        /* \"#utility.yul\":3810:3822   */\n      revert\n        /* \"#utility.yul\":3761:3824   */\n    tag_267:\n        /* \"#utility.yul\":3708:3830   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3836:3975   */\n    tag_183:\n        /* \"#utility.yul\":3882:3887   */\n      0x00\n        /* \"#utility.yul\":3920:3926   */\n      dup2\n        /* \"#utility.yul\":3907:3927   */\n      calldataload\n        /* \"#utility.yul\":3898:3927   */\n      swap1\n      pop\n        /* \"#utility.yul\":3936:3969   */\n      tag_269\n        /* \"#utility.yul\":3963:3968   */\n      dup2\n        /* \"#utility.yul\":3936:3969   */\n      tag_182\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3836:3975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3981:4310   */\n    tag_38:\n        /* \"#utility.yul\":4040:4046   */\n      0x00\n        /* \"#utility.yul\":4089:4091   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4068:4075   */\n      dup5\n        /* \"#utility.yul\":4064:4087   */\n      sub\n        /* \"#utility.yul\":4060:4092   */\n      slt\n        /* \"#utility.yul\":4057:4176   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4095:4174   */\n      tag_272\n      tag_167\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4057:4176   */\n    tag_271:\n        /* \"#utility.yul\":4215:4216   */\n      0x00\n        /* \"#utility.yul\":4240:4293   */\n      tag_273\n        /* \"#utility.yul\":4285:4292   */\n      dup5\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup6\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_183\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4186:4303   */\n      pop\n        /* \"#utility.yul\":3981:4310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4452   */\n    tag_184:\n        /* \"#utility.yul\":4405:4411   */\n      0x00\n        /* \"#utility.yul\":4439:4444   */\n      dup2\n        /* \"#utility.yul\":4433:4445   */\n      mload\n        /* \"#utility.yul\":4423:4445   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4664   */\n    tag_185:\n        /* \"#utility.yul\":4579:4590   */\n      0x00\n        /* \"#utility.yul\":4613:4619   */\n      dup3\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4601:4620   */\n      mstore\n        /* \"#utility.yul\":4653:4657   */\n      0x20\n        /* \"#utility.yul\":4648:4651   */\n      dup3\n        /* \"#utility.yul\":4644:4658   */\n      add\n        /* \"#utility.yul\":4629:4658   */\n      swap1\n      pop\n        /* \"#utility.yul\":4458:4664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4670:4824   */\n    tag_186:\n        /* \"#utility.yul\":4759:4763   */\n      0x00\n        /* \"#utility.yul\":4782:4785   */\n      dup2\n        /* \"#utility.yul\":4774:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:4816   */\n      0x20\n        /* \"#utility.yul\":4807:4810   */\n      dup3\n        /* \"#utility.yul\":4803:4817   */\n      add\n        /* \"#utility.yul\":4795:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4670:4824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4830:4938   */\n    tag_187:\n        /* \"#utility.yul\":4907:4931   */\n      tag_278\n        /* \"#utility.yul\":4925:4930   */\n      dup2\n        /* \"#utility.yul\":4907:4931   */\n      tag_169\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4902:4905   */\n      dup3\n        /* \"#utility.yul\":4895:4932   */\n      mstore\n        /* \"#utility.yul\":4830:4938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4944:5034   */\n    tag_188:\n        /* \"#utility.yul\":4978:4985   */\n      0x00\n        /* \"#utility.yul\":5021:5026   */\n      dup2\n        /* \"#utility.yul\":5014:5027   */\n      iszero\n        /* \"#utility.yul\":5007:5028   */\n      iszero\n        /* \"#utility.yul\":4996:5028   */\n      swap1\n      pop\n        /* \"#utility.yul\":4944:5034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5139   */\n    tag_189:\n        /* \"#utility.yul\":5111:5132   */\n      tag_281\n        /* \"#utility.yul\":5126:5131   */\n      dup2\n        /* \"#utility.yul\":5111:5132   */\n      tag_188\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5106:5109   */\n      dup3\n        /* \"#utility.yul\":5099:5133   */\n      mstore\n        /* \"#utility.yul\":5040:5139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5207:6414   */\n    tag_190:\n        /* \"#utility.yul\":5338:5342   */\n      0xc0\n        /* \"#utility.yul\":5333:5336   */\n      dup3\n        /* \"#utility.yul\":5329:5343   */\n      add\n        /* \"#utility.yul\":5427:5431   */\n      0x00\n        /* \"#utility.yul\":5420:5425   */\n      dup3\n        /* \"#utility.yul\":5416:5432   */\n      add\n        /* \"#utility.yul\":5410:5433   */\n      mload\n        /* \"#utility.yul\":5446:5509   */\n      tag_283\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5498:5501   */\n      dup6\n        /* \"#utility.yul\":5494:5508   */\n      add\n        /* \"#utility.yul\":5480:5492   */\n      dup3\n        /* \"#utility.yul\":5446:5509   */\n      tag_187\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5353:5519   */\n      pop\n        /* \"#utility.yul\":5606:5610   */\n      0x20\n        /* \"#utility.yul\":5599:5604   */\n      dup3\n        /* \"#utility.yul\":5595:5611   */\n      add\n        /* \"#utility.yul\":5589:5612   */\n      mload\n        /* \"#utility.yul\":5625:5688   */\n      tag_284\n        /* \"#utility.yul\":5682:5686   */\n      0x20\n        /* \"#utility.yul\":5677:5680   */\n      dup6\n        /* \"#utility.yul\":5673:5687   */\n      add\n        /* \"#utility.yul\":5659:5671   */\n      dup3\n        /* \"#utility.yul\":5625:5688   */\n      tag_187\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5529:5698   */\n      pop\n        /* \"#utility.yul\":5783:5787   */\n      0x40\n        /* \"#utility.yul\":5776:5781   */\n      dup3\n        /* \"#utility.yul\":5772:5788   */\n      add\n        /* \"#utility.yul\":5766:5789   */\n      mload\n        /* \"#utility.yul\":5802:5865   */\n      tag_285\n        /* \"#utility.yul\":5859:5863   */\n      0x40\n        /* \"#utility.yul\":5854:5857   */\n      dup6\n        /* \"#utility.yul\":5850:5864   */\n      add\n        /* \"#utility.yul\":5836:5848   */\n      dup3\n        /* \"#utility.yul\":5802:5865   */\n      tag_187\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5708:5875   */\n      pop\n        /* \"#utility.yul\":5963:5967   */\n      0x60\n        /* \"#utility.yul\":5956:5961   */\n      dup3\n        /* \"#utility.yul\":5952:5968   */\n      add\n        /* \"#utility.yul\":5946:5969   */\n      mload\n        /* \"#utility.yul\":5982:6045   */\n      tag_286\n        /* \"#utility.yul\":6039:6043   */\n      0x60\n        /* \"#utility.yul\":6034:6037   */\n      dup6\n        /* \"#utility.yul\":6030:6044   */\n      add\n        /* \"#utility.yul\":6016:6028   */\n      dup3\n        /* \"#utility.yul\":5982:6045   */\n      tag_187\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5885:6055   */\n      pop\n        /* \"#utility.yul\":6141:6145   */\n      0x80\n        /* \"#utility.yul\":6134:6139   */\n      dup3\n        /* \"#utility.yul\":6130:6146   */\n      add\n        /* \"#utility.yul\":6124:6147   */\n      mload\n        /* \"#utility.yul\":6160:6217   */\n      tag_287\n        /* \"#utility.yul\":6211:6215   */\n      0x80\n        /* \"#utility.yul\":6206:6209   */\n      dup6\n        /* \"#utility.yul\":6202:6216   */\n      add\n        /* \"#utility.yul\":6188:6200   */\n      dup3\n        /* \"#utility.yul\":6160:6217   */\n      tag_189\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6065:6227   */\n      pop\n        /* \"#utility.yul\":6315:6319   */\n      0xa0\n        /* \"#utility.yul\":6308:6313   */\n      dup3\n        /* \"#utility.yul\":6304:6320   */\n      add\n        /* \"#utility.yul\":6298:6321   */\n      mload\n        /* \"#utility.yul\":6334:6397   */\n      tag_288\n        /* \"#utility.yul\":6391:6395   */\n      0xa0\n        /* \"#utility.yul\":6386:6389   */\n      dup6\n        /* \"#utility.yul\":6382:6396   */\n      add\n        /* \"#utility.yul\":6368:6380   */\n      dup3\n        /* \"#utility.yul\":6334:6397   */\n      tag_187\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6237:6407   */\n      pop\n        /* \"#utility.yul\":5307:6414   */\n      pop\n        /* \"#utility.yul\":5207:6414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6420:6687   */\n    tag_191:\n        /* \"#utility.yul\":6533:6543   */\n      0x00\n        /* \"#utility.yul\":6554:6644   */\n      tag_290\n        /* \"#utility.yul\":6640:6643   */\n      dup4\n        /* \"#utility.yul\":6632:6638   */\n      dup4\n        /* \"#utility.yul\":6554:6644   */\n      tag_190\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6676:6680   */\n      0xc0\n        /* \"#utility.yul\":6671:6674   */\n      dup4\n        /* \"#utility.yul\":6667:6681   */\n      add\n        /* \"#utility.yul\":6653:6681   */\n      swap1\n      pop\n        /* \"#utility.yul\":6420:6687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6828   */\n    tag_192:\n        /* \"#utility.yul\":6785:6789   */\n      0x00\n        /* \"#utility.yul\":6817:6821   */\n      0x20\n        /* \"#utility.yul\":6812:6815   */\n      dup3\n        /* \"#utility.yul\":6808:6822   */\n      add\n        /* \"#utility.yul\":6800:6822   */\n      swap1\n      pop\n        /* \"#utility.yul\":6693:6828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6900:7808   */\n    tag_193:\n        /* \"#utility.yul\":7063:7066   */\n      0x00\n        /* \"#utility.yul\":7092:7168   */\n      tag_293\n        /* \"#utility.yul\":7162:7167   */\n      dup3\n        /* \"#utility.yul\":7092:7168   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7184:7292   */\n      tag_294\n        /* \"#utility.yul\":7285:7291   */\n      dup2\n        /* \"#utility.yul\":7280:7283   */\n      dup6\n        /* \"#utility.yul\":7184:7292   */\n      tag_185\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7177:7292   */\n      swap4\n      pop\n        /* \"#utility.yul\":7316:7394   */\n      tag_295\n        /* \"#utility.yul\":7388:7393   */\n      dup4\n        /* \"#utility.yul\":7316:7394   */\n      tag_186\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7417:7424   */\n      dup1\n        /* \"#utility.yul\":7448:7449   */\n      0x00\n        /* \"#utility.yul\":7433:7783   */\n    tag_296:\n        /* \"#utility.yul\":7458:7464   */\n      dup4\n        /* \"#utility.yul\":7455:7456   */\n      dup2\n        /* \"#utility.yul\":7452:7465   */\n      lt\n        /* \"#utility.yul\":7433:7783   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7534:7540   */\n      dup2\n        /* \"#utility.yul\":7528:7541   */\n      mload\n        /* \"#utility.yul\":7561:7668   */\n      tag_299\n        /* \"#utility.yul\":7664:7667   */\n      dup9\n        /* \"#utility.yul\":7649:7662   */\n      dup3\n        /* \"#utility.yul\":7561:7668   */\n      tag_191\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7554:7668   */\n      swap8\n      pop\n        /* \"#utility.yul\":7691:7773   */\n      tag_300\n        /* \"#utility.yul\":7766:7772   */\n      dup4\n        /* \"#utility.yul\":7691:7773   */\n      tag_192\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7681:7773   */\n      swap3\n      pop\n        /* \"#utility.yul\":7493:7783   */\n      pop\n        /* \"#utility.yul\":7480:7481   */\n      0x01\n        /* \"#utility.yul\":7477:7478   */\n      dup2\n        /* \"#utility.yul\":7473:7482   */\n      add\n        /* \"#utility.yul\":7468:7482   */\n      swap1\n      pop\n        /* \"#utility.yul\":7433:7783   */\n      jump(tag_296)\n    tag_298:\n        /* \"#utility.yul\":7437:7451   */\n      pop\n        /* \"#utility.yul\":7799:7802   */\n      dup6\n        /* \"#utility.yul\":7792:7802   */\n      swap4\n      pop\n        /* \"#utility.yul\":7068:7808   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6900:7808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7814:8275   */\n    tag_45:\n        /* \"#utility.yul\":8001:8005   */\n      0x00\n        /* \"#utility.yul\":8039:8041   */\n      0x20\n        /* \"#utility.yul\":8028:8037   */\n      dup3\n        /* \"#utility.yul\":8024:8042   */\n      add\n        /* \"#utility.yul\":8016:8042   */\n      swap1\n      pop\n        /* \"#utility.yul\":8088:8097   */\n      dup2\n        /* \"#utility.yul\":8082:8086   */\n      dup2\n        /* \"#utility.yul\":8078:8098   */\n      sub\n        /* \"#utility.yul\":8074:8075   */\n      0x00\n        /* \"#utility.yul\":8063:8072   */\n      dup4\n        /* \"#utility.yul\":8059:8076   */\n      add\n        /* \"#utility.yul\":8052:8099   */\n      mstore\n        /* \"#utility.yul\":8116:8268   */\n      tag_302\n        /* \"#utility.yul\":8263:8267   */\n      dup2\n        /* \"#utility.yul\":8254:8260   */\n      dup5\n        /* \"#utility.yul\":8116:8268   */\n      tag_193\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8108:8268   */\n      swap1\n      pop\n        /* \"#utility.yul\":7814:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8399   */\n    tag_194:\n        /* \"#utility.yul\":8368:8392   */\n      tag_304\n        /* \"#utility.yul\":8386:8391   */\n      dup2\n        /* \"#utility.yul\":8368:8392   */\n      tag_181\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8363:8366   */\n      dup3\n        /* \"#utility.yul\":8356:8393   */\n      mstore\n        /* \"#utility.yul\":8281:8399   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8405:8627   */\n    tag_50:\n        /* \"#utility.yul\":8498:8502   */\n      0x00\n        /* \"#utility.yul\":8536:8538   */\n      0x20\n        /* \"#utility.yul\":8525:8534   */\n      dup3\n        /* \"#utility.yul\":8521:8539   */\n      add\n        /* \"#utility.yul\":8513:8539   */\n      swap1\n      pop\n        /* \"#utility.yul\":8549:8620   */\n      tag_306\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8606:8615   */\n      dup4\n        /* \"#utility.yul\":8602:8619   */\n      add\n        /* \"#utility.yul\":8593:8599   */\n      dup5\n        /* \"#utility.yul\":8549:8620   */\n      tag_194\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8405:8627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9107   */\n    tag_53:\n        /* \"#utility.yul\":8701:8707   */\n      0x00\n        /* \"#utility.yul\":8709:8715   */\n      0x00\n        /* \"#utility.yul\":8758:8760   */\n      0x40\n        /* \"#utility.yul\":8746:8755   */\n      dup4\n        /* \"#utility.yul\":8737:8744   */\n      dup6\n        /* \"#utility.yul\":8733:8756   */\n      sub\n        /* \"#utility.yul\":8729:8761   */\n      slt\n        /* \"#utility.yul\":8726:8845   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":8764:8843   */\n      tag_309\n      tag_167\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8726:8845   */\n    tag_308:\n        /* \"#utility.yul\":8884:8885   */\n      0x00\n        /* \"#utility.yul\":8909:8962   */\n      tag_310\n        /* \"#utility.yul\":8954:8961   */\n      dup6\n        /* \"#utility.yul\":8945:8951   */\n      dup3\n        /* \"#utility.yul\":8934:8943   */\n      dup7\n        /* \"#utility.yul\":8930:8952   */\n      add\n        /* \"#utility.yul\":8909:8962   */\n      tag_183\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8899:8962   */\n      swap3\n      pop\n        /* \"#utility.yul\":8855:8972   */\n      pop\n        /* \"#utility.yul\":9011:9013   */\n      0x20\n        /* \"#utility.yul\":9037:9090   */\n      tag_311\n        /* \"#utility.yul\":9082:9089   */\n      dup6\n        /* \"#utility.yul\":9073:9079   */\n      dup3\n        /* \"#utility.yul\":9062:9071   */\n      dup7\n        /* \"#utility.yul\":9058:9080   */\n      add\n        /* \"#utility.yul\":9037:9090   */\n      tag_171\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9027:9090   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9100   */\n      pop\n        /* \"#utility.yul\":8633:9107   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9113:9222   */\n    tag_195:\n        /* \"#utility.yul\":9194:9215   */\n      tag_313\n        /* \"#utility.yul\":9209:9214   */\n      dup2\n        /* \"#utility.yul\":9194:9215   */\n      tag_188\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9189:9192   */\n      dup3\n        /* \"#utility.yul\":9182:9216   */\n      mstore\n        /* \"#utility.yul\":9113:9222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9228:9991   */\n    tag_56:\n        /* \"#utility.yul\":9455:9459   */\n      0x00\n        /* \"#utility.yul\":9493:9496   */\n      0xc0\n        /* \"#utility.yul\":9482:9491   */\n      dup3\n        /* \"#utility.yul\":9478:9497   */\n      add\n        /* \"#utility.yul\":9470:9497   */\n      swap1\n      pop\n        /* \"#utility.yul\":9507:9578   */\n      tag_315\n        /* \"#utility.yul\":9575:9576   */\n      0x00\n        /* \"#utility.yul\":9564:9573   */\n      dup4\n        /* \"#utility.yul\":9560:9577   */\n      add\n        /* \"#utility.yul\":9551:9557   */\n      dup10\n        /* \"#utility.yul\":9507:9578   */\n      tag_174\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9588:9660   */\n      tag_316\n        /* \"#utility.yul\":9656:9658   */\n      0x20\n        /* \"#utility.yul\":9645:9654   */\n      dup4\n        /* \"#utility.yul\":9641:9659   */\n      add\n        /* \"#utility.yul\":9632:9638   */\n      dup9\n        /* \"#utility.yul\":9588:9660   */\n      tag_174\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9670:9742   */\n      tag_317\n        /* \"#utility.yul\":9738:9740   */\n      0x40\n        /* \"#utility.yul\":9727:9736   */\n      dup4\n        /* \"#utility.yul\":9723:9741   */\n      add\n        /* \"#utility.yul\":9714:9720   */\n      dup8\n        /* \"#utility.yul\":9670:9742   */\n      tag_174\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9752:9824   */\n      tag_318\n        /* \"#utility.yul\":9820:9822   */\n      0x60\n        /* \"#utility.yul\":9809:9818   */\n      dup4\n        /* \"#utility.yul\":9805:9823   */\n      add\n        /* \"#utility.yul\":9796:9802   */\n      dup7\n        /* \"#utility.yul\":9752:9824   */\n      tag_174\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9834:9901   */\n      tag_319\n        /* \"#utility.yul\":9896:9899   */\n      0x80\n        /* \"#utility.yul\":9885:9894   */\n      dup4\n        /* \"#utility.yul\":9881:9900   */\n      add\n        /* \"#utility.yul\":9872:9878   */\n      dup6\n        /* \"#utility.yul\":9834:9901   */\n      tag_195\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9911:9984   */\n      tag_320\n        /* \"#utility.yul\":9979:9982   */\n      0xa0\n        /* \"#utility.yul\":9968:9977   */\n      dup4\n        /* \"#utility.yul\":9964:9983   */\n      add\n        /* \"#utility.yul\":9955:9961   */\n      dup5\n        /* \"#utility.yul\":9911:9984   */\n      tag_174\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9228:9991   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9997:10177   */\n    tag_196:\n        /* \"#utility.yul\":10045:10122   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10042:10043   */\n      0x00\n        /* \"#utility.yul\":10035:10123   */\n      mstore\n        /* \"#utility.yul\":10142:10146   */\n      0x11\n        /* \"#utility.yul\":10139:10140   */\n      0x04\n        /* \"#utility.yul\":10132:10147   */\n      mstore\n        /* \"#utility.yul\":10166:10170   */\n      0x24\n        /* \"#utility.yul\":10163:10164   */\n      0x00\n        /* \"#utility.yul\":10156:10171   */\n      revert\n        /* \"#utility.yul\":10183:10593   */\n    tag_62:\n        /* \"#utility.yul\":10223:10230   */\n      0x00\n        /* \"#utility.yul\":10246:10266   */\n      tag_323\n        /* \"#utility.yul\":10264:10265   */\n      dup3\n        /* \"#utility.yul\":10246:10266   */\n      tag_169\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":10241:10266   */\n      swap2\n      pop\n        /* \"#utility.yul\":10280:10300   */\n      tag_324\n        /* \"#utility.yul\":10298:10299   */\n      dup4\n        /* \"#utility.yul\":10280:10300   */\n      tag_169\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10275:10300   */\n      swap3\n      pop\n        /* \"#utility.yul\":10335:10336   */\n      dup3\n        /* \"#utility.yul\":10332:10333   */\n      dup3\n        /* \"#utility.yul\":10328:10337   */\n      mul\n        /* \"#utility.yul\":10357:10387   */\n      tag_325\n        /* \"#utility.yul\":10375:10386   */\n      dup2\n        /* \"#utility.yul\":10357:10387   */\n      tag_169\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10346:10387   */\n      swap2\n      pop\n        /* \"#utility.yul\":10536:10537   */\n      dup3\n        /* \"#utility.yul\":10527:10534   */\n      dup3\n        /* \"#utility.yul\":10523:10538   */\n      div\n        /* \"#utility.yul\":10520:10521   */\n      dup5\n        /* \"#utility.yul\":10517:10539   */\n      eq\n        /* \"#utility.yul\":10497:10498   */\n      dup4\n        /* \"#utility.yul\":10490:10499   */\n      iszero\n        /* \"#utility.yul\":10470:10553   */\n      or\n        /* \"#utility.yul\":10447:10586   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":10566:10584   */\n      tag_327\n      tag_196\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10447:10586   */\n    tag_326:\n        /* \"#utility.yul\":10231:10593   */\n      pop\n        /* \"#utility.yul\":10183:10593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10599:10768   */\n    tag_197:\n        /* \"#utility.yul\":10683:10694   */\n      0x00\n        /* \"#utility.yul\":10717:10723   */\n      dup3\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10705:10724   */\n      mstore\n        /* \"#utility.yul\":10757:10761   */\n      0x20\n        /* \"#utility.yul\":10752:10755   */\n      dup3\n        /* \"#utility.yul\":10748:10762   */\n      add\n        /* \"#utility.yul\":10733:10762   */\n      swap1\n      pop\n        /* \"#utility.yul\":10599:10768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10774:10949   */\n    tag_198:\n        /* \"#utility.yul\":10914:10941   */\n      0x416d6f756e742073686f756c6420626520706f73697469766500000000000000\n        /* \"#utility.yul\":10910:10911   */\n      0x00\n        /* \"#utility.yul\":10902:10908   */\n      dup3\n        /* \"#utility.yul\":10898:10912   */\n      add\n        /* \"#utility.yul\":10891:10942   */\n      mstore\n        /* \"#utility.yul\":10774:10949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10955:11321   */\n    tag_199:\n        /* \"#utility.yul\":11097:11100   */\n      0x00\n        /* \"#utility.yul\":11118:11185   */\n      tag_331\n        /* \"#utility.yul\":11182:11184   */\n      0x19\n        /* \"#utility.yul\":11177:11180   */\n      dup4\n        /* \"#utility.yul\":11118:11185   */\n      tag_197\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11111:11185   */\n      swap2\n      pop\n        /* \"#utility.yul\":11194:11287   */\n      tag_332\n        /* \"#utility.yul\":11283:11286   */\n      dup3\n        /* \"#utility.yul\":11194:11287   */\n      tag_198\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11312:11314   */\n      0x20\n        /* \"#utility.yul\":11307:11310   */\n      dup3\n        /* \"#utility.yul\":11303:11315   */\n      add\n        /* \"#utility.yul\":11296:11315   */\n      swap1\n      pop\n        /* \"#utility.yul\":10955:11321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11327:11746   */\n    tag_65:\n        /* \"#utility.yul\":11493:11497   */\n      0x00\n        /* \"#utility.yul\":11531:11533   */\n      0x20\n        /* \"#utility.yul\":11520:11529   */\n      dup3\n        /* \"#utility.yul\":11516:11534   */\n      add\n        /* \"#utility.yul\":11508:11534   */\n      swap1\n      pop\n        /* \"#utility.yul\":11580:11589   */\n      dup2\n        /* \"#utility.yul\":11574:11578   */\n      dup2\n        /* \"#utility.yul\":11570:11590   */\n      sub\n        /* \"#utility.yul\":11566:11567   */\n      0x00\n        /* \"#utility.yul\":11555:11564   */\n      dup4\n        /* \"#utility.yul\":11551:11568   */\n      add\n        /* \"#utility.yul\":11544:11591   */\n      mstore\n        /* \"#utility.yul\":11608:11739   */\n      tag_334\n        /* \"#utility.yul\":11734:11738   */\n      dup2\n        /* \"#utility.yul\":11608:11739   */\n      tag_199\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11600:11739   */\n      swap1\n      pop\n        /* \"#utility.yul\":11327:11746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11752:11895   */\n    tag_200:\n        /* \"#utility.yul\":11809:11814   */\n      0x00\n        /* \"#utility.yul\":11840:11846   */\n      dup2\n        /* \"#utility.yul\":11834:11847   */\n      mload\n        /* \"#utility.yul\":11825:11847   */\n      swap1\n      pop\n        /* \"#utility.yul\":11856:11889   */\n      tag_336\n        /* \"#utility.yul\":11883:11888   */\n      dup2\n        /* \"#utility.yul\":11856:11889   */\n      tag_170\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11752:11895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11901:12252   */\n    tag_70:\n        /* \"#utility.yul\":11971:11977   */\n      0x00\n        /* \"#utility.yul\":12020:12022   */\n      0x20\n        /* \"#utility.yul\":12008:12017   */\n      dup3\n        /* \"#utility.yul\":11999:12006   */\n      dup5\n        /* \"#utility.yul\":11995:12018   */\n      sub\n        /* \"#utility.yul\":11991:12023   */\n      slt\n        /* \"#utility.yul\":11988:12107   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":12026:12105   */\n      tag_339\n      tag_167\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11988:12107   */\n    tag_338:\n        /* \"#utility.yul\":12146:12147   */\n      0x00\n        /* \"#utility.yul\":12171:12235   */\n      tag_340\n        /* \"#utility.yul\":12227:12234   */\n      dup5\n        /* \"#utility.yul\":12218:12224   */\n      dup3\n        /* \"#utility.yul\":12207:12216   */\n      dup6\n        /* \"#utility.yul\":12203:12225   */\n      add\n        /* \"#utility.yul\":12171:12235   */\n      tag_200\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12161:12235   */\n      swap2\n      pop\n        /* \"#utility.yul\":12117:12245   */\n      pop\n        /* \"#utility.yul\":11901:12252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12258:12428   */\n    tag_201:\n        /* \"#utility.yul\":12398:12420   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12394:12395   */\n      0x00\n        /* \"#utility.yul\":12386:12392   */\n      dup3\n        /* \"#utility.yul\":12382:12396   */\n      add\n        /* \"#utility.yul\":12375:12421   */\n      mstore\n        /* \"#utility.yul\":12258:12428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12434:12800   */\n    tag_202:\n        /* \"#utility.yul\":12576:12579   */\n      0x00\n        /* \"#utility.yul\":12597:12664   */\n      tag_343\n        /* \"#utility.yul\":12661:12663   */\n      0x14\n        /* \"#utility.yul\":12656:12659   */\n      dup4\n        /* \"#utility.yul\":12597:12664   */\n      tag_197\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12590:12664   */\n      swap2\n      pop\n        /* \"#utility.yul\":12673:12766   */\n      tag_344\n        /* \"#utility.yul\":12762:12765   */\n      dup3\n        /* \"#utility.yul\":12673:12766   */\n      tag_201\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12791:12793   */\n      0x20\n        /* \"#utility.yul\":12786:12789   */\n      dup3\n        /* \"#utility.yul\":12782:12794   */\n      add\n        /* \"#utility.yul\":12775:12794   */\n      swap1\n      pop\n        /* \"#utility.yul\":12434:12800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12806:13225   */\n    tag_73:\n        /* \"#utility.yul\":12972:12976   */\n      0x00\n        /* \"#utility.yul\":13010:13012   */\n      0x20\n        /* \"#utility.yul\":12999:13008   */\n      dup3\n        /* \"#utility.yul\":12995:13013   */\n      add\n        /* \"#utility.yul\":12987:13013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13059:13068   */\n      dup2\n        /* \"#utility.yul\":13053:13057   */\n      dup2\n        /* \"#utility.yul\":13049:13069   */\n      sub\n        /* \"#utility.yul\":13045:13046   */\n      0x00\n        /* \"#utility.yul\":13034:13043   */\n      dup4\n        /* \"#utility.yul\":13030:13047   */\n      add\n        /* \"#utility.yul\":13023:13070   */\n      mstore\n        /* \"#utility.yul\":13087:13218   */\n      tag_346\n        /* \"#utility.yul\":13213:13217   */\n      dup2\n        /* \"#utility.yul\":13087:13218   */\n      tag_202\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":13079:13218   */\n      swap1\n      pop\n        /* \"#utility.yul\":12806:13225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13231:13673   */\n    tag_75:\n        /* \"#utility.yul\":13380:13384   */\n      0x00\n        /* \"#utility.yul\":13418:13420   */\n      0x60\n        /* \"#utility.yul\":13407:13416   */\n      dup3\n        /* \"#utility.yul\":13403:13421   */\n      add\n        /* \"#utility.yul\":13395:13421   */\n      swap1\n      pop\n        /* \"#utility.yul\":13431:13502   */\n      tag_348\n        /* \"#utility.yul\":13499:13500   */\n      0x00\n        /* \"#utility.yul\":13488:13497   */\n      dup4\n        /* \"#utility.yul\":13484:13501   */\n      add\n        /* \"#utility.yul\":13475:13481   */\n      dup7\n        /* \"#utility.yul\":13431:13502   */\n      tag_194\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13512:13584   */\n      tag_349\n        /* \"#utility.yul\":13580:13582   */\n      0x20\n        /* \"#utility.yul\":13569:13578   */\n      dup4\n        /* \"#utility.yul\":13565:13583   */\n      add\n        /* \"#utility.yul\":13556:13562   */\n      dup6\n        /* \"#utility.yul\":13512:13584   */\n      tag_194\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":13594:13666   */\n      tag_350\n        /* \"#utility.yul\":13662:13664   */\n      0x40\n        /* \"#utility.yul\":13651:13660   */\n      dup4\n        /* \"#utility.yul\":13647:13665   */\n      add\n        /* \"#utility.yul\":13638:13644   */\n      dup5\n        /* \"#utility.yul\":13594:13666   */\n      tag_174\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13231:13673   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13679:13795   */\n    tag_203:\n        /* \"#utility.yul\":13749:13770   */\n      tag_352\n        /* \"#utility.yul\":13764:13769   */\n      dup2\n        /* \"#utility.yul\":13749:13770   */\n      tag_188\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13742:13747   */\n      dup2\n        /* \"#utility.yul\":13739:13771   */\n      eq\n        /* \"#utility.yul\":13729:13789   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":13785:13786   */\n      0x00\n        /* \"#utility.yul\":13782:13783   */\n      0x00\n        /* \"#utility.yul\":13775:13787   */\n      revert\n        /* \"#utility.yul\":13729:13789   */\n    tag_353:\n        /* \"#utility.yul\":13679:13795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13801:13938   */\n    tag_204:\n        /* \"#utility.yul\":13855:13860   */\n      0x00\n        /* \"#utility.yul\":13886:13892   */\n      dup2\n        /* \"#utility.yul\":13880:13893   */\n      mload\n        /* \"#utility.yul\":13871:13893   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:13932   */\n      tag_355\n        /* \"#utility.yul\":13926:13931   */\n      dup2\n        /* \"#utility.yul\":13902:13932   */\n      tag_203\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":13801:13938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13944:14289   */\n    tag_79:\n        /* \"#utility.yul\":14011:14017   */\n      0x00\n        /* \"#utility.yul\":14060:14062   */\n      0x20\n        /* \"#utility.yul\":14048:14057   */\n      dup3\n        /* \"#utility.yul\":14039:14046   */\n      dup5\n        /* \"#utility.yul\":14035:14058   */\n      sub\n        /* \"#utility.yul\":14031:14063   */\n      slt\n        /* \"#utility.yul\":14028:14147   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":14066:14145   */\n      tag_358\n      tag_167\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14028:14147   */\n    tag_357:\n        /* \"#utility.yul\":14186:14187   */\n      0x00\n        /* \"#utility.yul\":14211:14272   */\n      tag_359\n        /* \"#utility.yul\":14264:14271   */\n      dup5\n        /* \"#utility.yul\":14255:14261   */\n      dup3\n        /* \"#utility.yul\":14244:14253   */\n      dup6\n        /* \"#utility.yul\":14240:14262   */\n      add\n        /* \"#utility.yul\":14211:14272   */\n      tag_204\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14201:14272   */\n      swap2\n      pop\n        /* \"#utility.yul\":14157:14282   */\n      pop\n        /* \"#utility.yul\":13944:14289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14295:14469   */\n    tag_205:\n        /* \"#utility.yul\":14435:14461   */\n      0x5374616b696e673a205472616e73666572206661696c65640000000000000000\n        /* \"#utility.yul\":14431:14432   */\n      0x00\n        /* \"#utility.yul\":14423:14429   */\n      dup3\n        /* \"#utility.yul\":14419:14433   */\n      add\n        /* \"#utility.yul\":14412:14462   */\n      mstore\n        /* \"#utility.yul\":14295:14469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14841   */\n    tag_206:\n        /* \"#utility.yul\":14617:14620   */\n      0x00\n        /* \"#utility.yul\":14638:14705   */\n      tag_362\n        /* \"#utility.yul\":14702:14704   */\n      0x18\n        /* \"#utility.yul\":14697:14700   */\n      dup4\n        /* \"#utility.yul\":14638:14705   */\n      tag_197\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14631:14705   */\n      swap2\n      pop\n        /* \"#utility.yul\":14714:14807   */\n      tag_363\n        /* \"#utility.yul\":14803:14806   */\n      dup3\n        /* \"#utility.yul\":14714:14807   */\n      tag_205\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14832:14834   */\n      0x20\n        /* \"#utility.yul\":14827:14830   */\n      dup3\n        /* \"#utility.yul\":14823:14835   */\n      add\n        /* \"#utility.yul\":14816:14835   */\n      swap1\n      pop\n        /* \"#utility.yul\":14475:14841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14847:15266   */\n    tag_82:\n        /* \"#utility.yul\":15013:15017   */\n      0x00\n        /* \"#utility.yul\":15051:15053   */\n      0x20\n        /* \"#utility.yul\":15040:15049   */\n      dup3\n        /* \"#utility.yul\":15036:15054   */\n      add\n        /* \"#utility.yul\":15028:15054   */\n      swap1\n      pop\n        /* \"#utility.yul\":15100:15109   */\n      dup2\n        /* \"#utility.yul\":15094:15098   */\n      dup2\n        /* \"#utility.yul\":15090:15110   */\n      sub\n        /* \"#utility.yul\":15086:15087   */\n      0x00\n        /* \"#utility.yul\":15075:15084   */\n      dup4\n        /* \"#utility.yul\":15071:15088   */\n      add\n        /* \"#utility.yul\":15064:15111   */\n      mstore\n        /* \"#utility.yul\":15128:15259   */\n      tag_365\n        /* \"#utility.yul\":15254:15258   */\n      dup2\n        /* \"#utility.yul\":15128:15259   */\n      tag_206\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":15120:15259   */\n      swap1\n      pop\n        /* \"#utility.yul\":14847:15266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15272:15463   */\n    tag_86:\n        /* \"#utility.yul\":15312:15315   */\n      0x00\n        /* \"#utility.yul\":15331:15351   */\n      tag_367\n        /* \"#utility.yul\":15349:15350   */\n      dup3\n        /* \"#utility.yul\":15331:15351   */\n      tag_169\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":15326:15351   */\n      swap2\n      pop\n        /* \"#utility.yul\":15365:15385   */\n      tag_368\n        /* \"#utility.yul\":15383:15384   */\n      dup4\n        /* \"#utility.yul\":15365:15385   */\n      tag_169\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":15360:15385   */\n      swap3\n      pop\n        /* \"#utility.yul\":15408:15409   */\n      dup3\n        /* \"#utility.yul\":15405:15406   */\n      dup3\n        /* \"#utility.yul\":15401:15410   */\n      add\n        /* \"#utility.yul\":15394:15410   */\n      swap1\n      pop\n        /* \"#utility.yul\":15429:15432   */\n      dup1\n        /* \"#utility.yul\":15426:15427   */\n      dup3\n        /* \"#utility.yul\":15423:15433   */\n      gt\n        /* \"#utility.yul\":15420:15456   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":15436:15454   */\n      tag_370\n      tag_196\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":15420:15456   */\n    tag_369:\n        /* \"#utility.yul\":15272:15463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15469:15702   */\n    tag_88:\n        /* \"#utility.yul\":15508:15511   */\n      0x00\n        /* \"#utility.yul\":15531:15555   */\n      tag_372\n        /* \"#utility.yul\":15549:15554   */\n      dup3\n        /* \"#utility.yul\":15531:15555   */\n      tag_169\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15522:15555   */\n      swap2\n      pop\n        /* \"#utility.yul\":15577:15643   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15570:15575   */\n      dup3\n        /* \"#utility.yul\":15567:15644   */\n      sub\n        /* \"#utility.yul\":15564:15667   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":15647:15665   */\n      tag_374\n      tag_196\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":15564:15667   */\n    tag_373:\n        /* \"#utility.yul\":15694:15695   */\n      0x01\n        /* \"#utility.yul\":15687:15692   */\n      dup3\n        /* \"#utility.yul\":15683:15696   */\n      add\n        /* \"#utility.yul\":15676:15696   */\n      swap1\n      pop\n        /* \"#utility.yul\":15469:15702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15708:15888   */\n    tag_91:\n        /* \"#utility.yul\":15756:15833   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15753:15754   */\n      0x00\n        /* \"#utility.yul\":15746:15834   */\n      mstore\n        /* \"#utility.yul\":15853:15857   */\n      0x21\n        /* \"#utility.yul\":15850:15851   */\n      0x04\n        /* \"#utility.yul\":15843:15858   */\n      mstore\n        /* \"#utility.yul\":15877:15881   */\n      0x24\n        /* \"#utility.yul\":15874:15875   */\n      0x00\n        /* \"#utility.yul\":15867:15882   */\n      revert\n        /* \"#utility.yul\":15894:16074   */\n    tag_207:\n        /* \"#utility.yul\":15942:16019   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15939:15940   */\n      0x00\n        /* \"#utility.yul\":15932:16020   */\n      mstore\n        /* \"#utility.yul\":16039:16043   */\n      0x12\n        /* \"#utility.yul\":16036:16037   */\n      0x04\n        /* \"#utility.yul\":16029:16044   */\n      mstore\n        /* \"#utility.yul\":16063:16067   */\n      0x24\n        /* \"#utility.yul\":16060:16061   */\n      0x00\n        /* \"#utility.yul\":16053:16068   */\n      revert\n        /* \"#utility.yul\":16080:16265   */\n    tag_97:\n        /* \"#utility.yul\":16120:16121   */\n      0x00\n        /* \"#utility.yul\":16137:16157   */\n      tag_378\n        /* \"#utility.yul\":16155:16156   */\n      dup3\n        /* \"#utility.yul\":16137:16157   */\n      tag_169\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":16132:16157   */\n      swap2\n      pop\n        /* \"#utility.yul\":16171:16191   */\n      tag_379\n        /* \"#utility.yul\":16189:16190   */\n      dup4\n        /* \"#utility.yul\":16171:16191   */\n      tag_169\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":16166:16191   */\n      swap3\n      pop\n        /* \"#utility.yul\":16210:16211   */\n      dup3\n        /* \"#utility.yul\":16200:16235   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":16215:16233   */\n      tag_381\n      tag_207\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":16200:16235   */\n    tag_380:\n        /* \"#utility.yul\":16257:16258   */\n      dup3\n        /* \"#utility.yul\":16254:16255   */\n      dup3\n        /* \"#utility.yul\":16250:16259   */\n      div\n        /* \"#utility.yul\":16245:16259   */\n      swap1\n      pop\n        /* \"#utility.yul\":16080:16265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16271:16393   */\n    tag_208:\n        /* \"#utility.yul\":16361:16362   */\n      0x04\n        /* \"#utility.yul\":16354:16359   */\n      dup2\n        /* \"#utility.yul\":16351:16363   */\n      lt\n        /* \"#utility.yul\":16341:16387   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":16367:16385   */\n      tag_384\n      tag_91\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":16341:16387   */\n    tag_383:\n        /* \"#utility.yul\":16271:16393   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16399:16544   */\n    tag_209:\n        /* \"#utility.yul\":16453:16460   */\n      0x00\n        /* \"#utility.yul\":16482:16487   */\n      dup2\n        /* \"#utility.yul\":16471:16487   */\n      swap1\n      pop\n        /* \"#utility.yul\":16488:16538   */\n      tag_386\n        /* \"#utility.yul\":16532:16537   */\n      dup3\n        /* \"#utility.yul\":16488:16538   */\n      tag_208\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":16399:16544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16550:16695   */\n    tag_210:\n        /* \"#utility.yul\":16615:16624   */\n      0x00\n        /* \"#utility.yul\":16648:16689   */\n      tag_388\n        /* \"#utility.yul\":16683:16688   */\n      dup3\n        /* \"#utility.yul\":16648:16689   */\n      tag_209\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":16635:16689   */\n      swap1\n      pop\n        /* \"#utility.yul\":16550:16695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16701:16862   */\n    tag_211:\n        /* \"#utility.yul\":16803:16855   */\n      tag_390\n        /* \"#utility.yul\":16849:16854   */\n      dup2\n        /* \"#utility.yul\":16803:16855   */\n      tag_210\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":16798:16801   */\n      dup3\n        /* \"#utility.yul\":16791:16856   */\n      mstore\n        /* \"#utility.yul\":16701:16862   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16868:17451   */\n    tag_99:\n        /* \"#utility.yul\":17060:17064   */\n      0x00\n        /* \"#utility.yul\":17098:17101   */\n      0x80\n        /* \"#utility.yul\":17087:17096   */\n      dup3\n        /* \"#utility.yul\":17083:17102   */\n      add\n        /* \"#utility.yul\":17075:17102   */\n      swap1\n      pop\n        /* \"#utility.yul\":17112:17183   */\n      tag_392\n        /* \"#utility.yul\":17180:17181   */\n      0x00\n        /* \"#utility.yul\":17169:17178   */\n      dup4\n        /* \"#utility.yul\":17165:17182   */\n      add\n        /* \"#utility.yul\":17156:17162   */\n      dup8\n        /* \"#utility.yul\":17112:17183   */\n      tag_174\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":17193:17280   */\n      tag_393\n        /* \"#utility.yul\":17276:17278   */\n      0x20\n        /* \"#utility.yul\":17265:17274   */\n      dup4\n        /* \"#utility.yul\":17261:17279   */\n      add\n        /* \"#utility.yul\":17252:17258   */\n      dup7\n        /* \"#utility.yul\":17193:17280   */\n      tag_211\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":17290:17362   */\n      tag_394\n        /* \"#utility.yul\":17358:17360   */\n      0x40\n        /* \"#utility.yul\":17347:17356   */\n      dup4\n        /* \"#utility.yul\":17343:17361   */\n      add\n        /* \"#utility.yul\":17334:17340   */\n      dup6\n        /* \"#utility.yul\":17290:17362   */\n      tag_174\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":17372:17444   */\n      tag_395\n        /* \"#utility.yul\":17440:17442   */\n      0x60\n        /* \"#utility.yul\":17429:17438   */\n      dup4\n        /* \"#utility.yul\":17425:17443   */\n      add\n        /* \"#utility.yul\":17416:17422   */\n      dup5\n        /* \"#utility.yul\":17372:17444   */\n      tag_174\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":16868:17451   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17457:17679   */\n    tag_212:\n        /* \"#utility.yul\":17597:17631   */\n      0x596f7520617265206e6f7420746865206f776e6572206f662074686973207374\n        /* \"#utility.yul\":17593:17594   */\n      0x00\n        /* \"#utility.yul\":17585:17591   */\n      dup3\n        /* \"#utility.yul\":17581:17595   */\n      add\n        /* \"#utility.yul\":17574:17632   */\n      mstore\n        /* \"#utility.yul\":17666:17671   */\n      0x616b650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17661:17663   */\n      0x20\n        /* \"#utility.yul\":17653:17659   */\n      dup3\n        /* \"#utility.yul\":17649:17664   */\n      add\n        /* \"#utility.yul\":17642:17672   */\n      mstore\n        /* \"#utility.yul\":17457:17679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17685:18051   */\n    tag_213:\n        /* \"#utility.yul\":17827:17830   */\n      0x00\n        /* \"#utility.yul\":17848:17915   */\n      tag_398\n        /* \"#utility.yul\":17912:17914   */\n      0x23\n        /* \"#utility.yul\":17907:17910   */\n      dup4\n        /* \"#utility.yul\":17848:17915   */\n      tag_197\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":17841:17915   */\n      swap2\n      pop\n        /* \"#utility.yul\":17924:18017   */\n      tag_399\n        /* \"#utility.yul\":18013:18016   */\n      dup3\n        /* \"#utility.yul\":17924:18017   */\n      tag_212\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":18042:18044   */\n      0x40\n        /* \"#utility.yul\":18037:18040   */\n      dup3\n        /* \"#utility.yul\":18033:18045   */\n      add\n        /* \"#utility.yul\":18026:18045   */\n      swap1\n      pop\n        /* \"#utility.yul\":17685:18051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18057:18476   */\n    tag_105:\n        /* \"#utility.yul\":18223:18227   */\n      0x00\n        /* \"#utility.yul\":18261:18263   */\n      0x20\n        /* \"#utility.yul\":18250:18259   */\n      dup3\n        /* \"#utility.yul\":18246:18264   */\n      add\n        /* \"#utility.yul\":18238:18264   */\n      swap1\n      pop\n        /* \"#utility.yul\":18310:18319   */\n      dup2\n        /* \"#utility.yul\":18304:18308   */\n      dup2\n        /* \"#utility.yul\":18300:18320   */\n      sub\n        /* \"#utility.yul\":18296:18297   */\n      0x00\n        /* \"#utility.yul\":18285:18294   */\n      dup4\n        /* \"#utility.yul\":18281:18298   */\n      add\n        /* \"#utility.yul\":18274:18321   */\n      mstore\n        /* \"#utility.yul\":18338:18469   */\n      tag_401\n        /* \"#utility.yul\":18464:18468   */\n      dup2\n        /* \"#utility.yul\":18338:18469   */\n      tag_213\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":18330:18469   */\n      swap1\n      pop\n        /* \"#utility.yul\":18057:18476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18482:18709   */\n    tag_214:\n        /* \"#utility.yul\":18622:18656   */\n      0x5374616b65206973206e6f7420616374697665206f7220616c72656164792077\n        /* \"#utility.yul\":18618:18619   */\n      0x00\n        /* \"#utility.yul\":18610:18616   */\n      dup3\n        /* \"#utility.yul\":18606:18620   */\n      add\n        /* \"#utility.yul\":18599:18657   */\n      mstore\n        /* \"#utility.yul\":18691:18701   */\n      0x697468647261776e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18686:18688   */\n      0x20\n        /* \"#utility.yul\":18678:18684   */\n      dup3\n        /* \"#utility.yul\":18674:18689   */\n      add\n        /* \"#utility.yul\":18667:18702   */\n      mstore\n        /* \"#utility.yul\":18482:18709   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18715:19081   */\n    tag_215:\n        /* \"#utility.yul\":18857:18860   */\n      0x00\n        /* \"#utility.yul\":18878:18945   */\n      tag_404\n        /* \"#utility.yul\":18942:18944   */\n      0x28\n        /* \"#utility.yul\":18937:18940   */\n      dup4\n        /* \"#utility.yul\":18878:18945   */\n      tag_197\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":18871:18945   */\n      swap2\n      pop\n        /* \"#utility.yul\":18954:19047   */\n      tag_405\n        /* \"#utility.yul\":19043:19046   */\n      dup3\n        /* \"#utility.yul\":18954:19047   */\n      tag_214\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":19072:19074   */\n      0x40\n        /* \"#utility.yul\":19067:19070   */\n      dup3\n        /* \"#utility.yul\":19063:19075   */\n      add\n        /* \"#utility.yul\":19056:19075   */\n      swap1\n      pop\n        /* \"#utility.yul\":18715:19081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19087:19506   */\n    tag_108:\n        /* \"#utility.yul\":19253:19257   */\n      0x00\n        /* \"#utility.yul\":19291:19293   */\n      0x20\n        /* \"#utility.yul\":19280:19289   */\n      dup3\n        /* \"#utility.yul\":19276:19294   */\n      add\n        /* \"#utility.yul\":19268:19294   */\n      swap1\n      pop\n        /* \"#utility.yul\":19340:19349   */\n      dup2\n        /* \"#utility.yul\":19334:19338   */\n      dup2\n        /* \"#utility.yul\":19330:19350   */\n      sub\n        /* \"#utility.yul\":19326:19327   */\n      0x00\n        /* \"#utility.yul\":19315:19324   */\n      dup4\n        /* \"#utility.yul\":19311:19328   */\n      add\n        /* \"#utility.yul\":19304:19351   */\n      mstore\n        /* \"#utility.yul\":19368:19499   */\n      tag_407\n        /* \"#utility.yul\":19494:19498   */\n      dup2\n        /* \"#utility.yul\":19368:19499   */\n      tag_215\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":19360:19499   */\n      swap1\n      pop\n        /* \"#utility.yul\":19087:19506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19512:19687   */\n    tag_216:\n        /* \"#utility.yul\":19652:19679   */\n      0x5374616b6520706572696f64206973206e6f7420656e64656400000000000000\n        /* \"#utility.yul\":19648:19649   */\n      0x00\n        /* \"#utility.yul\":19640:19646   */\n      dup3\n        /* \"#utility.yul\":19636:19650   */\n      add\n        /* \"#utility.yul\":19629:19680   */\n      mstore\n        /* \"#utility.yul\":19512:19687   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19693:20059   */\n    tag_217:\n        /* \"#utility.yul\":19835:19838   */\n      0x00\n        /* \"#utility.yul\":19856:19923   */\n      tag_410\n        /* \"#utility.yul\":19920:19922   */\n      0x19\n        /* \"#utility.yul\":19915:19918   */\n      dup4\n        /* \"#utility.yul\":19856:19923   */\n      tag_197\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":19849:19923   */\n      swap2\n      pop\n        /* \"#utility.yul\":19932:20025   */\n      tag_411\n        /* \"#utility.yul\":20021:20024   */\n      dup3\n        /* \"#utility.yul\":19932:20025   */\n      tag_216\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":20050:20052   */\n      0x20\n        /* \"#utility.yul\":20045:20048   */\n      dup3\n        /* \"#utility.yul\":20041:20053   */\n      add\n        /* \"#utility.yul\":20034:20053   */\n      swap1\n      pop\n        /* \"#utility.yul\":19693:20059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20065:20484   */\n    tag_111:\n        /* \"#utility.yul\":20231:20235   */\n      0x00\n        /* \"#utility.yul\":20269:20271   */\n      0x20\n        /* \"#utility.yul\":20258:20267   */\n      dup3\n        /* \"#utility.yul\":20254:20272   */\n      add\n        /* \"#utility.yul\":20246:20272   */\n      swap1\n      pop\n        /* \"#utility.yul\":20318:20327   */\n      dup2\n        /* \"#utility.yul\":20312:20316   */\n      dup2\n        /* \"#utility.yul\":20308:20328   */\n      sub\n        /* \"#utility.yul\":20304:20305   */\n      0x00\n        /* \"#utility.yul\":20293:20302   */\n      dup4\n        /* \"#utility.yul\":20289:20306   */\n      add\n        /* \"#utility.yul\":20282:20329   */\n      mstore\n        /* \"#utility.yul\":20346:20477   */\n      tag_413\n        /* \"#utility.yul\":20472:20476   */\n      dup2\n        /* \"#utility.yul\":20346:20477   */\n      tag_217\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":20338:20477   */\n      swap1\n      pop\n        /* \"#utility.yul\":20065:20484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20490:20822   */\n    tag_117:\n        /* \"#utility.yul\":20611:20615   */\n      0x00\n        /* \"#utility.yul\":20649:20651   */\n      0x40\n        /* \"#utility.yul\":20638:20647   */\n      dup3\n        /* \"#utility.yul\":20634:20652   */\n      add\n        /* \"#utility.yul\":20626:20652   */\n      swap1\n      pop\n        /* \"#utility.yul\":20662:20733   */\n      tag_415\n        /* \"#utility.yul\":20730:20731   */\n      0x00\n        /* \"#utility.yul\":20719:20728   */\n      dup4\n        /* \"#utility.yul\":20715:20732   */\n      add\n        /* \"#utility.yul\":20706:20712   */\n      dup6\n        /* \"#utility.yul\":20662:20733   */\n      tag_174\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":20743:20815   */\n      tag_416\n        /* \"#utility.yul\":20811:20813   */\n      0x20\n        /* \"#utility.yul\":20800:20809   */\n      dup4\n        /* \"#utility.yul\":20796:20814   */\n      add\n        /* \"#utility.yul\":20787:20793   */\n      dup5\n        /* \"#utility.yul\":20743:20815   */\n      tag_174\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":20490:20822   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20828:21008   */\n    tag_123:\n        /* \"#utility.yul\":20876:20953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20873:20874   */\n      0x00\n        /* \"#utility.yul\":20866:20954   */\n      mstore\n        /* \"#utility.yul\":20973:20977   */\n      0x41\n        /* \"#utility.yul\":20970:20971   */\n      0x04\n        /* \"#utility.yul\":20963:20978   */\n      mstore\n        /* \"#utility.yul\":20997:21001   */\n      0x24\n        /* \"#utility.yul\":20994:20995   */\n      0x00\n        /* \"#utility.yul\":20987:21002   */\n      revert\n        /* \"#utility.yul\":21014:21194   */\n    tag_133:\n        /* \"#utility.yul\":21062:21139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21059:21060   */\n      0x00\n        /* \"#utility.yul\":21052:21140   */\n      mstore\n        /* \"#utility.yul\":21159:21163   */\n      0x32\n        /* \"#utility.yul\":21156:21157   */\n      0x04\n        /* \"#utility.yul\":21149:21164   */\n      mstore\n        /* \"#utility.yul\":21183:21187   */\n      0x24\n        /* \"#utility.yul\":21180:21181   */\n      0x00\n        /* \"#utility.yul\":21173:21188   */\n      revert\n\n    auxdata: 0xa264697066735822122075371232a393c6800b7b59f89786fee6b966f60dbcae23b8d33b84098a0ff9e264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1050": {
									"entryPoint": null,
									"id": 1050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$877_fromMemory": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$877_fromMemory": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$877": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$877": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1585:7",
										"nodeType": "YulBlock",
										"src": "0:1585:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "627:51:7",
													"nodeType": "YulBlock",
													"src": "627:51:7",
													"statements": [
														{
															"nativeSrc": "637:35:7",
															"nodeType": "YulAssignment",
															"src": "637:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:7"
																},
																"nativeSrc": "648:24:7",
																"nodeType": "YulFunctionCall",
																"src": "648:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$877",
												"nativeSrc": "568:110:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:7",
														"nodeType": "YulTypedName",
														"src": "609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:7",
														"nodeType": "YulTypedName",
														"src": "619:7:7",
														"type": ""
													}
												],
												"src": "568:110:7"
											},
											{
												"body": {
													"nativeSrc": "741:93:7",
													"nodeType": "YulBlock",
													"src": "741:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:7",
																"nodeType": "YulBlock",
																"src": "812:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:7",
																					"nodeType": "YulLiteral",
																					"src": "824:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:7"
																			},
																			"nativeSrc": "814:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:7"
																		},
																		"nativeSrc": "814:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$877",
																					"nativeSrc": "771:31:7",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:7"
																				},
																				"nativeSrc": "771:38:7",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:7"
																		},
																		"nativeSrc": "761:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:7"
																},
																"nativeSrc": "754:57:7",
																"nodeType": "YulFunctionCall",
																"src": "754:57:7"
															},
															"nativeSrc": "751:77:7",
															"nodeType": "YulIf",
															"src": "751:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$877",
												"nativeSrc": "684:150:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:7",
														"nodeType": "YulTypedName",
														"src": "734:5:7",
														"type": ""
													}
												],
												"src": "684:150:7"
											},
											{
												"body": {
													"nativeSrc": "917:94:7",
													"nodeType": "YulBlock",
													"src": "917:94:7",
													"statements": [
														{
															"nativeSrc": "927:22:7",
															"nodeType": "YulAssignment",
															"src": "927:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:7"
																},
																"nativeSrc": "936:13:7",
																"nodeType": "YulFunctionCall",
																"src": "936:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$877",
																	"nativeSrc": "958:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:7"
																},
																"nativeSrc": "958:47:7",
																"nodeType": "YulFunctionCall",
																"src": "958:47:7"
															},
															"nativeSrc": "958:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
												"nativeSrc": "840:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:7",
														"nodeType": "YulTypedName",
														"src": "895:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:7",
														"nodeType": "YulTypedName",
														"src": "903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:7",
														"nodeType": "YulTypedName",
														"src": "911:5:7",
														"type": ""
													}
												],
												"src": "840:171:7"
											},
											{
												"body": {
													"nativeSrc": "1108:288:7",
													"nodeType": "YulBlock",
													"src": "1108:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:7",
																"nodeType": "YulBlock",
																"src": "1154:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:7"
																			},
																			"nativeSrc": "1156:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:7"
																		},
																		"nativeSrc": "1156:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:7"
																		},
																		"nativeSrc": "1125:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:7"
																},
																"nativeSrc": "1121:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:7"
															},
															"nativeSrc": "1118:119:7",
															"nodeType": "YulIf",
															"src": "1118:119:7"
														},
														{
															"nativeSrc": "1247:142:7",
															"nodeType": "YulBlock",
															"src": "1247:142:7",
															"statements": [
																{
																	"nativeSrc": "1262:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:7",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:7"
																				},
																				"nativeSrc": "1347:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$877_fromMemory",
																			"nativeSrc": "1301:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:7"
																		},
																		"nativeSrc": "1301:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$877_fromMemory",
												"nativeSrc": "1017:379:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:7",
														"nodeType": "YulTypedName",
														"src": "1078:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:7",
														"nodeType": "YulTypedName",
														"src": "1089:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:7",
														"nodeType": "YulTypedName",
														"src": "1101:6:7",
														"type": ""
													}
												],
												"src": "1017:379:7"
											},
											{
												"body": {
													"nativeSrc": "1430:152:7",
													"nodeType": "YulBlock",
													"src": "1430:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1447:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1447:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1450:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1450:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:7"
																},
																"nativeSrc": "1440:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:88:7"
															},
															"nativeSrc": "1440:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1544:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1544:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1547:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1547:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1537:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:7"
																},
																"nativeSrc": "1537:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1537:15:7"
															},
															"nativeSrc": "1537:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1537:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1571:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1571:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1561:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:7"
																},
																"nativeSrc": "1561:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1561:15:7"
															},
															"nativeSrc": "1561:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1561:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1402:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1402:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$877(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$877(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$877(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$877_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$877(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$877_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$877_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611a10380380611a10833981810160405281019061003191906101d3565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60015f5f6003811115610088576100876101fe565b5b600381111561009a576100996101fe565b5b81526020019081526020015f2081905550600f60015f600160038111156100c4576100c36101fe565b5b60038111156100d6576100d56101fe565b5b81526020019081526020015f2081905550601460015f60026003811115610100576100ff6101fe565b5b6003811115610112576101116101fe565b5b81526020019081526020015f2081905550601960015f60038081111561013b5761013a6101fe565b5b600381111561014d5761014c6101fe565b5b81526020019081526020015f20819055505061022b565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019182610168565b9050919050565b5f6101a282610187565b9050919050565b6101b281610198565b81146101bc575f5ffd5b50565b5f815190506101cd816101a9565b92915050565b5f602082840312156101e8576101e7610164565b5b5f6101f5848285016101bf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6117d8806102385f395ff3fe608060405234801561000f575f5ffd5b506004361061009c575f3560e01c8063762e54fc11610064578063762e54fc14610156578063a262ab3514610186578063a57a5304146101b6578063b5d5b5fa146101e6578063c4a9e1161461021b5761009c565b806310087fb1146100a05780631f1accb2146100bc5780632e1a7d4d146100ec5780634c86259e1461010857806372f702f314610138575b5f5ffd5b6100ba60048036038101906100b59190610d9e565b610239565b005b6100d660048036038101906100d19190610ddc565b6106e8565b6040516100e39190610e16565b60405180910390f35b61010660048036038101906101019190610e2f565b6106fd565b005b610122600480360381019061011d9190610e2f565b610939565b60405161012f9190610e16565b60405180910390f35b610140610959565b60405161014d9190610ed4565b60405180910390f35b610170600480360381019061016b9190610f28565b61097d565b60405161017d9190610e16565b60405180910390f35b6101a0600480360381019061019b9190610f28565b610992565b6040516101ad919061109d565b60405180910390f35b6101d060048036038101906101cb9190610e2f565b610b23565b6040516101dd91906110cc565b60405180910390f35b61020060048036038101906101fb91906110e5565b610b53565b60405161021296959493929190611132565b60405180910390f35b610223610ba2565b6040516102309190610e16565b60405180910390f35b5f670de0b6b3a76400008361024e91906111be565b90505f8311610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028990611259565b60405180910390fd5b805f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102ec91906110cc565b602060405180830381865afa158015610307573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032b919061128b565b101561036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390611300565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016103c99392919061131e565b6020604051808303815f875af11580156103e5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610409919061137d565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f906113f2565b60405180910390fd5b5f61045283610ba8565b90505f816020015190505f825f015190505f4290505f83826104749190611410565b90505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906104c490611443565b9190505590505f610168670de0b6b3a76400008660015f8d60038111156104ee576104ed61148a565b5b6003811115610500576104ff61148a565b5b81526020019081526020015f205461051891906111be565b61052291906111be565b61052c91906114e4565b90503373ffffffffffffffffffffffffffffffffffffffff167f022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c8b8b868660405161057a949392919061155a565b60405180910390a26040518060c001604052808b81526020018581526020018481526020018281526020016001151581526020018381525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a082015181600501559050503360045f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582908060018154018082558091505060019003905f5260205f20015f909190919091505560065f8154809291906106d790611443565b919050555050505050505050505050565b6001602052805f5260405f205f915090505481565b3373ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061160d565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1661083a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108319061169b565b60405180910390fd5b8060020154421015610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890611703565b60405180910390fd5b5f670de0b6b3a764000060648360030154845f01546108a091906111be565b6108aa91906114e4565b6108b491906114e4565b90505f81835f01546108c69190611410565b90505f836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6828660405161092b929190611721565b60405180910390a250505050565b60058181548110610948575f80fd5b905f5260205f20015f915090505481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f915090505481565b60605f60065467ffffffffffffffff8111156109b1576109b0611748565b5b6040519080825280602002602001820160405280156109ea57816020015b6109d7610cfa565b8152602001906001900390816109cf5790505b5090505f5f90505f5f90505b600654811015610b18575f60058281548110610a1557610a14611775565b5b905f5260205f20015490505f60025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1615610b0957806040518060c00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152602001600582015481525050858581518110610aef57610aee611775565b5b60200260200101819052508380610b0590611443565b9450505b505080806001019150506109f6565b508192505050919050565b6004602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16908060050154905086565b60065481565b610bb0610d2c565b5f6003811115610bc357610bc261148a565b5b826003811115610bd657610bd561148a565b5b03610bf9576040518060400160405280601e8152602001603c8152509050610cf5565b60016003811115610c0d57610c0c61148a565b5b826003811115610c2057610c1f61148a565b5b03610c43576040518060400160405280605a815260200160b48152509050610cf5565b60026003811115610c5757610c5661148a565b5b826003811115610c6a57610c6961148a565b5b03610c8e57604051806040016040528060b4815260200161012c8152509050610cf5565b600380811115610ca157610ca061148a565b5b826003811115610cb457610cb361148a565b5b03610cd957604051806040016040528061016881526020016102588152509050610cf5565b60405180604001604052806101688152602001610e1081525090505b919050565b6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f81525090565b60405180604001604052805f81526020015f81525090565b5f5ffd5b5f819050919050565b610d5a81610d48565b8114610d64575f5ffd5b50565b5f81359050610d7581610d51565b92915050565b60048110610d87575f5ffd5b50565b5f81359050610d9881610d7b565b92915050565b5f5f60408385031215610db457610db3610d44565b5b5f610dc185828601610d67565b9250506020610dd285828601610d8a565b9150509250929050565b5f60208284031215610df157610df0610d44565b5b5f610dfe84828501610d8a565b91505092915050565b610e1081610d48565b82525050565b5f602082019050610e295f830184610e07565b92915050565b5f60208284031215610e4457610e43610d44565b5b5f610e5184828501610d67565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610e9c610e97610e9284610e5a565b610e79565b610e5a565b9050919050565b5f610ead82610e82565b9050919050565b5f610ebe82610ea3565b9050919050565b610ece81610eb4565b82525050565b5f602082019050610ee75f830184610ec5565b92915050565b5f610ef782610e5a565b9050919050565b610f0781610eed565b8114610f11575f5ffd5b50565b5f81359050610f2281610efe565b92915050565b5f60208284031215610f3d57610f3c610d44565b5b5f610f4a84828501610f14565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610f8581610d48565b82525050565b5f8115159050919050565b610f9f81610f8b565b82525050565b60c082015f820151610fb95f850182610f7c565b506020820151610fcc6020850182610f7c565b506040820151610fdf6040850182610f7c565b506060820151610ff26060850182610f7c565b5060808201516110056080850182610f96565b5060a082015161101860a0850182610f7c565b50505050565b5f6110298383610fa5565b60c08301905092915050565b5f602082019050919050565b5f61104b82610f53565b6110558185610f5d565b935061106083610f6d565b805f5b83811015611090578151611077888261101e565b975061108283611035565b925050600181019050611063565b5085935050505092915050565b5f6020820190508181035f8301526110b58184611041565b905092915050565b6110c681610eed565b82525050565b5f6020820190506110df5f8301846110bd565b92915050565b5f5f604083850312156110fb576110fa610d44565b5b5f61110885828601610f14565b925050602061111985828601610d67565b9150509250929050565b61112c81610f8b565b82525050565b5f60c0820190506111455f830189610e07565b6111526020830188610e07565b61115f6040830187610e07565b61116c6060830186610e07565b6111796080830185611123565b61118660a0830184610e07565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111c882610d48565b91506111d383610d48565b92508282026111e181610d48565b915082820484148315176111f8576111f7611191565b5b5092915050565b5f82825260208201905092915050565b7f416d6f756e742073686f756c6420626520706f736974697665000000000000005f82015250565b5f6112436019836111ff565b915061124e8261120f565b602082019050919050565b5f6020820190508181035f83015261127081611237565b9050919050565b5f8151905061128581610d51565b92915050565b5f602082840312156112a05761129f610d44565b5b5f6112ad84828501611277565b91505092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6112ea6014836111ff565b91506112f5826112b6565b602082019050919050565b5f6020820190508181035f830152611317816112de565b9050919050565b5f6060820190506113315f8301866110bd565b61133e60208301856110bd565b61134b6040830184610e07565b949350505050565b61135c81610f8b565b8114611366575f5ffd5b50565b5f8151905061137781611353565b92915050565b5f6020828403121561139257611391610d44565b5b5f61139f84828501611369565b91505092915050565b7f5374616b696e673a205472616e73666572206661696c656400000000000000005f82015250565b5f6113dc6018836111ff565b91506113e7826113a8565b602082019050919050565b5f6020820190508181035f830152611409816113d0565b9050919050565b5f61141a82610d48565b915061142583610d48565b925082820190508082111561143d5761143c611191565b5b92915050565b5f61144d82610d48565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361147f5761147e611191565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114ee82610d48565b91506114f983610d48565b925082611509576115086114b7565b5b828204905092915050565b600481106115255761152461148a565b5b50565b5f81905061153582611514565b919050565b5f61154482611528565b9050919050565b6115548161153a565b82525050565b5f60808201905061156d5f830187610e07565b61157a602083018661154b565b6115876040830185610e07565b6115946060830184610e07565b95945050505050565b7f596f7520617265206e6f7420746865206f776e6572206f6620746869732073745f8201527f616b650000000000000000000000000000000000000000000000000000000000602082015250565b5f6115f76023836111ff565b91506116028261159d565b604082019050919050565b5f6020820190508181035f830152611624816115eb565b9050919050565b7f5374616b65206973206e6f7420616374697665206f7220616c726561647920775f8201527f697468647261776e000000000000000000000000000000000000000000000000602082015250565b5f6116856028836111ff565b91506116908261162b565b604082019050919050565b5f6020820190508181035f8301526116b281611679565b9050919050565b7f5374616b6520706572696f64206973206e6f7420656e646564000000000000005f82015250565b5f6116ed6019836111ff565b91506116f8826116b9565b602082019050919050565b5f6020820190508181035f83015261171a816116e1565b9050919050565b5f6040820190506117345f830185610e07565b6117416020830184610e07565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea264697066735822122075371232a393c6800b7b59f89786fee6b966f60dbcae23b8d33b84098a0ff9e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A10 CODESIZE SUB DUP1 PUSH2 0x1A10 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D3 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x1 PUSH0 PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9A JUMPI PUSH2 0x99 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x1 PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC4 JUMPI PUSH2 0xC3 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x1 PUSH0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH2 0x111 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x19 PUSH1 0x1 PUSH0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14D JUMPI PUSH2 0x14C PUSH2 0x1FE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0x22B JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191 DUP3 PUSH2 0x168 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2 DUP3 PUSH2 0x187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B2 DUP2 PUSH2 0x198 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CD DUP2 PUSH2 0x1A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0x164 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17D8 DUP1 PUSH2 0x238 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762E54FC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x762E54FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA262AB35 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA57A5304 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xC4A9E116 EQ PUSH2 0x21B JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x10087FB1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x4C86259E EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x452 DUP4 PUSH2 0xBA8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4C4 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH0 PUSH2 0x168 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH1 0x1 PUSH0 DUP14 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x148A JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C DUP12 DUP12 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x57A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP CALLER PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6D7 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x92B SWAP3 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x948 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1748 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9D7 PUSH2 0xCFA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9CF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xB18 JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x1775 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB09 JUMPI DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xAEF JUMPI PUSH2 0xAEE PUSH2 0x1775 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0xB05 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9F6 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0xD2C JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3C DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC0D JUMPI PUSH2 0xC0C PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5A DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB4 DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC57 JUMPI PUSH2 0xC56 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE10 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5A DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xD64 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD75 DUP2 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xD87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD98 DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC1 DUP6 DUP3 DUP7 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD2 DUP6 DUP3 DUP7 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE10 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE29 PUSH0 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE51 DUP5 DUP3 DUP6 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9C PUSH2 0xE97 PUSH2 0xE92 DUP5 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAD DUP3 PUSH2 0xE82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBE DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE7 PUSH0 DUP4 ADD DUP5 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEF7 DUP3 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF07 DUP2 PUSH2 0xEED JUMP JUMPDEST DUP2 EQ PUSH2 0xF11 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF22 DUP2 PUSH2 0xEFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF4A DUP5 DUP3 DUP6 ADD PUSH2 0xF14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9F DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xFB9 PUSH0 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFCC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFDF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFF2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1005 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF96 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1018 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 DUP4 DUP4 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104B DUP3 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x1055 DUP2 DUP6 PUSH2 0xF5D JUMP JUMPDEST SWAP4 POP PUSH2 0x1060 DUP4 PUSH2 0xF6D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1090 JUMPI DUP2 MLOAD PUSH2 0x1077 DUP9 DUP3 PUSH2 0x101E JUMP JUMPDEST SWAP8 POP PUSH2 0x1082 DUP4 PUSH2 0x1035 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1063 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10B5 DUP2 DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C6 DUP2 PUSH2 0xEED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH0 DUP4 ADD DUP5 PUSH2 0x10BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1108 DUP6 DUP3 DUP7 ADD PUSH2 0xF14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1119 DUP6 DUP3 DUP7 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x112C DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1145 PUSH0 DUP4 ADD DUP10 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1152 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x115F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x116C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x1186 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11C8 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D3 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11E1 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C6420626520706F73697469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1243 PUSH1 0x19 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x124E DUP3 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1270 DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AD DUP5 DUP3 DUP6 ADD PUSH2 0x1277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12EA PUSH1 0x14 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x12F5 DUP3 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1317 DUP2 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1331 PUSH0 DUP4 ADD DUP7 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x133E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x134B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x135C DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP2 EQ PUSH2 0x1366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1377 DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139F DUP5 DUP3 DUP6 ADD PUSH2 0x1369 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A205472616E73666572206661696C65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC PUSH1 0x18 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x13E7 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1409 DUP2 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141A DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1425 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x1191 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144D DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14EE DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F9 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1509 JUMPI PUSH2 0x1508 PUSH2 0x14B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1525 JUMPI PUSH2 0x1524 PUSH2 0x148A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1535 DUP3 PUSH2 0x1514 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1544 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1554 DUP2 PUSH2 0x153A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP8 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x157A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F7 PUSH1 0x23 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206973206E6F7420616374697665206F7220616C72656164792077 PUSH0 DUP3 ADD MSTORE PUSH32 0x697468647261776E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 PUSH1 0x28 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1690 DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16B2 DUP2 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520706572696F64206973206E6F7420656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH1 0x19 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x16F8 DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x171A DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1741 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x371232A393C6800B7B59F89786FEE6B966F60DBCAE23 0xB8 0xD3 EXTCODESIZE DUP5 MULMOD DUP11 0xF EXTDELEGATECALL 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "168:5113:6:-:0;;;1472:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:9;1528:12;;:22;;;;;;;;;;;;;;;;;;1593:2;1561:3;:29;1565:24;1561:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1653:2;1621:3;:29;1625:24;1621:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1720:2;1681:3;:36;1685:31;1681:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;;1780:2;1751:3;:26;1755:21;1751:26;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;1472:336;168:5113;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:180::-;1450:77;1447:1;1440:88;1547:4;1544:1;1537:15;1571:4;1568:1;1561:15;168:5113:6;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getDuration_1250": {
									"entryPoint": 2984,
									"id": 1250,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@apy_968": {
									"entryPoint": 1768,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserActiveStakes_1414": {
									"entryPoint": 2450,
									"id": 1414,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nextStakeId_979": {
									"entryPoint": 2429,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeCount_988": {
									"entryPoint": 2978,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeList_986": {
									"entryPoint": 2361,
									"id": 986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeOwnerMapping_983": {
									"entryPoint": 2851,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1190": {
									"entryPoint": 569,
									"id": 1190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_963": {
									"entryPoint": 2393,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStakes_975": {
									"entryPoint": 2899,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1325": {
									"entryPoint": 1789,
									"id": 1325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_StakingPeriod_$960": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_StakingPeriod_$960": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$960": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_StakingPeriod_$960_to_t_uint8_fromStack": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$960_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5466,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_StakingPeriod_$960": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$877_to_t_address": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_StakingPeriod_$960_to_t_uint8": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_StakingPeriod_$960": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_StakingPeriod_$960": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21197:7",
										"nodeType": "YulBlock",
										"src": "0:21197:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "597:87:7",
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nativeSrc": "607:29:7",
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nativeSrc": "616:20:7",
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nativeSrc": "645:33:7",
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nativeSrc": "645:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:7",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:7",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:7",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nativeSrc": "750:56:7",
													"nodeType": "YulBlock",
													"src": "750:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "784:16:7",
																"nodeType": "YulBlock",
																"src": "784:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "793:1:7",
																					"nodeType": "YulLiteral",
																					"src": "793:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "796:1:7",
																					"nodeType": "YulLiteral",
																					"src": "796:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "786:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "786:6:7"
																			},
																			"nativeSrc": "786:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:7"
																		},
																		"nativeSrc": "786:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "786:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "773:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "780:1:7",
																				"nodeType": "YulLiteral",
																				"src": "780:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "770:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:7"
																		},
																		"nativeSrc": "770:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "770:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "763:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:7"
																},
																"nativeSrc": "763:20:7",
																"nodeType": "YulFunctionCall",
																"src": "763:20:7"
															},
															"nativeSrc": "760:40:7",
															"nodeType": "YulIf",
															"src": "760:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_StakingPeriod_$960",
												"nativeSrc": "690:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "743:5:7",
														"nodeType": "YulTypedName",
														"src": "743:5:7",
														"type": ""
													}
												],
												"src": "690:116:7"
											},
											{
												"body": {
													"nativeSrc": "881:104:7",
													"nodeType": "YulBlock",
													"src": "881:104:7",
													"statements": [
														{
															"nativeSrc": "891:29:7",
															"nodeType": "YulAssignment",
															"src": "891:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "913:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "913:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "900:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:12:7"
																},
																"nativeSrc": "900:20:7",
																"nodeType": "YulFunctionCall",
																"src": "900:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "891:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "891:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "973:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_StakingPeriod_$960",
																	"nativeSrc": "929:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "929:43:7"
																},
																"nativeSrc": "929:50:7",
																"nodeType": "YulFunctionCall",
																"src": "929:50:7"
															},
															"nativeSrc": "929:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "929:50:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_StakingPeriod_$960",
												"nativeSrc": "812:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "859:6:7",
														"nodeType": "YulTypedName",
														"src": "859:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "867:3:7",
														"nodeType": "YulTypedName",
														"src": "867:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "875:5:7",
														"nodeType": "YulTypedName",
														"src": "875:5:7",
														"type": ""
													}
												],
												"src": "812:173:7"
											},
											{
												"body": {
													"nativeSrc": "1091:408:7",
													"nodeType": "YulBlock",
													"src": "1091:408:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1137:83:7",
																"nodeType": "YulBlock",
																"src": "1137:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1139:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1139:77:7"
																			},
																			"nativeSrc": "1139:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1139:79:7"
																		},
																		"nativeSrc": "1139:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1112:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1112:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1121:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:7"
																		},
																		"nativeSrc": "1108:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1108:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1133:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1104:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:7"
																},
																"nativeSrc": "1104:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1104:32:7"
															},
															"nativeSrc": "1101:119:7",
															"nodeType": "YulIf",
															"src": "1101:119:7"
														},
														{
															"nativeSrc": "1230:117:7",
															"nodeType": "YulBlock",
															"src": "1230:117:7",
															"statements": [
																{
																	"nativeSrc": "1245:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1245:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1259:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1259:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1249:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1249:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1274:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1274:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1309:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1309:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1320:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1320:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1305:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1305:3:7"
																				},
																				"nativeSrc": "1305:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1305:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1329:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1329:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1284:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1284:20:7"
																		},
																		"nativeSrc": "1284:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1284:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1274:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1274:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1357:135:7",
															"nodeType": "YulBlock",
															"src": "1357:135:7",
															"statements": [
																{
																	"nativeSrc": "1372:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1372:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1386:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1376:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1376:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1402:80:7",
																	"nodeType": "YulAssignment",
																	"src": "1402:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1454:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1454:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1465:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1450:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:7"
																				},
																				"nativeSrc": "1450:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1474:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$960",
																			"nativeSrc": "1412:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "1412:37:7"
																		},
																		"nativeSrc": "1412:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1402:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1402:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$960",
												"nativeSrc": "991:508:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1053:9:7",
														"nodeType": "YulTypedName",
														"src": "1053:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1064:7:7",
														"nodeType": "YulTypedName",
														"src": "1064:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1076:6:7",
														"nodeType": "YulTypedName",
														"src": "1076:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1084:6:7",
														"nodeType": "YulTypedName",
														"src": "1084:6:7",
														"type": ""
													}
												],
												"src": "991:508:7"
											},
											{
												"body": {
													"nativeSrc": "1588:280:7",
													"nodeType": "YulBlock",
													"src": "1588:280:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1634:83:7",
																"nodeType": "YulBlock",
																"src": "1634:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1636:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1636:77:7"
																			},
																			"nativeSrc": "1636:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1636:79:7"
																		},
																		"nativeSrc": "1636:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1636:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1609:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1618:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1618:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1605:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:7"
																		},
																		"nativeSrc": "1605:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1630:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1630:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:7"
																},
																"nativeSrc": "1601:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1601:32:7"
															},
															"nativeSrc": "1598:119:7",
															"nodeType": "YulIf",
															"src": "1598:119:7"
														},
														{
															"nativeSrc": "1727:134:7",
															"nodeType": "YulBlock",
															"src": "1727:134:7",
															"statements": [
																{
																	"nativeSrc": "1742:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1742:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1756:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1756:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1746:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1746:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1771:80:7",
																	"nodeType": "YulAssignment",
																	"src": "1771:80:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:7"
																				},
																				"nativeSrc": "1819:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$960",
																			"nativeSrc": "1781:37:7",
																			"nodeType": "YulIdentifier",
																			"src": "1781:37:7"
																		},
																		"nativeSrc": "1781:70:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:70:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1771:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_StakingPeriod_$960",
												"nativeSrc": "1505:363:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1558:9:7",
														"nodeType": "YulTypedName",
														"src": "1558:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1569:7:7",
														"nodeType": "YulTypedName",
														"src": "1569:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1581:6:7",
														"nodeType": "YulTypedName",
														"src": "1581:6:7",
														"type": ""
													}
												],
												"src": "1505:363:7"
											},
											{
												"body": {
													"nativeSrc": "1939:53:7",
													"nodeType": "YulBlock",
													"src": "1939:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1961:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:7"
																		},
																		"nativeSrc": "1961:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:7"
																},
																"nativeSrc": "1949:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:7"
															},
															"nativeSrc": "1949:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1874:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:7",
														"nodeType": "YulTypedName",
														"src": "1927:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:7",
														"nodeType": "YulTypedName",
														"src": "1934:3:7",
														"type": ""
													}
												],
												"src": "1874:118:7"
											},
											{
												"body": {
													"nativeSrc": "2096:124:7",
													"nodeType": "YulBlock",
													"src": "2096:124:7",
													"statements": [
														{
															"nativeSrc": "2106:26:7",
															"nodeType": "YulAssignment",
															"src": "2106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:7"
																},
																"nativeSrc": "2114:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nativeSrc": "2195:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2142:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:7"
																},
																"nativeSrc": "2142:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:7"
															},
															"nativeSrc": "2142:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1998:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:7",
														"nodeType": "YulTypedName",
														"src": "2068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:7",
														"nodeType": "YulTypedName",
														"src": "2080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:7",
														"nodeType": "YulTypedName",
														"src": "2091:4:7",
														"type": ""
													}
												],
												"src": "1998:222:7"
											},
											{
												"body": {
													"nativeSrc": "2292:263:7",
													"nodeType": "YulBlock",
													"src": "2292:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:83:7",
																"nodeType": "YulBlock",
																"src": "2338:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2340:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:7"
																			},
																			"nativeSrc": "2340:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:7"
																		},
																		"nativeSrc": "2340:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2313:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:7"
																		},
																		"nativeSrc": "2309:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:7"
																},
																"nativeSrc": "2305:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2305:32:7"
															},
															"nativeSrc": "2302:119:7",
															"nodeType": "YulIf",
															"src": "2302:119:7"
														},
														{
															"nativeSrc": "2431:117:7",
															"nodeType": "YulBlock",
															"src": "2431:117:7",
															"statements": [
																{
																	"nativeSrc": "2446:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2460:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2450:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:7"
																				},
																				"nativeSrc": "2506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:7"
																		},
																		"nativeSrc": "2485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2226:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2262:9:7",
														"nodeType": "YulTypedName",
														"src": "2262:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2273:7:7",
														"nodeType": "YulTypedName",
														"src": "2273:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2285:6:7",
														"nodeType": "YulTypedName",
														"src": "2285:6:7",
														"type": ""
													}
												],
												"src": "2226:329:7"
											},
											{
												"body": {
													"nativeSrc": "2606:81:7",
													"nodeType": "YulBlock",
													"src": "2606:81:7",
													"statements": [
														{
															"nativeSrc": "2616:65:7",
															"nodeType": "YulAssignment",
															"src": "2616:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:7"
																},
																"nativeSrc": "2627:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:7",
														"nodeType": "YulTypedName",
														"src": "2588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:7",
														"nodeType": "YulTypedName",
														"src": "2598:7:7",
														"type": ""
													}
												],
												"src": "2561:126:7"
											},
											{
												"body": {
													"nativeSrc": "2725:28:7",
													"nodeType": "YulBlock",
													"src": "2725:28:7",
													"statements": [
														{
															"nativeSrc": "2735:12:7",
															"nodeType": "YulAssignment",
															"src": "2735:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2742:5:7",
																"nodeType": "YulIdentifier",
																"src": "2742:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2735:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2693:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2711:5:7",
														"nodeType": "YulTypedName",
														"src": "2711:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2721:3:7",
														"nodeType": "YulTypedName",
														"src": "2721:3:7",
														"type": ""
													}
												],
												"src": "2693:60:7"
											},
											{
												"body": {
													"nativeSrc": "2819:82:7",
													"nodeType": "YulBlock",
													"src": "2819:82:7",
													"statements": [
														{
															"nativeSrc": "2829:66:7",
															"nodeType": "YulAssignment",
															"src": "2829:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2887:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2887:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2869:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2869:17:7"
																				},
																				"nativeSrc": "2869:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2869:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2860:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2860:8:7"
																		},
																		"nativeSrc": "2860:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2842:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2842:17:7"
																},
																"nativeSrc": "2842:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2842:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2829:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2829:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2759:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2799:5:7",
														"nodeType": "YulTypedName",
														"src": "2799:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2809:9:7",
														"nodeType": "YulTypedName",
														"src": "2809:9:7",
														"type": ""
													}
												],
												"src": "2759:142:7"
											},
											{
												"body": {
													"nativeSrc": "2967:66:7",
													"nodeType": "YulBlock",
													"src": "2967:66:7",
													"statements": [
														{
															"nativeSrc": "2977:50:7",
															"nodeType": "YulAssignment",
															"src": "2977:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3021:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3021:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2990:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2990:30:7"
																},
																"nativeSrc": "2990:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2990:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2977:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2977:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2907:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:7",
														"nodeType": "YulTypedName",
														"src": "2947:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2957:9:7",
														"nodeType": "YulTypedName",
														"src": "2957:9:7",
														"type": ""
													}
												],
												"src": "2907:126:7"
											},
											{
												"body": {
													"nativeSrc": "3113:66:7",
													"nodeType": "YulBlock",
													"src": "3113:66:7",
													"statements": [
														{
															"nativeSrc": "3123:50:7",
															"nodeType": "YulAssignment",
															"src": "3123:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3167:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3136:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3136:30:7"
																},
																"nativeSrc": "3136:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3136:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3123:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3123:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$877_to_t_address",
												"nativeSrc": "3039:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:7",
														"nodeType": "YulTypedName",
														"src": "3093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3103:9:7",
														"nodeType": "YulTypedName",
														"src": "3103:9:7",
														"type": ""
													}
												],
												"src": "3039:140:7"
											},
											{
												"body": {
													"nativeSrc": "3264:80:7",
													"nodeType": "YulBlock",
													"src": "3264:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3281:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3281:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3331:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3331:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$877_to_t_address",
																			"nativeSrc": "3286:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3286:44:7"
																		},
																		"nativeSrc": "3286:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:7"
																},
																"nativeSrc": "3274:64:7",
																"nodeType": "YulFunctionCall",
																"src": "3274:64:7"
															},
															"nativeSrc": "3274:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "3274:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
												"nativeSrc": "3185:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3252:5:7",
														"nodeType": "YulTypedName",
														"src": "3252:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3259:3:7",
														"nodeType": "YulTypedName",
														"src": "3259:3:7",
														"type": ""
													}
												],
												"src": "3185:159:7"
											},
											{
												"body": {
													"nativeSrc": "3462:138:7",
													"nodeType": "YulBlock",
													"src": "3462:138:7",
													"statements": [
														{
															"nativeSrc": "3472:26:7",
															"nodeType": "YulAssignment",
															"src": "3472:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3484:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3495:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3480:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:7"
																},
																"nativeSrc": "3480:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3480:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3472:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3566:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3590:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:7"
																		},
																		"nativeSrc": "3575:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack",
																	"nativeSrc": "3508:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "3508:57:7"
																},
																"nativeSrc": "3508:85:7",
																"nodeType": "YulFunctionCall",
																"src": "3508:85:7"
															},
															"nativeSrc": "3508:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "3508:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed",
												"nativeSrc": "3350:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3434:9:7",
														"nodeType": "YulTypedName",
														"src": "3434:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3446:6:7",
														"nodeType": "YulTypedName",
														"src": "3446:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3457:4:7",
														"nodeType": "YulTypedName",
														"src": "3457:4:7",
														"type": ""
													}
												],
												"src": "3350:250:7"
											},
											{
												"body": {
													"nativeSrc": "3651:51:7",
													"nodeType": "YulBlock",
													"src": "3651:51:7",
													"statements": [
														{
															"nativeSrc": "3661:35:7",
															"nodeType": "YulAssignment",
															"src": "3661:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3690:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3672:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3672:17:7"
																},
																"nativeSrc": "3672:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3672:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3661:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3661:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3606:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3633:5:7",
														"nodeType": "YulTypedName",
														"src": "3633:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3643:7:7",
														"nodeType": "YulTypedName",
														"src": "3643:7:7",
														"type": ""
													}
												],
												"src": "3606:96:7"
											},
											{
												"body": {
													"nativeSrc": "3751:79:7",
													"nodeType": "YulBlock",
													"src": "3751:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3808:16:7",
																"nodeType": "YulBlock",
																"src": "3808:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3817:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3817:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3820:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3820:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3810:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3810:6:7"
																			},
																			"nativeSrc": "3810:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3810:12:7"
																		},
																		"nativeSrc": "3810:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3810:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3774:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3799:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3799:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3781:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3781:17:7"
																				},
																				"nativeSrc": "3781:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3771:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3771:2:7"
																		},
																		"nativeSrc": "3771:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3771:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nativeSrc": "3764:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3764:43:7"
															},
															"nativeSrc": "3761:63:7",
															"nodeType": "YulIf",
															"src": "3761:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3708:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													}
												],
												"src": "3708:122:7"
											},
											{
												"body": {
													"nativeSrc": "3888:87:7",
													"nodeType": "YulBlock",
													"src": "3888:87:7",
													"statements": [
														{
															"nativeSrc": "3898:29:7",
															"nodeType": "YulAssignment",
															"src": "3898:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3920:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3907:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3907:12:7"
																},
																"nativeSrc": "3907:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3907:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3898:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3898:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3963:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3963:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3936:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3936:26:7"
																},
																"nativeSrc": "3936:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3936:33:7"
															},
															"nativeSrc": "3936:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3936:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3836:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3866:6:7",
														"nodeType": "YulTypedName",
														"src": "3866:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3874:3:7",
														"nodeType": "YulTypedName",
														"src": "3874:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3882:5:7",
														"nodeType": "YulTypedName",
														"src": "3882:5:7",
														"type": ""
													}
												],
												"src": "3836:139:7"
											},
											{
												"body": {
													"nativeSrc": "4047:263:7",
													"nodeType": "YulBlock",
													"src": "4047:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4093:83:7",
																"nodeType": "YulBlock",
																"src": "4093:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4095:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4095:77:7"
																			},
																			"nativeSrc": "4095:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4095:79:7"
																		},
																		"nativeSrc": "4095:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4095:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4068:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4068:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4077:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4077:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4064:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4064:3:7"
																		},
																		"nativeSrc": "4064:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4064:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4089:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4089:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4060:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4060:3:7"
																},
																"nativeSrc": "4060:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4060:32:7"
															},
															"nativeSrc": "4057:119:7",
															"nodeType": "YulIf",
															"src": "4057:119:7"
														},
														{
															"nativeSrc": "4186:117:7",
															"nodeType": "YulBlock",
															"src": "4186:117:7",
															"statements": [
																{
																	"nativeSrc": "4201:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4201:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4215:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4215:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4205:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4205:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3981:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4017:9:7",
														"nodeType": "YulTypedName",
														"src": "4017:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4028:7:7",
														"nodeType": "YulTypedName",
														"src": "4028:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4040:6:7",
														"nodeType": "YulTypedName",
														"src": "4040:6:7",
														"type": ""
													}
												],
												"src": "3981:329:7"
											},
											{
												"body": {
													"nativeSrc": "4412:40:7",
													"nodeType": "YulBlock",
													"src": "4412:40:7",
													"statements": [
														{
															"nativeSrc": "4423:22:7",
															"nodeType": "YulAssignment",
															"src": "4423:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4439:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4439:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4433:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4433:5:7"
																},
																"nativeSrc": "4433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4433:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4423:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4316:136:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4395:5:7",
														"nodeType": "YulTypedName",
														"src": "4395:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4405:6:7",
														"nodeType": "YulTypedName",
														"src": "4405:6:7",
														"type": ""
													}
												],
												"src": "4316:136:7"
											},
											{
												"body": {
													"nativeSrc": "4591:73:7",
													"nodeType": "YulBlock",
													"src": "4591:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4613:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4613:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:7"
																},
																"nativeSrc": "4601:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4601:19:7"
															},
															"nativeSrc": "4601:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "4601:19:7"
														},
														{
															"nativeSrc": "4629:29:7",
															"nodeType": "YulAssignment",
															"src": "4629:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4648:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4648:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4644:3:7"
																},
																"nativeSrc": "4644:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4644:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4629:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "4629:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4458:206:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4563:3:7",
														"nodeType": "YulTypedName",
														"src": "4563:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4568:6:7",
														"nodeType": "YulTypedName",
														"src": "4568:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4579:11:7",
														"nodeType": "YulTypedName",
														"src": "4579:11:7",
														"type": ""
													}
												],
												"src": "4458:206:7"
											},
											{
												"body": {
													"nativeSrc": "4764:60:7",
													"nodeType": "YulBlock",
													"src": "4764:60:7",
													"statements": [
														{
															"nativeSrc": "4774:11:7",
															"nodeType": "YulAssignment",
															"src": "4774:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4782:3:7",
																"nodeType": "YulIdentifier",
																"src": "4782:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4774:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4774:4:7"
																}
															]
														},
														{
															"nativeSrc": "4795:22:7",
															"nodeType": "YulAssignment",
															"src": "4795:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4807:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4807:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4812:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4812:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4803:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4803:3:7"
																},
																"nativeSrc": "4803:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4803:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4795:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4795:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4670:154:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4751:3:7",
														"nodeType": "YulTypedName",
														"src": "4751:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4759:4:7",
														"nodeType": "YulTypedName",
														"src": "4759:4:7",
														"type": ""
													}
												],
												"src": "4670:154:7"
											},
											{
												"body": {
													"nativeSrc": "4885:53:7",
													"nodeType": "YulBlock",
													"src": "4885:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4902:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4902:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4925:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4925:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4907:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4907:17:7"
																		},
																		"nativeSrc": "4907:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4907:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4895:6:7"
																},
																"nativeSrc": "4895:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4895:37:7"
															},
															"nativeSrc": "4895:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4895:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4830:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4873:5:7",
														"nodeType": "YulTypedName",
														"src": "4873:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4880:3:7",
														"nodeType": "YulTypedName",
														"src": "4880:3:7",
														"type": ""
													}
												],
												"src": "4830:108:7"
											},
											{
												"body": {
													"nativeSrc": "4986:48:7",
													"nodeType": "YulBlock",
													"src": "4986:48:7",
													"statements": [
														{
															"nativeSrc": "4996:32:7",
															"nodeType": "YulAssignment",
															"src": "4996:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5021:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5021:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5014:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5014:6:7"
																		},
																		"nativeSrc": "5014:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5014:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:7"
																},
																"nativeSrc": "5007:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5007:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4996:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4996:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4944:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4968:5:7",
														"nodeType": "YulTypedName",
														"src": "4968:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4978:7:7",
														"nodeType": "YulTypedName",
														"src": "4978:7:7",
														"type": ""
													}
												],
												"src": "4944:90:7"
											},
											{
												"body": {
													"nativeSrc": "5089:50:7",
													"nodeType": "YulBlock",
													"src": "5089:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5106:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5106:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5126:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5126:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5111:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "5111:14:7"
																		},
																		"nativeSrc": "5111:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5111:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:7"
																},
																"nativeSrc": "5099:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5099:34:7"
															},
															"nativeSrc": "5099:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5099:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "5040:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5077:5:7",
														"nodeType": "YulTypedName",
														"src": "5077:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5084:3:7",
														"nodeType": "YulTypedName",
														"src": "5084:3:7",
														"type": ""
													}
												],
												"src": "5040:99:7"
											},
											{
												"body": {
													"nativeSrc": "5307:1107:7",
													"nodeType": "YulBlock",
													"src": "5307:1107:7",
													"statements": [
														{
															"nativeSrc": "5317:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5317:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5333:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5333:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5338:4:7",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:7"
																},
																"nativeSrc": "5329:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5329:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5321:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5321:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5353:166:7",
															"nodeType": "YulBlock",
															"src": "5353:166:7",
															"statements": [
																{
																	"nativeSrc": "5390:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5390:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5420:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5420:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5427:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5427:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5416:3:7"
																				},
																				"nativeSrc": "5416:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5416:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5410:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5410:5:7"
																		},
																		"nativeSrc": "5410:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5410:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5394:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5394:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5480:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "5480:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5498:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5498:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5503:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5503:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5494:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5494:3:7"
																				},
																				"nativeSrc": "5494:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5494:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5446:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "5446:33:7"
																		},
																		"nativeSrc": "5446:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5446:63:7"
																	},
																	"nativeSrc": "5446:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5446:63:7"
																}
															]
														},
														{
															"nativeSrc": "5529:169:7",
															"nodeType": "YulBlock",
															"src": "5529:169:7",
															"statements": [
																{
																	"nativeSrc": "5569:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5569:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5599:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5599:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5606:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5606:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5595:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5595:3:7"
																				},
																				"nativeSrc": "5595:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5595:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5589:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5589:5:7"
																		},
																		"nativeSrc": "5589:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5589:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5573:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5573:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5659:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "5659:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5677:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5677:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5682:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5682:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5673:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5673:3:7"
																				},
																				"nativeSrc": "5673:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5673:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5625:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "5625:33:7"
																		},
																		"nativeSrc": "5625:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5625:63:7"
																	},
																	"nativeSrc": "5625:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5625:63:7"
																}
															]
														},
														{
															"nativeSrc": "5708:167:7",
															"nodeType": "YulBlock",
															"src": "5708:167:7",
															"statements": [
																{
																	"nativeSrc": "5746:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5746:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5776:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5776:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5783:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5783:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5772:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5772:3:7"
																				},
																				"nativeSrc": "5772:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5772:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5766:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5766:5:7"
																		},
																		"nativeSrc": "5766:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5766:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5750:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5750:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5836:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "5836:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5854:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5854:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5859:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5859:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5850:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5850:3:7"
																				},
																				"nativeSrc": "5850:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5850:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5802:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "5802:33:7"
																		},
																		"nativeSrc": "5802:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5802:63:7"
																	},
																	"nativeSrc": "5802:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5802:63:7"
																}
															]
														},
														{
															"nativeSrc": "5885:170:7",
															"nodeType": "YulBlock",
															"src": "5885:170:7",
															"statements": [
																{
																	"nativeSrc": "5926:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5926:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5956:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5956:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5963:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5963:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5952:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5952:3:7"
																				},
																				"nativeSrc": "5952:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5952:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5946:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5946:5:7"
																		},
																		"nativeSrc": "5946:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5946:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5930:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5930:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6016:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "6016:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6034:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6034:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6039:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6039:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6030:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6030:3:7"
																				},
																				"nativeSrc": "6030:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6030:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5982:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "5982:33:7"
																		},
																		"nativeSrc": "5982:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5982:63:7"
																	},
																	"nativeSrc": "5982:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5982:63:7"
																}
															]
														},
														{
															"nativeSrc": "6065:162:7",
															"nodeType": "YulBlock",
															"src": "6065:162:7",
															"statements": [
																{
																	"nativeSrc": "6104:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6104:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6134:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6134:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6141:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6141:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6130:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6130:3:7"
																				},
																				"nativeSrc": "6130:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6130:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6124:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6124:5:7"
																		},
																		"nativeSrc": "6124:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6124:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6108:12:7",
																			"nodeType": "YulTypedName",
																			"src": "6108:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6188:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "6188:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6206:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6206:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6211:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6211:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6202:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6202:3:7"
																				},
																				"nativeSrc": "6202:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6202:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "6160:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6160:27:7"
																		},
																		"nativeSrc": "6160:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:57:7"
																	},
																	"nativeSrc": "6160:57:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "6160:57:7"
																}
															]
														},
														{
															"nativeSrc": "6237:170:7",
															"nodeType": "YulBlock",
															"src": "6237:170:7",
															"statements": [
																{
																	"nativeSrc": "6278:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6278:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6308:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6308:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6315:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6315:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6304:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6304:3:7"
																				},
																				"nativeSrc": "6304:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6304:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6298:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6298:5:7"
																		},
																		"nativeSrc": "6298:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6298:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6282:12:7",
																			"nodeType": "YulTypedName",
																			"src": "6282:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6368:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "6368:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6386:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6386:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6391:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6391:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6382:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6382:3:7"
																				},
																				"nativeSrc": "6382:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6382:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6334:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "6334:33:7"
																		},
																		"nativeSrc": "6334:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6334:63:7"
																	},
																	"nativeSrc": "6334:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "6334:63:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr",
												"nativeSrc": "5207:1207:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5294:5:7",
														"nodeType": "YulTypedName",
														"src": "5294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5301:3:7",
														"nodeType": "YulTypedName",
														"src": "5301:3:7",
														"type": ""
													}
												],
												"src": "5207:1207:7"
											},
											{
												"body": {
													"nativeSrc": "6544:143:7",
													"nodeType": "YulBlock",
													"src": "6544:143:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6632:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6640:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6640:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr",
																	"nativeSrc": "6554:77:7",
																	"nodeType": "YulIdentifier",
																	"src": "6554:77:7"
																},
																"nativeSrc": "6554:90:7",
																"nodeType": "YulFunctionCall",
																"src": "6554:90:7"
															},
															"nativeSrc": "6554:90:7",
															"nodeType": "YulExpressionStatement",
															"src": "6554:90:7"
														},
														{
															"nativeSrc": "6653:28:7",
															"nodeType": "YulAssignment",
															"src": "6653:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6671:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6671:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6676:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6676:4:7",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6667:3:7"
																},
																"nativeSrc": "6667:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6667:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6653:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "6653:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr",
												"nativeSrc": "6420:267:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6517:6:7",
														"nodeType": "YulTypedName",
														"src": "6517:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6525:3:7",
														"nodeType": "YulTypedName",
														"src": "6525:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6533:10:7",
														"nodeType": "YulTypedName",
														"src": "6533:10:7",
														"type": ""
													}
												],
												"src": "6420:267:7"
											},
											{
												"body": {
													"nativeSrc": "6790:38:7",
													"nodeType": "YulBlock",
													"src": "6790:38:7",
													"statements": [
														{
															"nativeSrc": "6800:22:7",
															"nodeType": "YulAssignment",
															"src": "6800:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6812:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6812:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6817:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6817:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6808:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6808:3:7"
																},
																"nativeSrc": "6808:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6808:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6800:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6800:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6693:135:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6777:3:7",
														"nodeType": "YulTypedName",
														"src": "6777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6785:4:7",
														"nodeType": "YulTypedName",
														"src": "6785:4:7",
														"type": ""
													}
												],
												"src": "6693:135:7"
											},
											{
												"body": {
													"nativeSrc": "7068:740:7",
													"nodeType": "YulBlock",
													"src": "7068:740:7",
													"statements": [
														{
															"nativeSrc": "7078:90:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7078:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7162:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7162:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7092:69:7",
																	"nodeType": "YulIdentifier",
																	"src": "7092:69:7"
																},
																"nativeSrc": "7092:76:7",
																"nodeType": "YulFunctionCall",
																"src": "7092:76:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7082:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7082:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7177:115:7",
															"nodeType": "YulAssignment",
															"src": "7177:115:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7280:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7280:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7285:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7285:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7184:95:7",
																	"nodeType": "YulIdentifier",
																	"src": "7184:95:7"
																},
																"nativeSrc": "7184:108:7",
																"nodeType": "YulFunctionCall",
																"src": "7184:108:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7177:3:7"
																}
															]
														},
														{
															"nativeSrc": "7301:93:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7301:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7388:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7388:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7316:71:7",
																	"nodeType": "YulIdentifier",
																	"src": "7316:71:7"
																},
																"nativeSrc": "7316:78:7",
																"nodeType": "YulFunctionCall",
																"src": "7316:78:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7305:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7305:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7403:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7403:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7417:7:7",
																"nodeType": "YulIdentifier",
																"src": "7417:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7407:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7407:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7493:290:7",
																"nodeType": "YulBlock",
																"src": "7493:290:7",
																"statements": [
																	{
																		"nativeSrc": "7507:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7507:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7534:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7534:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7528:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7528:5:7"
																			},
																			"nativeSrc": "7528:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7528:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7511:13:7",
																				"nodeType": "YulTypedName",
																				"src": "7511:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7554:114:7",
																		"nodeType": "YulAssignment",
																		"src": "7554:114:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7649:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "7649:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7664:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7664:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr",
																				"nativeSrc": "7561:87:7",
																				"nodeType": "YulIdentifier",
																				"src": "7561:87:7"
																			},
																			"nativeSrc": "7561:107:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7561:107:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7554:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7554:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7681:92:7",
																		"nodeType": "YulAssignment",
																		"src": "7681:92:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7766:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7766:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "7691:74:7",
																				"nodeType": "YulIdentifier",
																				"src": "7691:74:7"
																			},
																			"nativeSrc": "7691:82:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7691:82:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7681:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7681:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7455:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7455:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7458:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7458:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7452:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7452:2:7"
																},
																"nativeSrc": "7452:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7452:13:7"
															},
															"nativeSrc": "7433:350:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7466:18:7",
																"nodeType": "YulBlock",
																"src": "7466:18:7",
																"statements": [
																	{
																		"nativeSrc": "7468:14:7",
																		"nodeType": "YulAssignment",
																		"src": "7468:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7477:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "7477:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7480:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7480:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7473:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7473:3:7"
																			},
																			"nativeSrc": "7473:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7473:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7468:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7468:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7437:14:7",
																"nodeType": "YulBlock",
																"src": "7437:14:7",
																"statements": [
																	{
																		"nativeSrc": "7439:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7439:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7448:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7448:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7443:1:7",
																				"nodeType": "YulTypedName",
																				"src": "7443:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7433:350:7"
														},
														{
															"nativeSrc": "7792:10:7",
															"nodeType": "YulAssignment",
															"src": "7792:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "7799:3:7",
																"nodeType": "YulIdentifier",
																"src": "7799:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7792:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6900:908:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7047:5:7",
														"nodeType": "YulTypedName",
														"src": "7047:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7054:3:7",
														"nodeType": "YulTypedName",
														"src": "7054:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7063:3:7",
														"nodeType": "YulTypedName",
														"src": "7063:3:7",
														"type": ""
													}
												],
												"src": "6900:908:7"
											},
											{
												"body": {
													"nativeSrc": "8006:269:7",
													"nodeType": "YulBlock",
													"src": "8006:269:7",
													"statements": [
														{
															"nativeSrc": "8016:26:7",
															"nodeType": "YulAssignment",
															"src": "8016:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8028:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8028:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8039:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8024:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:7"
																},
																"nativeSrc": "8024:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8024:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8016:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8016:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8074:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8074:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8059:3:7"
																		},
																		"nativeSrc": "8059:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8059:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8082:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8082:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8088:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8088:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8078:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8078:3:7"
																		},
																		"nativeSrc": "8078:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8078:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8052:6:7"
																},
																"nativeSrc": "8052:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8052:47:7"
															},
															"nativeSrc": "8052:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8052:47:7"
														},
														{
															"nativeSrc": "8108:160:7",
															"nodeType": "YulAssignment",
															"src": "8108:160:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8254:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8254:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8263:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8263:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8116:137:7",
																	"nodeType": "YulIdentifier",
																	"src": "8116:137:7"
																},
																"nativeSrc": "8116:152:7",
																"nodeType": "YulFunctionCall",
																"src": "8116:152:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8108:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8108:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7814:461:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7978:9:7",
														"nodeType": "YulTypedName",
														"src": "7978:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7990:6:7",
														"nodeType": "YulTypedName",
														"src": "7990:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8001:4:7",
														"nodeType": "YulTypedName",
														"src": "8001:4:7",
														"type": ""
													}
												],
												"src": "7814:461:7"
											},
											{
												"body": {
													"nativeSrc": "8346:53:7",
													"nodeType": "YulBlock",
													"src": "8346:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8363:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8386:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8386:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8368:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8368:17:7"
																		},
																		"nativeSrc": "8368:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8368:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8356:6:7"
																},
																"nativeSrc": "8356:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8356:37:7"
															},
															"nativeSrc": "8356:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8356:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8281:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8334:5:7",
														"nodeType": "YulTypedName",
														"src": "8334:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8341:3:7",
														"nodeType": "YulTypedName",
														"src": "8341:3:7",
														"type": ""
													}
												],
												"src": "8281:118:7"
											},
											{
												"body": {
													"nativeSrc": "8503:124:7",
													"nodeType": "YulBlock",
													"src": "8503:124:7",
													"statements": [
														{
															"nativeSrc": "8513:26:7",
															"nodeType": "YulAssignment",
															"src": "8513:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:7"
																},
																"nativeSrc": "8521:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8521:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8513:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8513:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8593:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8593:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8606:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8617:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8617:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8602:3:7"
																		},
																		"nativeSrc": "8602:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8549:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8549:43:7"
																},
																"nativeSrc": "8549:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8549:71:7"
															},
															"nativeSrc": "8549:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8549:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8405:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8475:9:7",
														"nodeType": "YulTypedName",
														"src": "8475:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8487:6:7",
														"nodeType": "YulTypedName",
														"src": "8487:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8498:4:7",
														"nodeType": "YulTypedName",
														"src": "8498:4:7",
														"type": ""
													}
												],
												"src": "8405:222:7"
											},
											{
												"body": {
													"nativeSrc": "8716:391:7",
													"nodeType": "YulBlock",
													"src": "8716:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8762:83:7",
																"nodeType": "YulBlock",
																"src": "8762:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8764:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8764:77:7"
																			},
																			"nativeSrc": "8764:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8764:79:7"
																		},
																		"nativeSrc": "8764:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8764:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8737:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8737:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8746:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8733:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:7"
																		},
																		"nativeSrc": "8733:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8733:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8758:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8758:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:7"
																},
																"nativeSrc": "8729:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8729:32:7"
															},
															"nativeSrc": "8726:119:7",
															"nodeType": "YulIf",
															"src": "8726:119:7"
														},
														{
															"nativeSrc": "8855:117:7",
															"nodeType": "YulBlock",
															"src": "8855:117:7",
															"statements": [
																{
																	"nativeSrc": "8870:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8870:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8884:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8884:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8874:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8874:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8899:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8899:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8934:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8934:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8945:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8945:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8930:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8930:3:7"
																				},
																				"nativeSrc": "8930:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8930:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8954:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8954:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8909:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8909:20:7"
																		},
																		"nativeSrc": "8909:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8909:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8899:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8899:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8982:118:7",
															"nodeType": "YulBlock",
															"src": "8982:118:7",
															"statements": [
																{
																	"nativeSrc": "8997:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8997:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9001:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9001:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9027:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9027:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9062:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9062:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9073:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9073:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9058:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9058:3:7"
																				},
																				"nativeSrc": "9058:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9058:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9082:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9082:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9037:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9037:20:7"
																		},
																		"nativeSrc": "9037:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9027:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9027:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "8633:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8678:9:7",
														"nodeType": "YulTypedName",
														"src": "8678:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8689:7:7",
														"nodeType": "YulTypedName",
														"src": "8689:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8701:6:7",
														"nodeType": "YulTypedName",
														"src": "8701:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8709:6:7",
														"nodeType": "YulTypedName",
														"src": "8709:6:7",
														"type": ""
													}
												],
												"src": "8633:474:7"
											},
											{
												"body": {
													"nativeSrc": "9172:50:7",
													"nodeType": "YulBlock",
													"src": "9172:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9189:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9189:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9209:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9209:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "9194:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "9194:14:7"
																		},
																		"nativeSrc": "9194:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9194:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9182:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9182:6:7"
																},
																"nativeSrc": "9182:34:7",
																"nodeType": "YulFunctionCall",
																"src": "9182:34:7"
															},
															"nativeSrc": "9182:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "9182:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "9113:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9160:5:7",
														"nodeType": "YulTypedName",
														"src": "9160:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9167:3:7",
														"nodeType": "YulTypedName",
														"src": "9167:3:7",
														"type": ""
													}
												],
												"src": "9113:109:7"
											},
											{
												"body": {
													"nativeSrc": "9460:531:7",
													"nodeType": "YulBlock",
													"src": "9460:531:7",
													"statements": [
														{
															"nativeSrc": "9470:27:7",
															"nodeType": "YulAssignment",
															"src": "9470:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9482:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9482:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9493:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9493:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9478:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9478:3:7"
																},
																"nativeSrc": "9478:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9478:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9470:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9470:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9551:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9551:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9564:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9564:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9575:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9575:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9560:3:7"
																		},
																		"nativeSrc": "9560:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9560:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9507:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9507:43:7"
																},
																"nativeSrc": "9507:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9507:71:7"
															},
															"nativeSrc": "9507:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9507:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9632:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9645:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9645:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9656:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9656:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9641:3:7"
																		},
																		"nativeSrc": "9641:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9641:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9588:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9588:43:7"
																},
																"nativeSrc": "9588:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9588:72:7"
															},
															"nativeSrc": "9588:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9588:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9714:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9714:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9738:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9738:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9723:3:7"
																		},
																		"nativeSrc": "9723:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9723:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9670:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9670:43:7"
																},
																"nativeSrc": "9670:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9670:72:7"
															},
															"nativeSrc": "9670:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9670:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9796:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9796:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9809:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9809:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9820:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9820:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9805:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:7"
																		},
																		"nativeSrc": "9805:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9752:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9752:43:7"
																},
																"nativeSrc": "9752:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9752:72:7"
															},
															"nativeSrc": "9752:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9752:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9872:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9885:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9885:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9896:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9896:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9881:3:7"
																		},
																		"nativeSrc": "9881:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9881:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9834:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "9834:37:7"
																},
																"nativeSrc": "9834:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9834:67:7"
															},
															"nativeSrc": "9834:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "9834:67:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "9955:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9955:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9968:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9968:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9979:3:7",
																				"nodeType": "YulLiteral",
																				"src": "9979:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9964:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9964:3:7"
																		},
																		"nativeSrc": "9964:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9964:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9911:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9911:43:7"
																},
																"nativeSrc": "9911:73:7",
																"nodeType": "YulFunctionCall",
																"src": "9911:73:7"
															},
															"nativeSrc": "9911:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "9911:73:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "9228:763:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9392:9:7",
														"nodeType": "YulTypedName",
														"src": "9392:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9404:6:7",
														"nodeType": "YulTypedName",
														"src": "9404:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9412:6:7",
														"nodeType": "YulTypedName",
														"src": "9412:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9420:6:7",
														"nodeType": "YulTypedName",
														"src": "9420:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9428:6:7",
														"nodeType": "YulTypedName",
														"src": "9428:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9436:6:7",
														"nodeType": "YulTypedName",
														"src": "9436:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9444:6:7",
														"nodeType": "YulTypedName",
														"src": "9444:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9455:4:7",
														"nodeType": "YulTypedName",
														"src": "9455:4:7",
														"type": ""
													}
												],
												"src": "9228:763:7"
											},
											{
												"body": {
													"nativeSrc": "10025:152:7",
													"nodeType": "YulBlock",
													"src": "10025:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10042:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10042:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10045:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10045:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10035:6:7"
																},
																"nativeSrc": "10035:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10035:88:7"
															},
															"nativeSrc": "10035:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10035:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10139:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10142:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10142:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10132:6:7"
																},
																"nativeSrc": "10132:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10132:15:7"
															},
															"nativeSrc": "10132:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10132:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10163:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10163:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10166:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10166:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:7"
																},
																"nativeSrc": "10156:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10156:15:7"
															},
															"nativeSrc": "10156:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10156:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9997:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9997:180:7"
											},
											{
												"body": {
													"nativeSrc": "10231:362:7",
													"nodeType": "YulBlock",
													"src": "10231:362:7",
													"statements": [
														{
															"nativeSrc": "10241:25:7",
															"nodeType": "YulAssignment",
															"src": "10241:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10264:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10264:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10246:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10246:17:7"
																},
																"nativeSrc": "10246:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10246:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10241:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10241:1:7"
																}
															]
														},
														{
															"nativeSrc": "10275:25:7",
															"nodeType": "YulAssignment",
															"src": "10275:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10298:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10298:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10280:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10280:17:7"
																},
																"nativeSrc": "10280:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10280:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10275:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10275:1:7"
																}
															]
														},
														{
															"nativeSrc": "10309:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10309:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10332:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10332:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10335:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10335:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:7"
																},
																"nativeSrc": "10328:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10328:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10313:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10313:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10346:41:7",
															"nodeType": "YulAssignment",
															"src": "10346:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10375:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10375:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10357:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10357:17:7"
																},
																"nativeSrc": "10357:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10357:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10346:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10346:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10564:22:7",
																"nodeType": "YulBlock",
																"src": "10564:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10566:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10566:16:7"
																			},
																			"nativeSrc": "10566:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10566:18:7"
																		},
																		"nativeSrc": "10566:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10566:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10497:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10497:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10490:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10490:6:7"
																				},
																				"nativeSrc": "10490:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10490:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10520:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10520:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10527:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10527:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10536:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10536:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10523:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10523:3:7"
																						},
																						"nativeSrc": "10523:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10523:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10517:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10517:2:7"
																				},
																				"nativeSrc": "10517:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10517:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10470:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10470:2:7"
																		},
																		"nativeSrc": "10470:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10470:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10450:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10450:6:7"
																},
																"nativeSrc": "10450:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10450:113:7"
															},
															"nativeSrc": "10447:139:7",
															"nodeType": "YulIf",
															"src": "10447:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10183:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10214:1:7",
														"nodeType": "YulTypedName",
														"src": "10214:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10217:1:7",
														"nodeType": "YulTypedName",
														"src": "10217:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10223:7:7",
														"nodeType": "YulTypedName",
														"src": "10223:7:7",
														"type": ""
													}
												],
												"src": "10183:410:7"
											},
											{
												"body": {
													"nativeSrc": "10695:73:7",
													"nodeType": "YulBlock",
													"src": "10695:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10717:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:7"
																},
																"nativeSrc": "10705:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10705:19:7"
															},
															"nativeSrc": "10705:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "10705:19:7"
														},
														{
															"nativeSrc": "10733:29:7",
															"nodeType": "YulAssignment",
															"src": "10733:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10752:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10752:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10757:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10757:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10748:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10748:3:7"
																},
																"nativeSrc": "10748:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10748:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10733:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "10733:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10599:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10667:3:7",
														"nodeType": "YulTypedName",
														"src": "10667:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10672:6:7",
														"nodeType": "YulTypedName",
														"src": "10672:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10683:11:7",
														"nodeType": "YulTypedName",
														"src": "10683:11:7",
														"type": ""
													}
												],
												"src": "10599:169:7"
											},
											{
												"body": {
													"nativeSrc": "10880:69:7",
													"nodeType": "YulBlock",
													"src": "10880:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10902:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10902:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10910:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10898:3:7"
																		},
																		"nativeSrc": "10898:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10898:14:7"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c6420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "10914:27:7",
																		"nodeType": "YulLiteral",
																		"src": "10914:27:7",
																		"type": "",
																		"value": "Amount should be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10891:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10891:6:7"
																},
																"nativeSrc": "10891:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10891:51:7"
															},
															"nativeSrc": "10891:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10891:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
												"nativeSrc": "10774:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10872:6:7",
														"nodeType": "YulTypedName",
														"src": "10872:6:7",
														"type": ""
													}
												],
												"src": "10774:175:7"
											},
											{
												"body": {
													"nativeSrc": "11101:220:7",
													"nodeType": "YulBlock",
													"src": "11101:220:7",
													"statements": [
														{
															"nativeSrc": "11111:74:7",
															"nodeType": "YulAssignment",
															"src": "11111:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11177:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11177:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11182:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11118:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11118:58:7"
																},
																"nativeSrc": "11118:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11118:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11283:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																	"nativeSrc": "11194:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11194:88:7"
																},
																"nativeSrc": "11194:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11194:93:7"
															},
															"nativeSrc": "11194:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11194:93:7"
														},
														{
															"nativeSrc": "11296:19:7",
															"nodeType": "YulAssignment",
															"src": "11296:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11307:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11307:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11312:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11303:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11303:3:7"
																},
																"nativeSrc": "11303:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11303:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11296:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10955:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11089:3:7",
														"nodeType": "YulTypedName",
														"src": "11089:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11097:3:7",
														"nodeType": "YulTypedName",
														"src": "11097:3:7",
														"type": ""
													}
												],
												"src": "10955:366:7"
											},
											{
												"body": {
													"nativeSrc": "11498:248:7",
													"nodeType": "YulBlock",
													"src": "11498:248:7",
													"statements": [
														{
															"nativeSrc": "11508:26:7",
															"nodeType": "YulAssignment",
															"src": "11508:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11520:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11520:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11531:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11531:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11516:3:7"
																},
																"nativeSrc": "11516:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11516:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11508:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11508:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11566:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11566:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11551:3:7"
																		},
																		"nativeSrc": "11551:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11551:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11574:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11574:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11580:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11580:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11570:3:7"
																		},
																		"nativeSrc": "11570:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11570:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11544:6:7"
																},
																"nativeSrc": "11544:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11544:47:7"
															},
															"nativeSrc": "11544:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11544:47:7"
														},
														{
															"nativeSrc": "11600:139:7",
															"nodeType": "YulAssignment",
															"src": "11600:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11734:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11734:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11608:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11608:124:7"
																},
																"nativeSrc": "11608:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11608:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11600:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11600:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11327:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11478:9:7",
														"nodeType": "YulTypedName",
														"src": "11478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11493:4:7",
														"nodeType": "YulTypedName",
														"src": "11493:4:7",
														"type": ""
													}
												],
												"src": "11327:419:7"
											},
											{
												"body": {
													"nativeSrc": "11815:80:7",
													"nodeType": "YulBlock",
													"src": "11815:80:7",
													"statements": [
														{
															"nativeSrc": "11825:22:7",
															"nodeType": "YulAssignment",
															"src": "11825:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11840:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11840:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11834:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11834:5:7"
																},
																"nativeSrc": "11834:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11834:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11825:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11825:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11883:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11883:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11856:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "11856:26:7"
																},
																"nativeSrc": "11856:33:7",
																"nodeType": "YulFunctionCall",
																"src": "11856:33:7"
															},
															"nativeSrc": "11856:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "11856:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11752:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11793:6:7",
														"nodeType": "YulTypedName",
														"src": "11793:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11801:3:7",
														"nodeType": "YulTypedName",
														"src": "11801:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11809:5:7",
														"nodeType": "YulTypedName",
														"src": "11809:5:7",
														"type": ""
													}
												],
												"src": "11752:143:7"
											},
											{
												"body": {
													"nativeSrc": "11978:274:7",
													"nodeType": "YulBlock",
													"src": "11978:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12024:83:7",
																"nodeType": "YulBlock",
																"src": "12024:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12026:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12026:77:7"
																			},
																			"nativeSrc": "12026:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12026:79:7"
																		},
																		"nativeSrc": "12026:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12026:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11999:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11999:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12008:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12008:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:7"
																		},
																		"nativeSrc": "11995:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11995:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12020:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12020:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11991:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:7"
																},
																"nativeSrc": "11991:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11991:32:7"
															},
															"nativeSrc": "11988:119:7",
															"nodeType": "YulIf",
															"src": "11988:119:7"
														},
														{
															"nativeSrc": "12117:128:7",
															"nodeType": "YulBlock",
															"src": "12117:128:7",
															"statements": [
																{
																	"nativeSrc": "12132:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12132:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12146:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12146:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12161:74:7",
																	"nodeType": "YulAssignment",
																	"src": "12161:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12207:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12207:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12218:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12218:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12203:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12203:3:7"
																				},
																				"nativeSrc": "12203:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12203:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12227:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12227:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12171:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "12171:31:7"
																		},
																		"nativeSrc": "12171:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12171:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12161:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11901:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11948:9:7",
														"nodeType": "YulTypedName",
														"src": "11948:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11959:7:7",
														"nodeType": "YulTypedName",
														"src": "11959:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11971:6:7",
														"nodeType": "YulTypedName",
														"src": "11971:6:7",
														"type": ""
													}
												],
												"src": "11901:351:7"
											},
											{
												"body": {
													"nativeSrc": "12364:64:7",
													"nodeType": "YulBlock",
													"src": "12364:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12386:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12386:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12394:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12394:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12382:3:7"
																		},
																		"nativeSrc": "12382:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12382:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12398:22:7",
																		"nodeType": "YulLiteral",
																		"src": "12398:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12375:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12375:6:7"
																},
																"nativeSrc": "12375:46:7",
																"nodeType": "YulFunctionCall",
																"src": "12375:46:7"
															},
															"nativeSrc": "12375:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "12375:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "12258:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12356:6:7",
														"nodeType": "YulTypedName",
														"src": "12356:6:7",
														"type": ""
													}
												],
												"src": "12258:170:7"
											},
											{
												"body": {
													"nativeSrc": "12580:220:7",
													"nodeType": "YulBlock",
													"src": "12580:220:7",
													"statements": [
														{
															"nativeSrc": "12590:74:7",
															"nodeType": "YulAssignment",
															"src": "12590:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12656:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12656:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12661:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12597:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12597:58:7"
																},
																"nativeSrc": "12597:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12597:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12590:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12590:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12762:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12762:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "12673:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12673:88:7"
																},
																"nativeSrc": "12673:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12673:93:7"
															},
															"nativeSrc": "12673:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12673:93:7"
														},
														{
															"nativeSrc": "12775:19:7",
															"nodeType": "YulAssignment",
															"src": "12775:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12786:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12786:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12791:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12791:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12782:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12782:3:7"
																},
																"nativeSrc": "12782:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12782:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12775:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12434:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12568:3:7",
														"nodeType": "YulTypedName",
														"src": "12568:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12576:3:7",
														"nodeType": "YulTypedName",
														"src": "12576:3:7",
														"type": ""
													}
												],
												"src": "12434:366:7"
											},
											{
												"body": {
													"nativeSrc": "12977:248:7",
													"nodeType": "YulBlock",
													"src": "12977:248:7",
													"statements": [
														{
															"nativeSrc": "12987:26:7",
															"nodeType": "YulAssignment",
															"src": "12987:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12999:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12999:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13010:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13010:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12995:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12995:3:7"
																},
																"nativeSrc": "12995:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12995:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12987:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12987:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13034:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13034:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13045:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13045:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13030:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:7"
																		},
																		"nativeSrc": "13030:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13030:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13053:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13053:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13059:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13059:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13049:3:7"
																		},
																		"nativeSrc": "13049:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13049:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13023:6:7"
																},
																"nativeSrc": "13023:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13023:47:7"
															},
															"nativeSrc": "13023:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13023:47:7"
														},
														{
															"nativeSrc": "13079:139:7",
															"nodeType": "YulAssignment",
															"src": "13079:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13213:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13213:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13087:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13087:124:7"
																},
																"nativeSrc": "13087:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13087:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13079:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13079:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12806:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12957:9:7",
														"nodeType": "YulTypedName",
														"src": "12957:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12972:4:7",
														"nodeType": "YulTypedName",
														"src": "12972:4:7",
														"type": ""
													}
												],
												"src": "12806:419:7"
											},
											{
												"body": {
													"nativeSrc": "13385:288:7",
													"nodeType": "YulBlock",
													"src": "13385:288:7",
													"statements": [
														{
															"nativeSrc": "13395:26:7",
															"nodeType": "YulAssignment",
															"src": "13395:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13418:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13403:3:7"
																},
																"nativeSrc": "13403:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13403:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13395:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13475:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13475:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13488:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13488:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13499:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13499:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13484:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13484:3:7"
																		},
																		"nativeSrc": "13484:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13484:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13431:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13431:43:7"
																},
																"nativeSrc": "13431:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13431:71:7"
															},
															"nativeSrc": "13431:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13431:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13556:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13556:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13569:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13580:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13580:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13565:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13565:3:7"
																		},
																		"nativeSrc": "13565:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13565:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13512:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13512:43:7"
																},
																"nativeSrc": "13512:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13512:72:7"
															},
															"nativeSrc": "13512:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13512:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13638:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13638:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13651:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13651:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13662:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13662:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:7"
																		},
																		"nativeSrc": "13647:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13647:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13594:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13594:43:7"
																},
																"nativeSrc": "13594:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13594:72:7"
															},
															"nativeSrc": "13594:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13594:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13231:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13341:9:7",
														"nodeType": "YulTypedName",
														"src": "13341:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13353:6:7",
														"nodeType": "YulTypedName",
														"src": "13353:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13361:6:7",
														"nodeType": "YulTypedName",
														"src": "13361:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13369:6:7",
														"nodeType": "YulTypedName",
														"src": "13369:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13380:4:7",
														"nodeType": "YulTypedName",
														"src": "13380:4:7",
														"type": ""
													}
												],
												"src": "13231:442:7"
											},
											{
												"body": {
													"nativeSrc": "13719:76:7",
													"nodeType": "YulBlock",
													"src": "13719:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "13773:16:7",
																"nodeType": "YulBlock",
																"src": "13773:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13782:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13785:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13785:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13775:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13775:6:7"
																			},
																			"nativeSrc": "13775:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13775:12:7"
																		},
																		"nativeSrc": "13775:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13775:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13742:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13742:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13764:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "13764:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13749:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "13749:14:7"
																				},
																				"nativeSrc": "13749:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13749:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13739:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13739:2:7"
																		},
																		"nativeSrc": "13739:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13739:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13732:6:7"
																},
																"nativeSrc": "13732:40:7",
																"nodeType": "YulFunctionCall",
																"src": "13732:40:7"
															},
															"nativeSrc": "13729:60:7",
															"nodeType": "YulIf",
															"src": "13729:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13679:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13712:5:7",
														"nodeType": "YulTypedName",
														"src": "13712:5:7",
														"type": ""
													}
												],
												"src": "13679:116:7"
											},
											{
												"body": {
													"nativeSrc": "13861:77:7",
													"nodeType": "YulBlock",
													"src": "13861:77:7",
													"statements": [
														{
															"nativeSrc": "13871:22:7",
															"nodeType": "YulAssignment",
															"src": "13871:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13886:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13886:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13880:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13880:5:7"
																},
																"nativeSrc": "13880:13:7",
																"nodeType": "YulFunctionCall",
																"src": "13880:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13871:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13871:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13926:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13926:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13902:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "13902:23:7"
																},
																"nativeSrc": "13902:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13902:30:7"
															},
															"nativeSrc": "13902:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13902:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13801:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13839:6:7",
														"nodeType": "YulTypedName",
														"src": "13839:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13847:3:7",
														"nodeType": "YulTypedName",
														"src": "13847:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13855:5:7",
														"nodeType": "YulTypedName",
														"src": "13855:5:7",
														"type": ""
													}
												],
												"src": "13801:137:7"
											},
											{
												"body": {
													"nativeSrc": "14018:271:7",
													"nodeType": "YulBlock",
													"src": "14018:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14064:83:7",
																"nodeType": "YulBlock",
																"src": "14064:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14066:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "14066:77:7"
																			},
																			"nativeSrc": "14066:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14066:79:7"
																		},
																		"nativeSrc": "14066:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14066:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14039:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14039:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14048:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14048:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14035:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14035:3:7"
																		},
																		"nativeSrc": "14035:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14035:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14060:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14060:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14031:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:7"
																},
																"nativeSrc": "14031:32:7",
																"nodeType": "YulFunctionCall",
																"src": "14031:32:7"
															},
															"nativeSrc": "14028:119:7",
															"nodeType": "YulIf",
															"src": "14028:119:7"
														},
														{
															"nativeSrc": "14157:125:7",
															"nodeType": "YulBlock",
															"src": "14157:125:7",
															"statements": [
																{
																	"nativeSrc": "14172:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14172:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14186:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14176:6:7",
																			"nodeType": "YulTypedName",
																			"src": "14176:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14201:71:7",
																	"nodeType": "YulAssignment",
																	"src": "14201:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "14244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "14255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "14240:3:7"
																				},
																				"nativeSrc": "14240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "14264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14211:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "14211:28:7"
																		},
																		"nativeSrc": "14211:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14211:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14201:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "14201:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13944:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13988:9:7",
														"nodeType": "YulTypedName",
														"src": "13988:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13999:7:7",
														"nodeType": "YulTypedName",
														"src": "13999:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14011:6:7",
														"nodeType": "YulTypedName",
														"src": "14011:6:7",
														"type": ""
													}
												],
												"src": "13944:345:7"
											},
											{
												"body": {
													"nativeSrc": "14401:68:7",
													"nodeType": "YulBlock",
													"src": "14401:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14423:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14423:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14431:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14431:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14419:3:7"
																		},
																		"nativeSrc": "14419:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14419:14:7"
																	},
																	{
																		"hexValue": "5374616b696e673a205472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14435:26:7",
																		"nodeType": "YulLiteral",
																		"src": "14435:26:7",
																		"type": "",
																		"value": "Staking: Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14412:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14412:6:7"
																},
																"nativeSrc": "14412:50:7",
																"nodeType": "YulFunctionCall",
																"src": "14412:50:7"
															},
															"nativeSrc": "14412:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "14412:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e",
												"nativeSrc": "14295:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14393:6:7",
														"nodeType": "YulTypedName",
														"src": "14393:6:7",
														"type": ""
													}
												],
												"src": "14295:174:7"
											},
											{
												"body": {
													"nativeSrc": "14621:220:7",
													"nodeType": "YulBlock",
													"src": "14621:220:7",
													"statements": [
														{
															"nativeSrc": "14631:74:7",
															"nodeType": "YulAssignment",
															"src": "14631:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14697:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14697:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14702:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14702:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14638:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14638:58:7"
																},
																"nativeSrc": "14638:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14638:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14631:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14631:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14803:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14803:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e",
																	"nativeSrc": "14714:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14714:88:7"
																},
																"nativeSrc": "14714:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14714:93:7"
															},
															"nativeSrc": "14714:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14714:93:7"
														},
														{
															"nativeSrc": "14816:19:7",
															"nodeType": "YulAssignment",
															"src": "14816:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14827:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14827:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14832:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14823:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14823:3:7"
																},
																"nativeSrc": "14823:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14823:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14816:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14816:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14475:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14609:3:7",
														"nodeType": "YulTypedName",
														"src": "14609:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14617:3:7",
														"nodeType": "YulTypedName",
														"src": "14617:3:7",
														"type": ""
													}
												],
												"src": "14475:366:7"
											},
											{
												"body": {
													"nativeSrc": "15018:248:7",
													"nodeType": "YulBlock",
													"src": "15018:248:7",
													"statements": [
														{
															"nativeSrc": "15028:26:7",
															"nodeType": "YulAssignment",
															"src": "15028:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15040:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15040:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15051:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15051:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15036:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15036:3:7"
																},
																"nativeSrc": "15036:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15036:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15028:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15028:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15075:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15075:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15086:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15086:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15071:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15071:3:7"
																		},
																		"nativeSrc": "15071:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15071:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15094:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15094:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15100:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15100:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15090:3:7"
																		},
																		"nativeSrc": "15090:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15090:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15064:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15064:6:7"
																},
																"nativeSrc": "15064:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15064:47:7"
															},
															"nativeSrc": "15064:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15064:47:7"
														},
														{
															"nativeSrc": "15120:139:7",
															"nodeType": "YulAssignment",
															"src": "15120:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15254:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15254:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15128:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15128:124:7"
																},
																"nativeSrc": "15128:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15128:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15120:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15120:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14847:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14998:9:7",
														"nodeType": "YulTypedName",
														"src": "14998:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15013:4:7",
														"nodeType": "YulTypedName",
														"src": "15013:4:7",
														"type": ""
													}
												],
												"src": "14847:419:7"
											},
											{
												"body": {
													"nativeSrc": "15316:147:7",
													"nodeType": "YulBlock",
													"src": "15316:147:7",
													"statements": [
														{
															"nativeSrc": "15326:25:7",
															"nodeType": "YulAssignment",
															"src": "15326:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15349:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15349:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15331:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15331:17:7"
																},
																"nativeSrc": "15331:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15331:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15326:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15326:1:7"
																}
															]
														},
														{
															"nativeSrc": "15360:25:7",
															"nodeType": "YulAssignment",
															"src": "15360:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15383:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15383:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15365:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15365:17:7"
																},
																"nativeSrc": "15365:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15365:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15360:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15360:1:7"
																}
															]
														},
														{
															"nativeSrc": "15394:16:7",
															"nodeType": "YulAssignment",
															"src": "15394:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15405:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15405:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15408:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15408:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15401:3:7"
																},
																"nativeSrc": "15401:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15401:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15394:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15434:22:7",
																"nodeType": "YulBlock",
																"src": "15434:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15436:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15436:16:7"
																			},
																			"nativeSrc": "15436:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15436:18:7"
																		},
																		"nativeSrc": "15436:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15436:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15426:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15426:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15429:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15423:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15423:2:7"
																},
																"nativeSrc": "15423:10:7",
																"nodeType": "YulFunctionCall",
																"src": "15423:10:7"
															},
															"nativeSrc": "15420:36:7",
															"nodeType": "YulIf",
															"src": "15420:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15272:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15303:1:7",
														"nodeType": "YulTypedName",
														"src": "15303:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15306:1:7",
														"nodeType": "YulTypedName",
														"src": "15306:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15312:3:7",
														"nodeType": "YulTypedName",
														"src": "15312:3:7",
														"type": ""
													}
												],
												"src": "15272:191:7"
											},
											{
												"body": {
													"nativeSrc": "15512:190:7",
													"nodeType": "YulBlock",
													"src": "15512:190:7",
													"statements": [
														{
															"nativeSrc": "15522:33:7",
															"nodeType": "YulAssignment",
															"src": "15522:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15549:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15549:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15531:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15531:17:7"
																},
																"nativeSrc": "15531:24:7",
																"nodeType": "YulFunctionCall",
																"src": "15531:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15522:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15645:22:7",
																"nodeType": "YulBlock",
																"src": "15645:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15647:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15647:16:7"
																			},
																			"nativeSrc": "15647:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15647:18:7"
																		},
																		"nativeSrc": "15647:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15647:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15570:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15570:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15577:66:7",
																		"nodeType": "YulLiteral",
																		"src": "15577:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15567:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15567:2:7"
																},
																"nativeSrc": "15567:77:7",
																"nodeType": "YulFunctionCall",
																"src": "15567:77:7"
															},
															"nativeSrc": "15564:103:7",
															"nodeType": "YulIf",
															"src": "15564:103:7"
														},
														{
															"nativeSrc": "15676:20:7",
															"nodeType": "YulAssignment",
															"src": "15676:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15687:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15687:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15694:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15683:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15683:3:7"
																},
																"nativeSrc": "15683:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15683:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15676:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15676:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15469:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15498:5:7",
														"nodeType": "YulTypedName",
														"src": "15498:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15508:3:7",
														"nodeType": "YulTypedName",
														"src": "15508:3:7",
														"type": ""
													}
												],
												"src": "15469:233:7"
											},
											{
												"body": {
													"nativeSrc": "15736:152:7",
													"nodeType": "YulBlock",
													"src": "15736:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15753:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15753:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15756:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15746:6:7"
																},
																"nativeSrc": "15746:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15746:88:7"
															},
															"nativeSrc": "15746:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15746:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15850:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15850:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15853:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15853:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15843:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15843:6:7"
																},
																"nativeSrc": "15843:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15843:15:7"
															},
															"nativeSrc": "15843:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15843:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15874:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15874:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15877:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15877:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15867:6:7"
																},
																"nativeSrc": "15867:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15867:15:7"
															},
															"nativeSrc": "15867:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15867:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15708:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15708:180:7"
											},
											{
												"body": {
													"nativeSrc": "15922:152:7",
													"nodeType": "YulBlock",
													"src": "15922:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15942:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15942:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15932:6:7"
																},
																"nativeSrc": "15932:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15932:88:7"
															},
															"nativeSrc": "15932:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15932:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16036:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16036:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16039:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16039:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16029:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16029:6:7"
																},
																"nativeSrc": "16029:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16029:15:7"
															},
															"nativeSrc": "16029:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16029:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16060:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16060:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16063:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16063:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16053:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16053:6:7"
																},
																"nativeSrc": "16053:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16053:15:7"
															},
															"nativeSrc": "16053:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "16053:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15894:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15894:180:7"
											},
											{
												"body": {
													"nativeSrc": "16122:143:7",
													"nodeType": "YulBlock",
													"src": "16122:143:7",
													"statements": [
														{
															"nativeSrc": "16132:25:7",
															"nodeType": "YulAssignment",
															"src": "16132:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16155:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16155:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16137:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16137:17:7"
																},
																"nativeSrc": "16137:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16137:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16132:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16132:1:7"
																}
															]
														},
														{
															"nativeSrc": "16166:25:7",
															"nodeType": "YulAssignment",
															"src": "16166:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16189:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16189:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16171:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16171:17:7"
																},
																"nativeSrc": "16171:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16171:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16166:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16166:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16213:22:7",
																"nodeType": "YulBlock",
																"src": "16213:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16215:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16215:16:7"
																			},
																			"nativeSrc": "16215:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16215:18:7"
																		},
																		"nativeSrc": "16215:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16215:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16210:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16210:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16203:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16203:6:7"
																},
																"nativeSrc": "16203:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16203:9:7"
															},
															"nativeSrc": "16200:35:7",
															"nodeType": "YulIf",
															"src": "16200:35:7"
														},
														{
															"nativeSrc": "16245:14:7",
															"nodeType": "YulAssignment",
															"src": "16245:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16254:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16254:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16257:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16257:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16250:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16250:3:7"
																},
																"nativeSrc": "16250:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16250:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16245:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16245:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16080:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16111:1:7",
														"nodeType": "YulTypedName",
														"src": "16111:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16114:1:7",
														"nodeType": "YulTypedName",
														"src": "16114:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16120:1:7",
														"nodeType": "YulTypedName",
														"src": "16120:1:7",
														"type": ""
													}
												],
												"src": "16080:185:7"
											},
											{
												"body": {
													"nativeSrc": "16331:62:7",
													"nodeType": "YulBlock",
													"src": "16331:62:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16365:22:7",
																"nodeType": "YulBlock",
																"src": "16365:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "16367:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16367:16:7"
																			},
																			"nativeSrc": "16367:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16367:18:7"
																		},
																		"nativeSrc": "16367:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16367:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16354:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "16354:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16361:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16361:1:7",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16351:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "16351:2:7"
																		},
																		"nativeSrc": "16351:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16351:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16344:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16344:6:7"
																},
																"nativeSrc": "16344:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16344:20:7"
															},
															"nativeSrc": "16341:46:7",
															"nodeType": "YulIf",
															"src": "16341:46:7"
														}
													]
												},
												"name": "validator_assert_t_enum$_StakingPeriod_$960",
												"nativeSrc": "16271:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16324:5:7",
														"nodeType": "YulTypedName",
														"src": "16324:5:7",
														"type": ""
													}
												],
												"src": "16271:122:7"
											},
											{
												"body": {
													"nativeSrc": "16461:83:7",
													"nodeType": "YulBlock",
													"src": "16461:83:7",
													"statements": [
														{
															"nativeSrc": "16471:16:7",
															"nodeType": "YulAssignment",
															"src": "16471:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "16482:5:7",
																"nodeType": "YulIdentifier",
																"src": "16482:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16471:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "16471:7:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16532:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16532:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_StakingPeriod_$960",
																	"nativeSrc": "16488:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "16488:43:7"
																},
																"nativeSrc": "16488:50:7",
																"nodeType": "YulFunctionCall",
																"src": "16488:50:7"
															},
															"nativeSrc": "16488:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "16488:50:7"
														}
													]
												},
												"name": "cleanup_t_enum$_StakingPeriod_$960",
												"nativeSrc": "16399:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16443:5:7",
														"nodeType": "YulTypedName",
														"src": "16443:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16453:7:7",
														"nodeType": "YulTypedName",
														"src": "16453:7:7",
														"type": ""
													}
												],
												"src": "16399:145:7"
											},
											{
												"body": {
													"nativeSrc": "16625:70:7",
													"nodeType": "YulBlock",
													"src": "16625:70:7",
													"statements": [
														{
															"nativeSrc": "16635:54:7",
															"nodeType": "YulAssignment",
															"src": "16635:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16683:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16683:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_StakingPeriod_$960",
																	"nativeSrc": "16648:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "16648:34:7"
																},
																"nativeSrc": "16648:41:7",
																"nodeType": "YulFunctionCall",
																"src": "16648:41:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16635:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "16635:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_StakingPeriod_$960_to_t_uint8",
												"nativeSrc": "16550:145:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16605:5:7",
														"nodeType": "YulTypedName",
														"src": "16605:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16615:9:7",
														"nodeType": "YulTypedName",
														"src": "16615:9:7",
														"type": ""
													}
												],
												"src": "16550:145:7"
											},
											{
												"body": {
													"nativeSrc": "16781:81:7",
													"nodeType": "YulBlock",
													"src": "16781:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16798:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16798:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16849:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "16849:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_StakingPeriod_$960_to_t_uint8",
																			"nativeSrc": "16803:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "16803:45:7"
																		},
																		"nativeSrc": "16803:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16803:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16791:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16791:6:7"
																},
																"nativeSrc": "16791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "16791:65:7"
															},
															"nativeSrc": "16791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "16791:65:7"
														}
													]
												},
												"name": "abi_encode_t_enum$_StakingPeriod_$960_to_t_uint8_fromStack",
												"nativeSrc": "16701:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16769:5:7",
														"nodeType": "YulTypedName",
														"src": "16769:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16776:3:7",
														"nodeType": "YulTypedName",
														"src": "16776:3:7",
														"type": ""
													}
												],
												"src": "16701:161:7"
											},
											{
												"body": {
													"nativeSrc": "17065:386:7",
													"nodeType": "YulBlock",
													"src": "17065:386:7",
													"statements": [
														{
															"nativeSrc": "17075:27:7",
															"nodeType": "YulAssignment",
															"src": "17075:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17087:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17087:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17098:3:7",
																		"nodeType": "YulLiteral",
																		"src": "17098:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17083:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17083:3:7"
																},
																"nativeSrc": "17083:19:7",
																"nodeType": "YulFunctionCall",
																"src": "17083:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17075:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17075:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17156:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17156:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17169:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17169:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17180:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17180:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17165:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17165:3:7"
																		},
																		"nativeSrc": "17165:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17165:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17112:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17112:43:7"
																},
																"nativeSrc": "17112:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17112:71:7"
															},
															"nativeSrc": "17112:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17112:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17252:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17252:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17265:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17265:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17276:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17276:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17261:3:7"
																		},
																		"nativeSrc": "17261:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17261:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$960_to_t_uint8_fromStack",
																	"nativeSrc": "17193:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17193:58:7"
																},
																"nativeSrc": "17193:87:7",
																"nodeType": "YulFunctionCall",
																"src": "17193:87:7"
															},
															"nativeSrc": "17193:87:7",
															"nodeType": "YulExpressionStatement",
															"src": "17193:87:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17334:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17347:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17347:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17358:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17358:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17343:3:7"
																		},
																		"nativeSrc": "17343:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17343:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17290:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17290:43:7"
																},
																"nativeSrc": "17290:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17290:72:7"
															},
															"nativeSrc": "17290:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17290:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17416:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17416:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17429:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17429:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17440:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17440:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17425:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17425:3:7"
																		},
																		"nativeSrc": "17425:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17425:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17372:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17372:43:7"
																},
																"nativeSrc": "17372:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17372:72:7"
															},
															"nativeSrc": "17372:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17372:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$960_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16868:583:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17013:9:7",
														"nodeType": "YulTypedName",
														"src": "17013:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17025:6:7",
														"nodeType": "YulTypedName",
														"src": "17025:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17033:6:7",
														"nodeType": "YulTypedName",
														"src": "17033:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17041:6:7",
														"nodeType": "YulTypedName",
														"src": "17041:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17049:6:7",
														"nodeType": "YulTypedName",
														"src": "17049:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17060:4:7",
														"nodeType": "YulTypedName",
														"src": "17060:4:7",
														"type": ""
													}
												],
												"src": "16868:583:7"
											},
											{
												"body": {
													"nativeSrc": "17563:116:7",
													"nodeType": "YulBlock",
													"src": "17563:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17585:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17585:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17593:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17593:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17581:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17581:3:7"
																		},
																		"nativeSrc": "17581:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17581:14:7"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973207374",
																		"kind": "string",
																		"nativeSrc": "17597:34:7",
																		"nodeType": "YulLiteral",
																		"src": "17597:34:7",
																		"type": "",
																		"value": "You are not the owner of this st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17574:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17574:6:7"
																},
																"nativeSrc": "17574:58:7",
																"nodeType": "YulFunctionCall",
																"src": "17574:58:7"
															},
															"nativeSrc": "17574:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "17574:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17653:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17653:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17661:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17661:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17649:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17649:3:7"
																		},
																		"nativeSrc": "17649:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17649:15:7"
																	},
																	{
																		"hexValue": "616b65",
																		"kind": "string",
																		"nativeSrc": "17666:5:7",
																		"nodeType": "YulLiteral",
																		"src": "17666:5:7",
																		"type": "",
																		"value": "ake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17642:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17642:6:7"
																},
																"nativeSrc": "17642:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17642:30:7"
															},
															"nativeSrc": "17642:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "17642:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217",
												"nativeSrc": "17457:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17555:6:7",
														"nodeType": "YulTypedName",
														"src": "17555:6:7",
														"type": ""
													}
												],
												"src": "17457:222:7"
											},
											{
												"body": {
													"nativeSrc": "17831:220:7",
													"nodeType": "YulBlock",
													"src": "17831:220:7",
													"statements": [
														{
															"nativeSrc": "17841:74:7",
															"nodeType": "YulAssignment",
															"src": "17841:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17907:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17907:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17912:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17848:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17848:58:7"
																},
																"nativeSrc": "17848:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17848:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17841:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18013:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18013:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217",
																	"nativeSrc": "17924:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17924:88:7"
																},
																"nativeSrc": "17924:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17924:93:7"
															},
															"nativeSrc": "17924:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17924:93:7"
														},
														{
															"nativeSrc": "18026:19:7",
															"nodeType": "YulAssignment",
															"src": "18026:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18037:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18037:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18042:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:7"
																},
																"nativeSrc": "18033:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18033:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18026:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17685:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17819:3:7",
														"nodeType": "YulTypedName",
														"src": "17819:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17827:3:7",
														"nodeType": "YulTypedName",
														"src": "17827:3:7",
														"type": ""
													}
												],
												"src": "17685:366:7"
											},
											{
												"body": {
													"nativeSrc": "18228:248:7",
													"nodeType": "YulBlock",
													"src": "18228:248:7",
													"statements": [
														{
															"nativeSrc": "18238:26:7",
															"nodeType": "YulAssignment",
															"src": "18238:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18250:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18250:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18261:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18246:3:7"
																},
																"nativeSrc": "18246:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18246:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18238:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18238:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18285:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18285:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18296:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18296:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18281:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18281:3:7"
																		},
																		"nativeSrc": "18281:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18281:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18304:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18304:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18310:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18310:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18300:3:7"
																		},
																		"nativeSrc": "18300:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18300:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18274:6:7"
																},
																"nativeSrc": "18274:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18274:47:7"
															},
															"nativeSrc": "18274:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18274:47:7"
														},
														{
															"nativeSrc": "18330:139:7",
															"nodeType": "YulAssignment",
															"src": "18330:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18464:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18464:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18338:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18338:124:7"
																},
																"nativeSrc": "18338:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18338:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18330:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18330:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18057:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18208:9:7",
														"nodeType": "YulTypedName",
														"src": "18208:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18223:4:7",
														"nodeType": "YulTypedName",
														"src": "18223:4:7",
														"type": ""
													}
												],
												"src": "18057:419:7"
											},
											{
												"body": {
													"nativeSrc": "18588:121:7",
													"nodeType": "YulBlock",
													"src": "18588:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18610:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18610:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18606:3:7"
																		},
																		"nativeSrc": "18606:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18606:14:7"
																	},
																	{
																		"hexValue": "5374616b65206973206e6f7420616374697665206f7220616c72656164792077",
																		"kind": "string",
																		"nativeSrc": "18622:34:7",
																		"nodeType": "YulLiteral",
																		"src": "18622:34:7",
																		"type": "",
																		"value": "Stake is not active or already w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18599:6:7"
																},
																"nativeSrc": "18599:58:7",
																"nodeType": "YulFunctionCall",
																"src": "18599:58:7"
															},
															"nativeSrc": "18599:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "18599:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18678:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18678:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18686:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18686:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18674:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18674:3:7"
																		},
																		"nativeSrc": "18674:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18674:15:7"
																	},
																	{
																		"hexValue": "697468647261776e",
																		"kind": "string",
																		"nativeSrc": "18691:10:7",
																		"nodeType": "YulLiteral",
																		"src": "18691:10:7",
																		"type": "",
																		"value": "ithdrawn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18667:6:7"
																},
																"nativeSrc": "18667:35:7",
																"nodeType": "YulFunctionCall",
																"src": "18667:35:7"
															},
															"nativeSrc": "18667:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "18667:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
												"nativeSrc": "18482:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18580:6:7",
														"nodeType": "YulTypedName",
														"src": "18580:6:7",
														"type": ""
													}
												],
												"src": "18482:227:7"
											},
											{
												"body": {
													"nativeSrc": "18861:220:7",
													"nodeType": "YulBlock",
													"src": "18861:220:7",
													"statements": [
														{
															"nativeSrc": "18871:74:7",
															"nodeType": "YulAssignment",
															"src": "18871:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18937:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18937:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18942:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18878:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18878:58:7"
																},
																"nativeSrc": "18878:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18878:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18871:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18871:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19043:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19043:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																	"nativeSrc": "18954:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18954:88:7"
																},
																"nativeSrc": "18954:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18954:93:7"
															},
															"nativeSrc": "18954:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18954:93:7"
														},
														{
															"nativeSrc": "19056:19:7",
															"nodeType": "YulAssignment",
															"src": "19056:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19067:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19067:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19072:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19072:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19063:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19063:3:7"
																},
																"nativeSrc": "19063:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19063:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19056:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19056:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18715:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18849:3:7",
														"nodeType": "YulTypedName",
														"src": "18849:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18857:3:7",
														"nodeType": "YulTypedName",
														"src": "18857:3:7",
														"type": ""
													}
												],
												"src": "18715:366:7"
											},
											{
												"body": {
													"nativeSrc": "19258:248:7",
													"nodeType": "YulBlock",
													"src": "19258:248:7",
													"statements": [
														{
															"nativeSrc": "19268:26:7",
															"nodeType": "YulAssignment",
															"src": "19268:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19280:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19280:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19291:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19291:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19276:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19276:3:7"
																},
																"nativeSrc": "19276:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19276:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19268:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19268:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19315:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19315:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19326:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19326:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19311:3:7"
																		},
																		"nativeSrc": "19311:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19311:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19334:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19334:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19340:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19340:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19330:3:7"
																		},
																		"nativeSrc": "19330:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19330:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19304:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19304:6:7"
																},
																"nativeSrc": "19304:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19304:47:7"
															},
															"nativeSrc": "19304:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19304:47:7"
														},
														{
															"nativeSrc": "19360:139:7",
															"nodeType": "YulAssignment",
															"src": "19360:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19494:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19494:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19368:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19368:124:7"
																},
																"nativeSrc": "19368:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19368:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19360:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19360:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19087:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19238:9:7",
														"nodeType": "YulTypedName",
														"src": "19238:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19253:4:7",
														"nodeType": "YulTypedName",
														"src": "19253:4:7",
														"type": ""
													}
												],
												"src": "19087:419:7"
											},
											{
												"body": {
													"nativeSrc": "19618:69:7",
													"nodeType": "YulBlock",
													"src": "19618:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19640:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19640:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19648:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19648:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19636:3:7"
																		},
																		"nativeSrc": "19636:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19636:14:7"
																	},
																	{
																		"hexValue": "5374616b6520706572696f64206973206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "19652:27:7",
																		"nodeType": "YulLiteral",
																		"src": "19652:27:7",
																		"type": "",
																		"value": "Stake period is not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19629:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19629:6:7"
																},
																"nativeSrc": "19629:51:7",
																"nodeType": "YulFunctionCall",
																"src": "19629:51:7"
															},
															"nativeSrc": "19629:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "19629:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
												"nativeSrc": "19512:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19610:6:7",
														"nodeType": "YulTypedName",
														"src": "19610:6:7",
														"type": ""
													}
												],
												"src": "19512:175:7"
											},
											{
												"body": {
													"nativeSrc": "19839:220:7",
													"nodeType": "YulBlock",
													"src": "19839:220:7",
													"statements": [
														{
															"nativeSrc": "19849:74:7",
															"nodeType": "YulAssignment",
															"src": "19849:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19915:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19915:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19920:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19920:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19856:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19856:58:7"
																},
																"nativeSrc": "19856:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19856:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19849:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19849:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20021:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20021:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																	"nativeSrc": "19932:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19932:88:7"
																},
																"nativeSrc": "19932:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19932:93:7"
															},
															"nativeSrc": "19932:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19932:93:7"
														},
														{
															"nativeSrc": "20034:19:7",
															"nodeType": "YulAssignment",
															"src": "20034:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20045:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20045:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20050:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20050:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20041:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20041:3:7"
																},
																"nativeSrc": "20041:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20041:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20034:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20034:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19693:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19827:3:7",
														"nodeType": "YulTypedName",
														"src": "19827:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19835:3:7",
														"nodeType": "YulTypedName",
														"src": "19835:3:7",
														"type": ""
													}
												],
												"src": "19693:366:7"
											},
											{
												"body": {
													"nativeSrc": "20236:248:7",
													"nodeType": "YulBlock",
													"src": "20236:248:7",
													"statements": [
														{
															"nativeSrc": "20246:26:7",
															"nodeType": "YulAssignment",
															"src": "20246:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20258:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20258:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20269:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20254:3:7"
																},
																"nativeSrc": "20254:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20254:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20246:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20246:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20293:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20293:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20304:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20304:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20289:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20289:3:7"
																		},
																		"nativeSrc": "20289:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20289:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20312:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20312:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20318:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20318:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20308:3:7"
																		},
																		"nativeSrc": "20308:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20308:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20282:6:7"
																},
																"nativeSrc": "20282:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20282:47:7"
															},
															"nativeSrc": "20282:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20282:47:7"
														},
														{
															"nativeSrc": "20338:139:7",
															"nodeType": "YulAssignment",
															"src": "20338:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20472:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20472:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20346:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20346:124:7"
																},
																"nativeSrc": "20346:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20346:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20338:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20338:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20065:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20216:9:7",
														"nodeType": "YulTypedName",
														"src": "20216:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20231:4:7",
														"nodeType": "YulTypedName",
														"src": "20231:4:7",
														"type": ""
													}
												],
												"src": "20065:419:7"
											},
											{
												"body": {
													"nativeSrc": "20616:206:7",
													"nodeType": "YulBlock",
													"src": "20616:206:7",
													"statements": [
														{
															"nativeSrc": "20626:26:7",
															"nodeType": "YulAssignment",
															"src": "20626:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20638:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20638:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20649:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20649:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20634:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20634:3:7"
																},
																"nativeSrc": "20634:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20634:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20626:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20626:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20715:3:7"
																		},
																		"nativeSrc": "20715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20662:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20662:43:7"
																},
																"nativeSrc": "20662:71:7",
																"nodeType": "YulFunctionCall",
																"src": "20662:71:7"
															},
															"nativeSrc": "20662:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "20662:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20787:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20787:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20800:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20800:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20811:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20811:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20796:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20796:3:7"
																		},
																		"nativeSrc": "20796:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20796:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20743:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20743:43:7"
																},
																"nativeSrc": "20743:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20743:72:7"
															},
															"nativeSrc": "20743:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20743:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20490:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20580:9:7",
														"nodeType": "YulTypedName",
														"src": "20580:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20592:6:7",
														"nodeType": "YulTypedName",
														"src": "20592:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20600:6:7",
														"nodeType": "YulTypedName",
														"src": "20600:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20611:4:7",
														"nodeType": "YulTypedName",
														"src": "20611:4:7",
														"type": ""
													}
												],
												"src": "20490:332:7"
											},
											{
												"body": {
													"nativeSrc": "20856:152:7",
													"nodeType": "YulBlock",
													"src": "20856:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20873:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20873:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20876:77:7",
																		"nodeType": "YulLiteral",
																		"src": "20876:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20866:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20866:6:7"
																},
																"nativeSrc": "20866:88:7",
																"nodeType": "YulFunctionCall",
																"src": "20866:88:7"
															},
															"nativeSrc": "20866:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "20866:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20970:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20970:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20973:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20973:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20963:6:7"
																},
																"nativeSrc": "20963:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20963:15:7"
															},
															"nativeSrc": "20963:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20963:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20994:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20994:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20997:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20997:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20987:6:7"
																},
																"nativeSrc": "20987:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20987:15:7"
															},
															"nativeSrc": "20987:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20987:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "20828:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "20828:180:7"
											},
											{
												"body": {
													"nativeSrc": "21042:152:7",
													"nodeType": "YulBlock",
													"src": "21042:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21059:1:7",
																		"nodeType": "YulLiteral",
																		"src": "21059:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21062:77:7",
																		"nodeType": "YulLiteral",
																		"src": "21062:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21052:6:7"
																},
																"nativeSrc": "21052:88:7",
																"nodeType": "YulFunctionCall",
																"src": "21052:88:7"
															},
															"nativeSrc": "21052:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "21052:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21156:1:7",
																		"nodeType": "YulLiteral",
																		"src": "21156:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21159:4:7",
																		"nodeType": "YulLiteral",
																		"src": "21159:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21149:6:7"
																},
																"nativeSrc": "21149:15:7",
																"nodeType": "YulFunctionCall",
																"src": "21149:15:7"
															},
															"nativeSrc": "21149:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "21149:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "21180:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21183:4:7",
																		"nodeType": "YulLiteral",
																		"src": "21183:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21173:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21173:6:7"
																},
																"nativeSrc": "21173:15:7",
																"nodeType": "YulFunctionCall",
																"src": "21173:15:7"
															},
															"nativeSrc": "21173:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "21173:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "21014:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "21014:180:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_enum$_StakingPeriod_$960(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_StakingPeriod_$960(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_StakingPeriod_$960(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$960(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$960(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_StakingPeriod_$960(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_StakingPeriod_$960(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$877_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$877_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$877__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$877_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MtkContracts.Stake -> struct MtkContracts.Stake\n    function abi_encode_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // endTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // rewardRate\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // isActive\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // stakeIndex\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MtkContracts.Stake[] -> struct MtkContracts.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$950_memory_ptr_to_t_struct$_Stake_$950_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function validator_assert_t_enum$_StakingPeriod_$960(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakingPeriod_$960(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakingPeriod_$960(value)\n    }\n\n    function convert_t_enum$_StakingPeriod_$960_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakingPeriod_$960(value)\n    }\n\n    function abi_encode_t_enum$_StakingPeriod_$960_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakingPeriod_$960_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$960_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_StakingPeriod_$960_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner of this st\")\n\n        mstore(add(memPtr, 32), \"ake\")\n\n    }\n\n    function abi_encode_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake is not active or already w\")\n\n        mstore(add(memPtr, 32), \"ithdrawn\")\n\n    }\n\n    function abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake period is not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009c575f3560e01c8063762e54fc11610064578063762e54fc14610156578063a262ab3514610186578063a57a5304146101b6578063b5d5b5fa146101e6578063c4a9e1161461021b5761009c565b806310087fb1146100a05780631f1accb2146100bc5780632e1a7d4d146100ec5780634c86259e1461010857806372f702f314610138575b5f5ffd5b6100ba60048036038101906100b59190610d9e565b610239565b005b6100d660048036038101906100d19190610ddc565b6106e8565b6040516100e39190610e16565b60405180910390f35b61010660048036038101906101019190610e2f565b6106fd565b005b610122600480360381019061011d9190610e2f565b610939565b60405161012f9190610e16565b60405180910390f35b610140610959565b60405161014d9190610ed4565b60405180910390f35b610170600480360381019061016b9190610f28565b61097d565b60405161017d9190610e16565b60405180910390f35b6101a0600480360381019061019b9190610f28565b610992565b6040516101ad919061109d565b60405180910390f35b6101d060048036038101906101cb9190610e2f565b610b23565b6040516101dd91906110cc565b60405180910390f35b61020060048036038101906101fb91906110e5565b610b53565b60405161021296959493929190611132565b60405180910390f35b610223610ba2565b6040516102309190610e16565b60405180910390f35b5f670de0b6b3a76400008361024e91906111be565b90505f8311610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028990611259565b60405180910390fd5b805f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102ec91906110cc565b602060405180830381865afa158015610307573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061032b919061128b565b101561036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390611300565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016103c99392919061131e565b6020604051808303815f875af11580156103e5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610409919061137d565b610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f906113f2565b60405180910390fd5b5f61045283610ba8565b90505f816020015190505f825f015190505f4290505f83826104749190611410565b90505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906104c490611443565b9190505590505f610168670de0b6b3a76400008660015f8d60038111156104ee576104ed61148a565b5b6003811115610500576104ff61148a565b5b81526020019081526020015f205461051891906111be565b61052291906111be565b61052c91906114e4565b90503373ffffffffffffffffffffffffffffffffffffffff167f022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c8b8b868660405161057a949392919061155a565b60405180910390a26040518060c001604052808b81526020018581526020018481526020018281526020016001151581526020018381525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a082015181600501559050503360045f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600582908060018154018082558091505060019003905f5260205f20015f909190919091505560065f8154809291906106d790611443565b919050555050505050505050505050565b6001602052805f5260405f205f915090505481565b3373ffffffffffffffffffffffffffffffffffffffff1660045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061160d565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1661083a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108319061169b565b60405180910390fd5b8060020154421015610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890611703565b60405180910390fd5b5f670de0b6b3a764000060648360030154845f01546108a091906111be565b6108aa91906114e4565b6108b491906114e4565b90505f81835f01546108c69190611410565b90505f836004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6828660405161092b929190611721565b60405180910390a250505050565b60058181548110610948575f80fd5b905f5260205f20015f915090505481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f915090505481565b60605f60065467ffffffffffffffff8111156109b1576109b0611748565b5b6040519080825280602002602001820160405280156109ea57816020015b6109d7610cfa565b8152602001906001900390816109cf5790505b5090505f5f90505f5f90505b600654811015610b18575f60058281548110610a1557610a14611775565b5b905f5260205f20015490505f60025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806004015f9054906101000a900460ff1615610b0957806040518060c00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152602001600582015481525050858581518110610aef57610aee611775565b5b60200260200101819052508380610b0590611443565b9450505b505080806001019150506109f6565b508192505050919050565b6004602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16908060050154905086565b60065481565b610bb0610d2c565b5f6003811115610bc357610bc261148a565b5b826003811115610bd657610bd561148a565b5b03610bf9576040518060400160405280601e8152602001603c8152509050610cf5565b60016003811115610c0d57610c0c61148a565b5b826003811115610c2057610c1f61148a565b5b03610c43576040518060400160405280605a815260200160b48152509050610cf5565b60026003811115610c5757610c5661148a565b5b826003811115610c6a57610c6961148a565b5b03610c8e57604051806040016040528060b4815260200161012c8152509050610cf5565b600380811115610ca157610ca061148a565b5b826003811115610cb457610cb361148a565b5b03610cd957604051806040016040528061016881526020016102588152509050610cf5565b60405180604001604052806101688152602001610e1081525090505b919050565b6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f81525090565b60405180604001604052805f81526020015f81525090565b5f5ffd5b5f819050919050565b610d5a81610d48565b8114610d64575f5ffd5b50565b5f81359050610d7581610d51565b92915050565b60048110610d87575f5ffd5b50565b5f81359050610d9881610d7b565b92915050565b5f5f60408385031215610db457610db3610d44565b5b5f610dc185828601610d67565b9250506020610dd285828601610d8a565b9150509250929050565b5f60208284031215610df157610df0610d44565b5b5f610dfe84828501610d8a565b91505092915050565b610e1081610d48565b82525050565b5f602082019050610e295f830184610e07565b92915050565b5f60208284031215610e4457610e43610d44565b5b5f610e5184828501610d67565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610e9c610e97610e9284610e5a565b610e79565b610e5a565b9050919050565b5f610ead82610e82565b9050919050565b5f610ebe82610ea3565b9050919050565b610ece81610eb4565b82525050565b5f602082019050610ee75f830184610ec5565b92915050565b5f610ef782610e5a565b9050919050565b610f0781610eed565b8114610f11575f5ffd5b50565b5f81359050610f2281610efe565b92915050565b5f60208284031215610f3d57610f3c610d44565b5b5f610f4a84828501610f14565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610f8581610d48565b82525050565b5f8115159050919050565b610f9f81610f8b565b82525050565b60c082015f820151610fb95f850182610f7c565b506020820151610fcc6020850182610f7c565b506040820151610fdf6040850182610f7c565b506060820151610ff26060850182610f7c565b5060808201516110056080850182610f96565b5060a082015161101860a0850182610f7c565b50505050565b5f6110298383610fa5565b60c08301905092915050565b5f602082019050919050565b5f61104b82610f53565b6110558185610f5d565b935061106083610f6d565b805f5b83811015611090578151611077888261101e565b975061108283611035565b925050600181019050611063565b5085935050505092915050565b5f6020820190508181035f8301526110b58184611041565b905092915050565b6110c681610eed565b82525050565b5f6020820190506110df5f8301846110bd565b92915050565b5f5f604083850312156110fb576110fa610d44565b5b5f61110885828601610f14565b925050602061111985828601610d67565b9150509250929050565b61112c81610f8b565b82525050565b5f60c0820190506111455f830189610e07565b6111526020830188610e07565b61115f6040830187610e07565b61116c6060830186610e07565b6111796080830185611123565b61118660a0830184610e07565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111c882610d48565b91506111d383610d48565b92508282026111e181610d48565b915082820484148315176111f8576111f7611191565b5b5092915050565b5f82825260208201905092915050565b7f416d6f756e742073686f756c6420626520706f736974697665000000000000005f82015250565b5f6112436019836111ff565b915061124e8261120f565b602082019050919050565b5f6020820190508181035f83015261127081611237565b9050919050565b5f8151905061128581610d51565b92915050565b5f602082840312156112a05761129f610d44565b5b5f6112ad84828501611277565b91505092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6112ea6014836111ff565b91506112f5826112b6565b602082019050919050565b5f6020820190508181035f830152611317816112de565b9050919050565b5f6060820190506113315f8301866110bd565b61133e60208301856110bd565b61134b6040830184610e07565b949350505050565b61135c81610f8b565b8114611366575f5ffd5b50565b5f8151905061137781611353565b92915050565b5f6020828403121561139257611391610d44565b5b5f61139f84828501611369565b91505092915050565b7f5374616b696e673a205472616e73666572206661696c656400000000000000005f82015250565b5f6113dc6018836111ff565b91506113e7826113a8565b602082019050919050565b5f6020820190508181035f830152611409816113d0565b9050919050565b5f61141a82610d48565b915061142583610d48565b925082820190508082111561143d5761143c611191565b5b92915050565b5f61144d82610d48565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361147f5761147e611191565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114ee82610d48565b91506114f983610d48565b925082611509576115086114b7565b5b828204905092915050565b600481106115255761152461148a565b5b50565b5f81905061153582611514565b919050565b5f61154482611528565b9050919050565b6115548161153a565b82525050565b5f60808201905061156d5f830187610e07565b61157a602083018661154b565b6115876040830185610e07565b6115946060830184610e07565b95945050505050565b7f596f7520617265206e6f7420746865206f776e6572206f6620746869732073745f8201527f616b650000000000000000000000000000000000000000000000000000000000602082015250565b5f6115f76023836111ff565b91506116028261159d565b604082019050919050565b5f6020820190508181035f830152611624816115eb565b9050919050565b7f5374616b65206973206e6f7420616374697665206f7220616c726561647920775f8201527f697468647261776e000000000000000000000000000000000000000000000000602082015250565b5f6116856028836111ff565b91506116908261162b565b604082019050919050565b5f6020820190508181035f8301526116b281611679565b9050919050565b7f5374616b6520706572696f64206973206e6f7420656e646564000000000000005f82015250565b5f6116ed6019836111ff565b91506116f8826116b9565b602082019050919050565b5f6020820190508181035f83015261171a816116e1565b9050919050565b5f6040820190506117345f830185610e07565b6117416020830184610e07565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea264697066735822122075371232a393c6800b7b59f89786fee6b966f60dbcae23b8d33b84098a0ff9e264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x762E54FC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x762E54FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA262AB35 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xA57A5304 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xC4A9E116 EQ PUSH2 0x21B JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x10087FB1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x1F1ACCB2 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x4C86259E EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP1 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x137D JUMP JUMPDEST PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x452 DUP4 PUSH2 0xBA8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4C4 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH0 PUSH2 0x168 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH1 0x1 PUSH0 DUP14 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0x148A JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C DUP12 DUP12 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x57A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP CALLER PUSH1 0x4 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6D7 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x160D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 DUP4 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH0 ADD SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1410 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x92B SWAP3 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x948 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1748 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9EA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9D7 PUSH2 0xCFA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9CF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xB18 JUMPI PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x1775 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB09 JUMPI DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xAEF JUMPI PUSH2 0xAEE PUSH2 0x1775 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP4 DUP1 PUSH2 0xB05 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9F6 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBB0 PUSH2 0xD2C JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBC3 JUMPI PUSH2 0xBC2 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD5 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3C DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC0D JUMPI PUSH2 0xC0C PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC20 JUMPI PUSH2 0xC1F PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5A DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB4 DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC57 JUMPI PUSH2 0xC56 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0x148A JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x148A JUMP JUMPDEST JUMPDEST SUB PUSH2 0xCD9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 DUP2 MSTORE POP SWAP1 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE10 DUP2 MSTORE POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5A DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xD64 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD75 DUP2 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xD87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD98 DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC1 DUP6 DUP3 DUP7 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDD2 DUP6 DUP3 DUP7 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH2 0xDF0 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE10 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE29 PUSH0 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE51 DUP5 DUP3 DUP6 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9C PUSH2 0xE97 PUSH2 0xE92 DUP5 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAD DUP3 PUSH2 0xE82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBE DUP3 PUSH2 0xEA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE7 PUSH0 DUP4 ADD DUP5 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEF7 DUP3 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF07 DUP2 PUSH2 0xEED JUMP JUMPDEST DUP2 EQ PUSH2 0xF11 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF22 DUP2 PUSH2 0xEFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF4A DUP5 DUP3 DUP6 ADD PUSH2 0xF14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9F DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xFB9 PUSH0 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xFCC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xFDF PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFF2 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1005 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0xF96 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1018 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1029 DUP4 DUP4 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104B DUP3 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x1055 DUP2 DUP6 PUSH2 0xF5D JUMP JUMPDEST SWAP4 POP PUSH2 0x1060 DUP4 PUSH2 0xF6D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1090 JUMPI DUP2 MLOAD PUSH2 0x1077 DUP9 DUP3 PUSH2 0x101E JUMP JUMPDEST SWAP8 POP PUSH2 0x1082 DUP4 PUSH2 0x1035 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1063 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10B5 DUP2 DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C6 DUP2 PUSH2 0xEED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH0 DUP4 ADD DUP5 PUSH2 0x10BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH2 0x10FA PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1108 DUP6 DUP3 DUP7 ADD PUSH2 0xF14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1119 DUP6 DUP3 DUP7 ADD PUSH2 0xD67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x112C DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1145 PUSH0 DUP4 ADD DUP10 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1152 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x115F PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x116C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1179 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1123 JUMP JUMPDEST PUSH2 0x1186 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11C8 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D3 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11E1 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0x1191 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C6420626520706F73697469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1243 PUSH1 0x19 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x124E DUP3 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1270 DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0xD51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH2 0x129F PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AD DUP5 DUP3 DUP6 ADD PUSH2 0x1277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12EA PUSH1 0x14 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x12F5 DUP3 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1317 DUP2 PUSH2 0x12DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1331 PUSH0 DUP4 ADD DUP7 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x133E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x134B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x135C DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP2 EQ PUSH2 0x1366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1377 DUP2 PUSH2 0x1353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0xD44 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x139F DUP5 DUP3 DUP6 ADD PUSH2 0x1369 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A205472616E73666572206661696C65640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC PUSH1 0x18 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x13E7 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1409 DUP2 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141A DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x1425 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x1191 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144D DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1191 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14EE DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F9 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1509 JUMPI PUSH2 0x1508 PUSH2 0x14B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1525 JUMPI PUSH2 0x1524 PUSH2 0x148A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1535 DUP3 PUSH2 0x1514 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1544 DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1554 DUP2 PUSH2 0x153A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x156D PUSH0 DUP4 ADD DUP8 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x157A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F662074686973207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616B650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15F7 PUSH1 0x23 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1602 DUP3 PUSH2 0x159D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206973206E6F7420616374697665206F7220616C72656164792077 PUSH0 DUP3 ADD MSTORE PUSH32 0x697468647261776E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 PUSH1 0x28 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1690 DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16B2 DUP2 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B6520706572696F64206973206E6F7420656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH1 0x19 DUP4 PUSH2 0x11FF JUMP JUMPDEST SWAP2 POP PUSH2 0x16F8 DUP3 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x171A DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x1741 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE07 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x371232A393C6800B7B59F89786FEE6B966F60DBCAE23 0xB8 0xD3 EXTCODESIZE DUP5 MULMOD DUP11 0xF EXTDELEGATECALL 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "168:5113:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:1199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;774:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3958:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1101:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:504;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;875:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1133:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1816:1199;1888:17;1913:6;1906;:13;;;;:::i;:::-;1888:31;;1944:1;1937:6;:8;1929:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2029:9;1993:12;;;;;;;;;;;:22;;;2016:10;1993:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;1985:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:12;;;;;;;;;;;:25;;;2107:10;2127:4;2134:6;2081:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2073:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:29;2220:20;2233:6;2220:12;:20::i;:::-;2188:52;;2250:11;2262:10;:15;;;2250:27;;2287:18;2306:10;:21;;;2287:40;;2337:14;2352:15;2337:30;;2377:12;2400:3;2391:6;:12;;;;:::i;:::-;2377:26;;2413:13;2428:11;:23;2440:10;2428:23;;;;;;;;;;;;;;;;:25;;;;;;;;;:::i;:::-;;;;;2413:40;;2463:12;2506:3;2499:6;2488:10;2476:3;:11;2480:6;2476:11;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;:::i;:::-;:29;;;;:::i;:::-;:33;;;;:::i;:::-;2463:46;;2532:10;2525:46;;;2544:6;2552;2560:4;2565:5;2525:46;;;;;;;;;:::i;:::-;;;;;;;;2612:289;;;;;;;;2639:6;2612:289;;;;2669:6;2612:289;;;;2697:4;2612:289;;;;2756:4;2612:289;;;;2824:4;2612:289;;;;;;2885:5;2612:289;;;2582:10;:22;2593:10;2582:22;;;;;;;;;;;;;;;:29;2605:5;2582:29;;;;;;;;;;;:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:10;2911:17;:24;2929:5;2911:24;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2956:9;2971:5;2956:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2987:10;;:12;;;;;;;;;:::i;:::-;;;;;;1878:1137;;;;;;;;1816:1199;;:::o;774:44::-;;;;;;;;;;;;;;;;;:::o;3958:571::-;4054:10;4023:41;;:17;:29;4041:10;4023:29;;;;;;;;;;;;;;;;;;;;;:41;;;4015:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4115:15;4133:10;:22;4144:10;4133:22;;;;;;;;;;;;;;;:34;4156:10;4133:34;;;;;;;;;;;4115:52;;4193:1;:10;;;;;;;;;;;;4185:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4285:1;:9;;;4266:15;:28;;4258:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4343:14;4384:7;4380:3;4367:1;:12;;;4358:1;:8;;;:21;;;;:::i;:::-;:25;;;;:::i;:::-;:33;;;;:::i;:::-;4343:48;;4401:19;4430:6;4421:1;:8;;;:15;;;;:::i;:::-;4401:35;;4457:5;4446:1;:10;;;:16;;;;;;;;;;;;;;;;;;4488:10;4478:44;;;4499:11;4511:10;4478:44;;;;;;;:::i;:::-;;;;;;;;4005:524;;;3958:571;:::o;1101:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;740:::-;;;;;;;;;;;;;:::o;973:46::-;;;;;;;;;;;;;;;;;:::o;4770:504::-;4836:14;4869:27;4911:10;;4899:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4869:53;;4932:19;4952:1;4932:21;;4968:9;4980:1;4968:13;;4963:267;4987:10;;4983:1;:14;4963:267;;;5018:13;5032:9;5042:1;5032:12;;;;;;;;:::i;:::-;;;;;;;;;;5018:26;;5058:15;5076:10;:16;5087:4;5076:16;;;;;;;;;;;;;;;:23;5093:5;5076:23;;;;;;;;;;;5058:41;;5117:1;:10;;;;;;;;;;;;5113:107;;;5173:1;5147:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;5160:11;5147:25;;;;;;;;:::i;:::-;;;;;;;:27;;;;5192:13;;;;;:::i;:::-;;;;5113:107;5004:226;;4999:3;;;;;;;4963:267;;;;5255:12;5248:19;;;;4770:504;;;:::o;1044:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;875:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1133:25::-;;;;:::o;3068:884::-;3135:18;;:::i;:::-;3177:24;3169:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;3166:779;;3223:90;;;;;;;;3264:2;3223:90;;;;3289:9;3223:90;;;3216:97;;;;3166:779;3340:24;3332:32;;;;;;;;:::i;:::-;;:6;:32;;;;;;;;:::i;:::-;;;3329:616;;3386:90;;;;;;;;3427:2;3386:90;;;;3452:9;3386:90;;;3379:97;;;;3329:616;3503:31;3495:39;;;;;;;;:::i;:::-;;:6;:39;;;;;;;;:::i;:::-;;;3492:453;;3556:91;;;;;;;;3597:3;3556:91;;;;3623:9;3556:91;;;3549:98;;;;3492:453;3674:21;3666:29;;;;;;;;:::i;:::-;;:6;:29;;;;;;;;:::i;:::-;;;3663:282;;3717:92;;;;;;;;3758:3;3717:92;;;;3784:10;3717:92;;;3710:99;;;;3663:282;3845:89;;;;;;;;3886:3;3845:89;;;;3912:7;3845:89;;;3838:96;;3068:884;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:116::-;780:1;773:5;770:12;760:40;;796:1;793;786:12;760:40;690:116;:::o;812:173::-;875:5;913:6;900:20;891:29;;929:50;973:5;929:50;:::i;:::-;812:173;;;;:::o;991:508::-;1076:6;1084;1133:2;1121:9;1112:7;1108:23;1104:32;1101:119;;;1139:79;;:::i;:::-;1101:119;1259:1;1284:53;1329:7;1320:6;1309:9;1305:22;1284:53;:::i;:::-;1274:63;;1230:117;1386:2;1412:70;1474:7;1465:6;1454:9;1450:22;1412:70;:::i;:::-;1402:80;;1357:135;991:508;;;;;:::o;1505:363::-;1581:6;1630:2;1618:9;1609:7;1605:23;1601:32;1598:119;;;1636:79;;:::i;:::-;1598:119;1756:1;1781:70;1843:7;1834:6;1823:9;1819:22;1781:70;:::i;:::-;1771:80;;1727:134;1505:363;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:60::-;2721:3;2742:5;2735:12;;2693:60;;;:::o;2759:142::-;2809:9;2842:53;2860:34;2869:24;2887:5;2869:24;:::i;:::-;2860:34;:::i;:::-;2842:53;:::i;:::-;2829:66;;2759:142;;;:::o;2907:126::-;2957:9;2990:37;3021:5;2990:37;:::i;:::-;2977:50;;2907:126;;;:::o;3039:140::-;3103:9;3136:37;3167:5;3136:37;:::i;:::-;3123:50;;3039:140;;;:::o;3185:159::-;3286:51;3331:5;3286:51;:::i;:::-;3281:3;3274:64;3185:159;;:::o;3350:250::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3508:85;3590:1;3579:9;3575:17;3566:6;3508:85;:::i;:::-;3350:250;;;;:::o;3606:96::-;3643:7;3672:24;3690:5;3672:24;:::i;:::-;3661:35;;3606:96;;;:::o;3708:122::-;3781:24;3799:5;3781:24;:::i;:::-;3774:5;3771:35;3761:63;;3820:1;3817;3810:12;3761:63;3708:122;:::o;3836:139::-;3882:5;3920:6;3907:20;3898:29;;3936:33;3963:5;3936:33;:::i;:::-;3836:139;;;;:::o;3981:329::-;4040:6;4089:2;4077:9;4068:7;4064:23;4060:32;4057:119;;;4095:79;;:::i;:::-;4057:119;4215:1;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4186:117;3981:329;;;;:::o;4316:136::-;4405:6;4439:5;4433:12;4423:22;;4316:136;;;:::o;4458:206::-;4579:11;4613:6;4608:3;4601:19;4653:4;4648:3;4644:14;4629:29;;4458:206;;;;:::o;4670:154::-;4759:4;4782:3;4774:11;;4812:4;4807:3;4803:14;4795:22;;4670:154;;;:::o;4830:108::-;4907:24;4925:5;4907:24;:::i;:::-;4902:3;4895:37;4830:108;;:::o;4944:90::-;4978:7;5021:5;5014:13;5007:21;4996:32;;4944:90;;;:::o;5040:99::-;5111:21;5126:5;5111:21;:::i;:::-;5106:3;5099:34;5040:99;;:::o;5207:1207::-;5338:4;5333:3;5329:14;5427:4;5420:5;5416:16;5410:23;5446:63;5503:4;5498:3;5494:14;5480:12;5446:63;:::i;:::-;5353:166;5606:4;5599:5;5595:16;5589:23;5625:63;5682:4;5677:3;5673:14;5659:12;5625:63;:::i;:::-;5529:169;5783:4;5776:5;5772:16;5766:23;5802:63;5859:4;5854:3;5850:14;5836:12;5802:63;:::i;:::-;5708:167;5963:4;5956:5;5952:16;5946:23;5982:63;6039:4;6034:3;6030:14;6016:12;5982:63;:::i;:::-;5885:170;6141:4;6134:5;6130:16;6124:23;6160:57;6211:4;6206:3;6202:14;6188:12;6160:57;:::i;:::-;6065:162;6315:4;6308:5;6304:16;6298:23;6334:63;6391:4;6386:3;6382:14;6368:12;6334:63;:::i;:::-;6237:170;5307:1107;5207:1207;;:::o;6420:267::-;6533:10;6554:90;6640:3;6632:6;6554:90;:::i;:::-;6676:4;6671:3;6667:14;6653:28;;6420:267;;;;:::o;6693:135::-;6785:4;6817;6812:3;6808:14;6800:22;;6693:135;;;:::o;6900:908::-;7063:3;7092:76;7162:5;7092:76;:::i;:::-;7184:108;7285:6;7280:3;7184:108;:::i;:::-;7177:115;;7316:78;7388:5;7316:78;:::i;:::-;7417:7;7448:1;7433:350;7458:6;7455:1;7452:13;7433:350;;;7534:6;7528:13;7561:107;7664:3;7649:13;7561:107;:::i;:::-;7554:114;;7691:82;7766:6;7691:82;:::i;:::-;7681:92;;7493:290;7480:1;7477;7473:9;7468:14;;7433:350;;;7437:14;7799:3;7792:10;;7068:740;;;6900:908;;;;:::o;7814:461::-;8001:4;8039:2;8028:9;8024:18;8016:26;;8088:9;8082:4;8078:20;8074:1;8063:9;8059:17;8052:47;8116:152;8263:4;8254:6;8116:152;:::i;:::-;8108:160;;7814:461;;;;:::o;8281:118::-;8368:24;8386:5;8368:24;:::i;:::-;8363:3;8356:37;8281:118;;:::o;8405:222::-;8498:4;8536:2;8525:9;8521:18;8513:26;;8549:71;8617:1;8606:9;8602:17;8593:6;8549:71;:::i;:::-;8405:222;;;;:::o;8633:474::-;8701:6;8709;8758:2;8746:9;8737:7;8733:23;8729:32;8726:119;;;8764:79;;:::i;:::-;8726:119;8884:1;8909:53;8954:7;8945:6;8934:9;8930:22;8909:53;:::i;:::-;8899:63;;8855:117;9011:2;9037:53;9082:7;9073:6;9062:9;9058:22;9037:53;:::i;:::-;9027:63;;8982:118;8633:474;;;;;:::o;9113:109::-;9194:21;9209:5;9194:21;:::i;:::-;9189:3;9182:34;9113:109;;:::o;9228:763::-;9455:4;9493:3;9482:9;9478:19;9470:27;;9507:71;9575:1;9564:9;9560:17;9551:6;9507:71;:::i;:::-;9588:72;9656:2;9645:9;9641:18;9632:6;9588:72;:::i;:::-;9670;9738:2;9727:9;9723:18;9714:6;9670:72;:::i;:::-;9752;9820:2;9809:9;9805:18;9796:6;9752:72;:::i;:::-;9834:67;9896:3;9885:9;9881:19;9872:6;9834:67;:::i;:::-;9911:73;9979:3;9968:9;9964:19;9955:6;9911:73;:::i;:::-;9228:763;;;;;;;;;:::o;9997:180::-;10045:77;10042:1;10035:88;10142:4;10139:1;10132:15;10166:4;10163:1;10156:15;10183:410;10223:7;10246:20;10264:1;10246:20;:::i;:::-;10241:25;;10280:20;10298:1;10280:20;:::i;:::-;10275:25;;10335:1;10332;10328:9;10357:30;10375:11;10357:30;:::i;:::-;10346:41;;10536:1;10527:7;10523:15;10520:1;10517:22;10497:1;10490:9;10470:83;10447:139;;10566:18;;:::i;:::-;10447:139;10231:362;10183:410;;;;:::o;10599:169::-;10683:11;10717:6;10712:3;10705:19;10757:4;10752:3;10748:14;10733:29;;10599:169;;;;:::o;10774:175::-;10914:27;10910:1;10902:6;10898:14;10891:51;10774:175;:::o;10955:366::-;11097:3;11118:67;11182:2;11177:3;11118:67;:::i;:::-;11111:74;;11194:93;11283:3;11194:93;:::i;:::-;11312:2;11307:3;11303:12;11296:19;;10955:366;;;:::o;11327:419::-;11493:4;11531:2;11520:9;11516:18;11508:26;;11580:9;11574:4;11570:20;11566:1;11555:9;11551:17;11544:47;11608:131;11734:4;11608:131;:::i;:::-;11600:139;;11327:419;;;:::o;11752:143::-;11809:5;11840:6;11834:13;11825:22;;11856:33;11883:5;11856:33;:::i;:::-;11752:143;;;;:::o;11901:351::-;11971:6;12020:2;12008:9;11999:7;11995:23;11991:32;11988:119;;;12026:79;;:::i;:::-;11988:119;12146:1;12171:64;12227:7;12218:6;12207:9;12203:22;12171:64;:::i;:::-;12161:74;;12117:128;11901:351;;;;:::o;12258:170::-;12398:22;12394:1;12386:6;12382:14;12375:46;12258:170;:::o;12434:366::-;12576:3;12597:67;12661:2;12656:3;12597:67;:::i;:::-;12590:74;;12673:93;12762:3;12673:93;:::i;:::-;12791:2;12786:3;12782:12;12775:19;;12434:366;;;:::o;12806:419::-;12972:4;13010:2;12999:9;12995:18;12987:26;;13059:9;13053:4;13049:20;13045:1;13034:9;13030:17;13023:47;13087:131;13213:4;13087:131;:::i;:::-;13079:139;;12806:419;;;:::o;13231:442::-;13380:4;13418:2;13407:9;13403:18;13395:26;;13431:71;13499:1;13488:9;13484:17;13475:6;13431:71;:::i;:::-;13512:72;13580:2;13569:9;13565:18;13556:6;13512:72;:::i;:::-;13594;13662:2;13651:9;13647:18;13638:6;13594:72;:::i;:::-;13231:442;;;;;;:::o;13679:116::-;13749:21;13764:5;13749:21;:::i;:::-;13742:5;13739:32;13729:60;;13785:1;13782;13775:12;13729:60;13679:116;:::o;13801:137::-;13855:5;13886:6;13880:13;13871:22;;13902:30;13926:5;13902:30;:::i;:::-;13801:137;;;;:::o;13944:345::-;14011:6;14060:2;14048:9;14039:7;14035:23;14031:32;14028:119;;;14066:79;;:::i;:::-;14028:119;14186:1;14211:61;14264:7;14255:6;14244:9;14240:22;14211:61;:::i;:::-;14201:71;;14157:125;13944:345;;;;:::o;14295:174::-;14435:26;14431:1;14423:6;14419:14;14412:50;14295:174;:::o;14475:366::-;14617:3;14638:67;14702:2;14697:3;14638:67;:::i;:::-;14631:74;;14714:93;14803:3;14714:93;:::i;:::-;14832:2;14827:3;14823:12;14816:19;;14475:366;;;:::o;14847:419::-;15013:4;15051:2;15040:9;15036:18;15028:26;;15100:9;15094:4;15090:20;15086:1;15075:9;15071:17;15064:47;15128:131;15254:4;15128:131;:::i;:::-;15120:139;;14847:419;;;:::o;15272:191::-;15312:3;15331:20;15349:1;15331:20;:::i;:::-;15326:25;;15365:20;15383:1;15365:20;:::i;:::-;15360:25;;15408:1;15405;15401:9;15394:16;;15429:3;15426:1;15423:10;15420:36;;;15436:18;;:::i;:::-;15420:36;15272:191;;;;:::o;15469:233::-;15508:3;15531:24;15549:5;15531:24;:::i;:::-;15522:33;;15577:66;15570:5;15567:77;15564:103;;15647:18;;:::i;:::-;15564:103;15694:1;15687:5;15683:13;15676:20;;15469:233;;;:::o;15708:180::-;15756:77;15753:1;15746:88;15853:4;15850:1;15843:15;15877:4;15874:1;15867:15;15894:180;15942:77;15939:1;15932:88;16039:4;16036:1;16029:15;16063:4;16060:1;16053:15;16080:185;16120:1;16137:20;16155:1;16137:20;:::i;:::-;16132:25;;16171:20;16189:1;16171:20;:::i;:::-;16166:25;;16210:1;16200:35;;16215:18;;:::i;:::-;16200:35;16257:1;16254;16250:9;16245:14;;16080:185;;;;:::o;16271:122::-;16361:1;16354:5;16351:12;16341:46;;16367:18;;:::i;:::-;16341:46;16271:122;:::o;16399:145::-;16453:7;16482:5;16471:16;;16488:50;16532:5;16488:50;:::i;:::-;16399:145;;;:::o;16550:::-;16615:9;16648:41;16683:5;16648:41;:::i;:::-;16635:54;;16550:145;;;:::o;16701:161::-;16803:52;16849:5;16803:52;:::i;:::-;16798:3;16791:65;16701:161;;:::o;16868:583::-;17060:4;17098:3;17087:9;17083:19;17075:27;;17112:71;17180:1;17169:9;17165:17;17156:6;17112:71;:::i;:::-;17193:87;17276:2;17265:9;17261:18;17252:6;17193:87;:::i;:::-;17290:72;17358:2;17347:9;17343:18;17334:6;17290:72;:::i;:::-;17372;17440:2;17429:9;17425:18;17416:6;17372:72;:::i;:::-;16868:583;;;;;;;:::o;17457:222::-;17597:34;17593:1;17585:6;17581:14;17574:58;17666:5;17661:2;17653:6;17649:15;17642:30;17457:222;:::o;17685:366::-;17827:3;17848:67;17912:2;17907:3;17848:67;:::i;:::-;17841:74;;17924:93;18013:3;17924:93;:::i;:::-;18042:2;18037:3;18033:12;18026:19;;17685:366;;;:::o;18057:419::-;18223:4;18261:2;18250:9;18246:18;18238:26;;18310:9;18304:4;18300:20;18296:1;18285:9;18281:17;18274:47;18338:131;18464:4;18338:131;:::i;:::-;18330:139;;18057:419;;;:::o;18482:227::-;18622:34;18618:1;18610:6;18606:14;18599:58;18691:10;18686:2;18678:6;18674:15;18667:35;18482:227;:::o;18715:366::-;18857:3;18878:67;18942:2;18937:3;18878:67;:::i;:::-;18871:74;;18954:93;19043:3;18954:93;:::i;:::-;19072:2;19067:3;19063:12;19056:19;;18715:366;;;:::o;19087:419::-;19253:4;19291:2;19280:9;19276:18;19268:26;;19340:9;19334:4;19330:20;19326:1;19315:9;19311:17;19304:47;19368:131;19494:4;19368:131;:::i;:::-;19360:139;;19087:419;;;:::o;19512:175::-;19652:27;19648:1;19640:6;19636:14;19629:51;19512:175;:::o;19693:366::-;19835:3;19856:67;19920:2;19915:3;19856:67;:::i;:::-;19849:74;;19932:93;20021:3;19932:93;:::i;:::-;20050:2;20045:3;20041:12;20034:19;;19693:366;;;:::o;20065:419::-;20231:4;20269:2;20258:9;20254:18;20246:26;;20318:9;20312:4;20308:20;20304:1;20293:9;20289:17;20282:47;20346:131;20472:4;20346:131;:::i;:::-;20338:139;;20065:419;;;:::o;20490:332::-;20611:4;20649:2;20638:9;20634:18;20626:26;;20662:71;20730:1;20719:9;20715:17;20706:6;20662:71;:::i;:::-;20743:72;20811:2;20800:9;20796:18;20787:6;20743:72;:::i;:::-;20490:332;;;;;:::o;20828:180::-;20876:77;20873:1;20866:88;20973:4;20970:1;20963:15;20997:4;20994:1;20987:15;21014:180;21062:77;21059:1;21052:88;21159:4;21156:1;21149:15;21183:4;21180:1;21173:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1220800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"apy(uint8)": "2735",
								"getUserActiveStakes(address)": "infinite",
								"nextStakeId(address)": "2802",
								"stake(uint256,uint8)": "infinite",
								"stakeCount()": "2513",
								"stakeList(uint256)": "infinite",
								"stakeOwnerMapping(uint256)": "2871",
								"stakingToken()": "infinite",
								"userStakes(address,uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_generateStakeId()": "infinite",
								"_getDuration(enum MtkContracts.StakingPeriod)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1472,
									"end": 1808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1550,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1540,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1528,
									"end": 1540,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1550,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1595,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1561,
									"end": 1564,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1565,
									"end": 1589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1561,
									"end": 1590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1561,
									"end": 1590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1590,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1595,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1595,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1595,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1561,
									"end": 1595,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1655,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1621,
									"end": 1624,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1649,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1621,
									"end": 1650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1621,
									"end": 1650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1650,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1655,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1655,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1655,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1722,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1681,
									"end": 1684,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1716,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1681,
									"end": 1717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1681,
									"end": 1717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1717,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1722,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1722,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1780,
									"end": 1782,
									"name": "PUSH",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1751,
									"end": 1754,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1755,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1751,
									"end": 1777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1751,
									"end": 1777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1751,
									"end": 1777,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1782,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1782,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1472,
									"end": 1808,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1402,
									"end": 1582,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1402,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1450,
									"end": 1527,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1528,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1551,
									"name": "PUSH",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1544,
									"end": 1545,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1537,
									"end": 1552,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1575,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1568,
									"end": 1569,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1576,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 5281,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075371232a393c6800b7b59f89786fee6b966f60dbcae23b8d33b84098a0ff9e264736f6c634300081e0033",
									".code": [
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "762E54FC"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "762E54FC"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "A262AB35"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "A57A5304"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "B5D5B5FA"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "C4A9E116"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "10087FB1"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "1F1ACCB2"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "4C86259E"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "72F702F3"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 5281,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1816,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1816,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 774,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3958,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3958,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1101,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1101,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1101,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 740,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 973,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 973,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 973,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4770,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4770,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4770,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1044,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1044,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1044,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 875,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 875,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 875,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1133,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1133,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1906,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1943,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1929,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1929,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1993,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1993,
											"end": 2027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1993,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1985,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1985,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2107,
											"end": 2117,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2073,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2073,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2220,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2220,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2277,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2277,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2277,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2327,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2403,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2391,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2450,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2428,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2453,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2479,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2476,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2476,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2476,
											"end": 2498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2476,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2476,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2476,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2476,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2542,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "22DD619EE0D92140E5ABDE105761D6DF71C05C4FCB761610EA0552064F91E6C"
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2525,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2645,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2603,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2604,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2936,
											"end": 2946,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2928,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2934,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2971,
											"end": 2976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2977,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2997,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2987,
											"end": 2997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2987,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 774,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4023,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4040,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4051,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4023,
											"end": 4052,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4023,
											"end": 4064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4064,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4015,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4015,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4154,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4166,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4185,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4185,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4294,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4294,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4258,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4258,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4366,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4358,
											"end": 4379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4358,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4358,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4358,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4358,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4343,
											"end": 4391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4421,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4456,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4446,
											"end": 4456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4498,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 4499,
											"end": 4510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4511,
											"end": 4521,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4478,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4522,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 766,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4850,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4869,
											"end": 4896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4921,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4911,
											"end": 4921,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4899,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4899,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4987,
											"end": 4997,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5042,
											"end": 5043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5032,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5086,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5091,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5098,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5118,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5117,
											"end": 5127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5220,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5113,
											"end": 5220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5159,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5171,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5147,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5192,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5220,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5113,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5267,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4770,
											"end": 5274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 875,
											"end": 936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 875,
											"end": 936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3135,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3169,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3169,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3201,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3166,
											"end": 3945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3266,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3216,
											"end": 3313,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3945,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3166,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3332,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3332,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3329,
											"end": 3945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "5A"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "B4"
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3379,
											"end": 3476,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3945,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3329,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3495,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3495,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3492,
											"end": 3945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3600,
											"name": "PUSH",
											"source": 6,
											"value": "B4"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "PUSH",
											"source": 6,
											"value": "12C"
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3549,
											"end": 3647,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3945,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3492,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3666,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3666,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3663,
											"end": 3945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3710,
											"end": 3809,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3945,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3663,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "127"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 806,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 690,
											"end": 806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 780,
											"end": 781,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 782,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 760,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 760,
											"end": 800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 796,
											"end": 797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 798,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 760,
											"end": 800,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 760,
											"end": 800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 690,
											"end": 806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 812,
											"end": 985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 875,
											"end": 880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 900,
											"end": 920,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 891,
											"end": 920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 891,
											"end": 920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 929,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 929,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 929,
											"end": 979,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 929,
											"end": 979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 812,
											"end": 985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1130,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1131,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1136,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1101,
											"end": 1220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1139,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1139,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1218,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1139,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1220,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1101,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1284,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1284,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1284,
											"end": 1337,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1284,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1337,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1412,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1482,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1412,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1482,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1402,
											"end": 1482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1633,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1636,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1636,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1598,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1823,
											"end": 1832,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1781,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1781,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1505,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1992,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1874,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1961,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1961,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2106,
											"end": 2132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2142,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2213,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2142,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2869,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2860,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2842,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2990,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3136,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3136,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3286,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3286,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3508,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3508,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3672,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3672,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3799,
											"end": 3804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3781,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3781,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3806,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3761,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3907,
											"end": 3927,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3936,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3936,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4075,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4092,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4176,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4057,
											"end": 4176,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4095,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4095,
											"end": 4174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4174,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4095,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4176,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4057,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4601,
											"end": 4620,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4653,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4648,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4824,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4670,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 4785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4938,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4830,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4907,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4902,
											"end": 4905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4932,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4830,
											"end": 4938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4944,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 5034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 5034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 5034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 5034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5139,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5040,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5126,
											"end": 5131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 5111,
											"end": 5132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5132,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5111,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5133,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 6414,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 5207,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 5333,
											"end": 5336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5433,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5446,
											"end": 5509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5446,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5612,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5682,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5625,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5688,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5625,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5859,
											"end": 5863,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 5857,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5802,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5802,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5967,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5956,
											"end": 5961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5952,
											"end": 5968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6039,
											"end": 6043,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6034,
											"end": 6037,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 5982,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5885,
											"end": 6055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6145,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6134,
											"end": 6139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6147,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6211,
											"end": 6215,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6206,
											"end": 6209,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6200,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6160,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6217,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6160,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6308,
											"end": 6313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6321,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6382,
											"end": 6396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6334,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6397,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 6334,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 6414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 6414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 6414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 6414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6640,
											"end": 6643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6554,
											"end": 6644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6644,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6554,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6680,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6828,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 6693,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6812,
											"end": 6815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6800,
											"end": 6822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6800,
											"end": 6822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7063,
											"end": 7066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7092,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7168,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7092,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 7285,
											"end": 7291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7184,
											"end": 7292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7292,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 7184,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7292,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7316,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7316,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7465,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7541,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7664,
											"end": 7667,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7561,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7668,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7561,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7668,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7691,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7773,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7691,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7480,
											"end": 7481,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7433,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7437,
											"end": 7451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7802,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7068,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 7808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8028,
											"end": 8037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8098,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8075,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8072,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8059,
											"end": 8076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8052,
											"end": 8099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8263,
											"end": 8267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 8116,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8268,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 8116,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8108,
											"end": 8268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8386,
											"end": 8391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8368,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8363,
											"end": 8366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8549,
											"end": 8620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8405,
											"end": 8627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8701,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8756,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8761,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8764,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8954,
											"end": 8961,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8945,
											"end": 8951,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8934,
											"end": 8943,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8930,
											"end": 8952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 8909,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8962,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 9082,
											"end": 9089,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9071,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 9037,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9027,
											"end": 9090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9027,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9222,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9113,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9209,
											"end": 9214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 9194,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9182,
											"end": 9216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9496,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9478,
											"end": 9497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9507,
											"end": 9578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9578,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9507,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9656,
											"end": 9658,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 9654,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9588,
											"end": 9660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9588,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 9738,
											"end": 9740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9714,
											"end": 9720,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9670,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9742,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 9670,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9820,
											"end": 9822,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9802,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9752,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9824,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9752,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9834,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9881,
											"end": 9900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9834,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9834,
											"end": 9901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9834,
											"end": 9901,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 9834,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9979,
											"end": 9982,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9968,
											"end": 9977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 9983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 9911,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9911,
											"end": 9984,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 9911,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9997,
											"end": 10177,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9997,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10045,
											"end": 10122,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10042,
											"end": 10043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10035,
											"end": 10123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10142,
											"end": 10146,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10139,
											"end": 10140,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10132,
											"end": 10147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10170,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10163,
											"end": 10164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10156,
											"end": 10171,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10223,
											"end": 10230,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 10246,
											"end": 10266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10266,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 10246,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10241,
											"end": 10266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10241,
											"end": 10266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 10298,
											"end": 10299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 10280,
											"end": 10300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10300,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 10280,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10300,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10357,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 10375,
											"end": 10386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10357,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 10357,
											"end": 10387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10357,
											"end": 10387,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 10357,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10346,
											"end": 10387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10346,
											"end": 10387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10527,
											"end": 10534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10538,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10539,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10497,
											"end": 10498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10499,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10553,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10447,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 10447,
											"end": 10586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 10566,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10447,
											"end": 10586,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 10447,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 10724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10752,
											"end": 10755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10748,
											"end": 10762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10733,
											"end": 10762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10733,
											"end": 10762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10949,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 10774,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10914,
											"end": 10941,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E742073686F756C6420626520706F73697469766500000000000000"
										},
										{
											"begin": 10910,
											"end": 10911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10902,
											"end": 10908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10898,
											"end": 10912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10891,
											"end": 10942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10955,
											"end": 11321,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 10955,
											"end": 11321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11097,
											"end": 11100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11118,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 11182,
											"end": 11184,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11177,
											"end": 11180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 11118,
											"end": 11185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11118,
											"end": 11185,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 11118,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 11283,
											"end": 11286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 11194,
											"end": 11287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11194,
											"end": 11287,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 11194,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11307,
											"end": 11310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11303,
											"end": 11315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11296,
											"end": 11315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10955,
											"end": 11321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10955,
											"end": 11321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10955,
											"end": 11321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10955,
											"end": 11321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11746,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 11327,
											"end": 11746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11533,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11520,
											"end": 11529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11580,
											"end": 11589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11570,
											"end": 11590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11555,
											"end": 11564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11544,
											"end": 11591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 11734,
											"end": 11738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 11608,
											"end": 11739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11608,
											"end": 11739,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 11608,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11327,
											"end": 11746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11840,
											"end": 11846,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11834,
											"end": 11847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11825,
											"end": 11847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11825,
											"end": 11847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11883,
											"end": 11888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 11856,
											"end": 11889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11889,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11856,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11752,
											"end": 11895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12022,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11999,
											"end": 12006,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11995,
											"end": 12018,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 12023,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 12026,
											"end": 12105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 12227,
											"end": 12234,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12218,
											"end": 12224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12171,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 12171,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12171,
											"end": 12235,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 12171,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12117,
											"end": 12245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 12252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12428,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 12258,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12398,
											"end": 12420,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12394,
											"end": 12395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12386,
											"end": 12392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12382,
											"end": 12396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12375,
											"end": 12421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12258,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12800,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 12434,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12597,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 12661,
											"end": 12663,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 12656,
											"end": 12659,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 12597,
											"end": 12664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12597,
											"end": 12664,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 12597,
											"end": 12664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12590,
											"end": 12664,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12590,
											"end": 12664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12762,
											"end": 12765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 12673,
											"end": 12766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12766,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12673,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12793,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 12794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12806,
											"end": 13225,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 12806,
											"end": 13225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12972,
											"end": 12976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13010,
											"end": 13012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12995,
											"end": 13013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12987,
											"end": 13013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13059,
											"end": 13068,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13053,
											"end": 13057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13049,
											"end": 13069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13045,
											"end": 13046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13034,
											"end": 13043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13030,
											"end": 13047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13023,
											"end": 13070,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 13213,
											"end": 13217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 13087,
											"end": 13218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13218,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 13087,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12806,
											"end": 13225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12806,
											"end": 13225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12806,
											"end": 13225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12806,
											"end": 13225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13380,
											"end": 13384,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13420,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13407,
											"end": 13416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13395,
											"end": 13421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13395,
											"end": 13421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13499,
											"end": 13500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13497,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13475,
											"end": 13481,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 13431,
											"end": 13502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13431,
											"end": 13502,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13431,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 13580,
											"end": 13582,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13556,
											"end": 13562,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 13512,
											"end": 13584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13512,
											"end": 13584,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 13512,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13651,
											"end": 13660,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13638,
											"end": 13644,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 13594,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13666,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13594,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13795,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13679,
											"end": 13795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 13764,
											"end": 13769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 13749,
											"end": 13770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 13770,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 13749,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13742,
											"end": 13747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13739,
											"end": 13771,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13729,
											"end": 13789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 13729,
											"end": 13789,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13785,
											"end": 13786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13775,
											"end": 13787,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13729,
											"end": 13789,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 13729,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13679,
											"end": 13795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13855,
											"end": 13860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13886,
											"end": 13892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13880,
											"end": 13893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13871,
											"end": 13893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13871,
											"end": 13893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 13926,
											"end": 13931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13902,
											"end": 13932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13932,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 13902,
											"end": 13932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13801,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14011,
											"end": 14017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14039,
											"end": 14046,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14035,
											"end": 14058,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14031,
											"end": 14063,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 14066,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14211,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 14264,
											"end": 14271,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14244,
											"end": 14253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14240,
											"end": 14262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 14211,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14272,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 14211,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14201,
											"end": 14272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14157,
											"end": 14282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14295,
											"end": 14469,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 14295,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14435,
											"end": 14461,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B696E673A205472616E73666572206661696C65640000000000000000"
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14419,
											"end": 14433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14412,
											"end": 14462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14295,
											"end": 14469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14295,
											"end": 14469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14841,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 14475,
											"end": 14841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14617,
											"end": 14620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14638,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14697,
											"end": 14700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14638,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 14638,
											"end": 14705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14638,
											"end": 14705,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 14638,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14631,
											"end": 14705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14631,
											"end": 14705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14714,
											"end": 14807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14714,
											"end": 14807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 14714,
											"end": 14807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14714,
											"end": 14807,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14714,
											"end": 14807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14832,
											"end": 14834,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14827,
											"end": 14830,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14823,
											"end": 14835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14816,
											"end": 14835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14816,
											"end": 14835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14841,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14475,
											"end": 14841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 15266,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 14847,
											"end": 15266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15013,
											"end": 15017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15040,
											"end": 15049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15028,
											"end": 15054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15028,
											"end": 15054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15100,
											"end": 15109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15110,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15086,
											"end": 15087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15075,
											"end": 15084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15071,
											"end": 15088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15064,
											"end": 15111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 15254,
											"end": 15258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 15128,
											"end": 15259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15259,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 15128,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15120,
											"end": 15259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15120,
											"end": 15259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 15266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 15266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 15266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 15266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15331,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 15349,
											"end": 15350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15331,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 15331,
											"end": 15351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15331,
											"end": 15351,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 15331,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15326,
											"end": 15351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15326,
											"end": 15351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15365,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 15383,
											"end": 15384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15365,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 15365,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15365,
											"end": 15385,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 15365,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15360,
											"end": 15385,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15360,
											"end": 15385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15405,
											"end": 15406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15401,
											"end": 15410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15394,
											"end": 15410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15426,
											"end": 15427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15423,
											"end": 15433,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15420,
											"end": 15456,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15420,
											"end": 15456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 15420,
											"end": 15456,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15436,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 15436,
											"end": 15454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 15436,
											"end": 15454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15436,
											"end": 15454,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 15436,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15420,
											"end": 15456,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 15420,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15702,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 15469,
											"end": 15702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 15549,
											"end": 15554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15531,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 15531,
											"end": 15555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15531,
											"end": 15555,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 15531,
											"end": 15555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15522,
											"end": 15555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15522,
											"end": 15555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15577,
											"end": 15643,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15570,
											"end": 15575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15567,
											"end": 15644,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15564,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 15564,
											"end": 15667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 15647,
											"end": 15665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15564,
											"end": 15667,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 15564,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15694,
											"end": 15695,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15687,
											"end": 15692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15683,
											"end": 15696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15676,
											"end": 15696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15469,
											"end": 15702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15708,
											"end": 15888,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 15708,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15756,
											"end": 15833,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15753,
											"end": 15754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15746,
											"end": 15834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15853,
											"end": 15857,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 15850,
											"end": 15851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15881,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15874,
											"end": 15875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 15882,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15894,
											"end": 16074,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 15894,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 16019,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15939,
											"end": 15940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15932,
											"end": 16020,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16039,
											"end": 16043,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 16036,
											"end": 16037,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16029,
											"end": 16044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16063,
											"end": 16067,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16060,
											"end": 16061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16053,
											"end": 16068,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16120,
											"end": 16121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16137,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 16155,
											"end": 16156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 16137,
											"end": 16157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16157,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 16137,
											"end": 16157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 16189,
											"end": 16190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 16171,
											"end": 16191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16171,
											"end": 16191,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 16171,
											"end": 16191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16166,
											"end": 16191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16166,
											"end": 16191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16210,
											"end": 16211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 16215,
											"end": 16233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 16215,
											"end": 16233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 16200,
											"end": 16235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16257,
											"end": 16258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16254,
											"end": 16255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16250,
											"end": 16259,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16245,
											"end": 16259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16245,
											"end": 16259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16271,
											"end": 16393,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 16271,
											"end": 16393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16361,
											"end": 16362,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 16354,
											"end": 16359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16351,
											"end": 16363,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16341,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 16341,
											"end": 16387,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 16367,
											"end": 16385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16341,
											"end": 16387,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 16341,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16271,
											"end": 16393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16271,
											"end": 16393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16544,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 16399,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16453,
											"end": 16460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16482,
											"end": 16487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16488,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 16532,
											"end": 16537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16488,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 16488,
											"end": 16538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16488,
											"end": 16538,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 16488,
											"end": 16538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16544,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16695,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 16550,
											"end": 16695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16648,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 16683,
											"end": 16688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 16648,
											"end": 16689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16648,
											"end": 16689,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 16648,
											"end": 16689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16635,
											"end": 16689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16635,
											"end": 16689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16701,
											"end": 16862,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 16701,
											"end": 16862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16803,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 16849,
											"end": 16854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16803,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 16803,
											"end": 16855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16803,
											"end": 16855,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 16803,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16798,
											"end": 16801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16791,
											"end": 16856,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16701,
											"end": 16862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16701,
											"end": 16862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16701,
											"end": 16862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17060,
											"end": 17064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17098,
											"end": 17101,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 17087,
											"end": 17096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17083,
											"end": 17102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 17102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 17102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 17180,
											"end": 17181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17169,
											"end": 17178,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17156,
											"end": 17162,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 17112,
											"end": 17183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17183,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 17112,
											"end": 17183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17193,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 17276,
											"end": 17278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17265,
											"end": 17274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17261,
											"end": 17279,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17252,
											"end": 17258,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17193,
											"end": 17280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 17193,
											"end": 17280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17193,
											"end": 17280,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 17193,
											"end": 17280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17290,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 17358,
											"end": 17360,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17347,
											"end": 17356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17343,
											"end": 17361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17334,
											"end": 17340,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17290,
											"end": 17362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 17290,
											"end": 17362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17290,
											"end": 17362,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 17290,
											"end": 17362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17372,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 17440,
											"end": 17442,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17429,
											"end": 17438,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17425,
											"end": 17443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17416,
											"end": 17422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17372,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 17372,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17372,
											"end": 17444,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 17372,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 17451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17679,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 17457,
											"end": 17679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17597,
											"end": 17631,
											"name": "PUSH",
											"source": 7,
											"value": "596F7520617265206E6F7420746865206F776E6572206F662074686973207374"
										},
										{
											"begin": 17593,
											"end": 17594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17585,
											"end": 17591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17581,
											"end": 17595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17574,
											"end": 17632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17666,
											"end": 17671,
											"name": "PUSH",
											"source": 7,
											"value": "616B650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17661,
											"end": 17663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17653,
											"end": 17659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17649,
											"end": 17664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17642,
											"end": 17672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17457,
											"end": 17679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 18051,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 17685,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17827,
											"end": 17830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 17912,
											"end": 17914,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 17907,
											"end": 17910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 17848,
											"end": 17915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17915,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 17848,
											"end": 17915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17841,
											"end": 17915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17841,
											"end": 17915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 18013,
											"end": 18016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 17924,
											"end": 18017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 18017,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 17924,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18042,
											"end": 18044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18037,
											"end": 18040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18026,
											"end": 18045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18026,
											"end": 18045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 18051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 18051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 18051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17685,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18057,
											"end": 18476,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 18057,
											"end": 18476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18223,
											"end": 18227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18261,
											"end": 18263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18250,
											"end": 18259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18246,
											"end": 18264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18238,
											"end": 18264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18238,
											"end": 18264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18310,
											"end": 18319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18304,
											"end": 18308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18300,
											"end": 18320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18296,
											"end": 18297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18285,
											"end": 18294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18281,
											"end": 18298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18274,
											"end": 18321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 18464,
											"end": 18468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 18338,
											"end": 18469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18338,
											"end": 18469,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 18338,
											"end": 18469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18057,
											"end": 18476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18057,
											"end": 18476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18057,
											"end": 18476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18057,
											"end": 18476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18709,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 18482,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18622,
											"end": 18656,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B65206973206E6F7420616374697665206F7220616C72656164792077"
										},
										{
											"begin": 18618,
											"end": 18619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18610,
											"end": 18616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18606,
											"end": 18620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18599,
											"end": 18657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18691,
											"end": 18701,
											"name": "PUSH",
											"source": 7,
											"value": "697468647261776E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18686,
											"end": 18688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18678,
											"end": 18684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18674,
											"end": 18689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18667,
											"end": 18702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18482,
											"end": 18709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18857,
											"end": 18860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 18942,
											"end": 18944,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 18937,
											"end": 18940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 18878,
											"end": 18945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 18878,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18871,
											"end": 18945,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18871,
											"end": 18945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 19043,
											"end": 19046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 18954,
											"end": 19047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 18954,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19072,
											"end": 19074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19067,
											"end": 19070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19063,
											"end": 19075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19056,
											"end": 19075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19056,
											"end": 19075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18715,
											"end": 19081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18715,
											"end": 19081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19253,
											"end": 19257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19291,
											"end": 19293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19280,
											"end": 19289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19276,
											"end": 19294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19268,
											"end": 19294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19268,
											"end": 19294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19340,
											"end": 19349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19334,
											"end": 19338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19330,
											"end": 19350,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19326,
											"end": 19327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19315,
											"end": 19324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19311,
											"end": 19328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 19494,
											"end": 19498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 19368,
											"end": 19499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 19368,
											"end": 19499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19360,
											"end": 19499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19360,
											"end": 19499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19512,
											"end": 19687,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 19512,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19652,
											"end": 19679,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B6520706572696F64206973206E6F7420656E64656400000000000000"
										},
										{
											"begin": 19648,
											"end": 19649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19636,
											"end": 19650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19629,
											"end": 19680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19512,
											"end": 19687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19512,
											"end": 19687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19693,
											"end": 20059,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 19693,
											"end": 20059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19835,
											"end": 19838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 19920,
											"end": 19922,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 19915,
											"end": 19918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19856,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 19856,
											"end": 19923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19856,
											"end": 19923,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 19856,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19849,
											"end": 19923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19849,
											"end": 19923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19932,
											"end": 20025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 20021,
											"end": 20024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19932,
											"end": 20025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 19932,
											"end": 20025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19932,
											"end": 20025,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 19932,
											"end": 20025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20050,
											"end": 20052,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20045,
											"end": 20048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20041,
											"end": 20053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20034,
											"end": 20053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20034,
											"end": 20053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19693,
											"end": 20059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19693,
											"end": 20059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19693,
											"end": 20059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19693,
											"end": 20059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20065,
											"end": 20484,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 20065,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 20235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20269,
											"end": 20271,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20258,
											"end": 20267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20246,
											"end": 20272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20246,
											"end": 20272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20318,
											"end": 20327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20312,
											"end": 20316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20308,
											"end": 20328,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20304,
											"end": 20305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20293,
											"end": 20302,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20289,
											"end": 20306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20282,
											"end": 20329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20346,
											"end": 20477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 20472,
											"end": 20476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20346,
											"end": 20477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 20346,
											"end": 20477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20346,
											"end": 20477,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 20346,
											"end": 20477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20338,
											"end": 20477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20338,
											"end": 20477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20065,
											"end": 20484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20065,
											"end": 20484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20065,
											"end": 20484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20065,
											"end": 20484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20611,
											"end": 20615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20649,
											"end": 20651,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20638,
											"end": 20647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20634,
											"end": 20652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20626,
											"end": 20652,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20626,
											"end": 20652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20662,
											"end": 20733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 20730,
											"end": 20731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20719,
											"end": 20728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20715,
											"end": 20732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20706,
											"end": 20712,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20662,
											"end": 20733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 20662,
											"end": 20733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20662,
											"end": 20733,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 20662,
											"end": 20733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20743,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 20811,
											"end": 20813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20800,
											"end": 20809,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20796,
											"end": 20814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20787,
											"end": 20793,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20743,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 20743,
											"end": 20815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20743,
											"end": 20815,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 20743,
											"end": 20815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20490,
											"end": 20822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20828,
											"end": 21008,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 20828,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20876,
											"end": 20953,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20873,
											"end": 20874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20866,
											"end": 20954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20973,
											"end": 20977,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 20970,
											"end": 20971,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20963,
											"end": 20978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20997,
											"end": 21001,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 20994,
											"end": 20995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20987,
											"end": 21002,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 21014,
											"end": 21194,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 21014,
											"end": 21194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21062,
											"end": 21139,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21052,
											"end": 21140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21159,
											"end": 21163,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 21156,
											"end": 21157,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 21149,
											"end": 21164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21183,
											"end": 21187,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 21180,
											"end": 21181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21173,
											"end": 21188,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"apy(uint8)": "1f1accb2",
							"getUserActiveStakes(address)": "a262ab35",
							"nextStakeId(address)": "762e54fc",
							"stake(uint256,uint8)": "10087fb1",
							"stakeCount()": "c4a9e116",
							"stakeList(uint256)": "4c86259e",
							"stakeOwnerMapping(uint256)": "a57a5304",
							"stakingToken()": "72f702f3",
							"userStakes(address,uint256)": "b5d5b5fa",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_mtkToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserActiveStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct MtkContracts.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nextStakeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum MtkContracts.StakingPeriod\",\"name\":\"period\",\"type\":\"uint8\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeOwnerMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MtkContracts\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x1fba0a935ab2badedab84dc44cb0ce60895d7f84243e71b748a56c8765c45db5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce14f6f78dfadec2d4192e04fe38eec3479d3673fe452a3496e51ba8236b9218\",\"dweb:/ipfs/QmP37nX9aqb1zCh7cTWxjvPtnKgjnpsLM3u2Z5oHrEiXvo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 963,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "stakingToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)877"
							},
							{
								"astId": 968,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "apy",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(StakingPeriod)960,t_uint256)"
							},
							{
								"astId": 975,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "userStakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)950_storage))"
							},
							{
								"astId": 979,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "nextStakeId",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 983,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "stakeOwnerMapping",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 986,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "stakeList",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 988,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "stakeCount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 990,
								"contract": "contracts/MyToken.sol:MtkContracts",
								"label": "nonce",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(StakingPeriod)960": {
								"encoding": "inplace",
								"label": "enum MtkContracts.StakingPeriod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Stake)950_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct MtkContracts.Stake))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Stake)950_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(StakingPeriod)960,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)960",
								"label": "mapping(enum MtkContracts.StakingPeriod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Stake)950_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MtkContracts.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)950_storage"
							},
							"t_struct(Stake)950_storage": {
								"encoding": "inplace",
								"label": "struct MtkContracts.Stake",
								"members": [
									{
										"astId": 939,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 941,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 943,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "endTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "rewardRate",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 947,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "isActive",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 949,
										"contract": "contracts/MyToken.sol:MtkContracts",
										"label": "stakeIndex",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MtkContracts": [
							1415
						],
						"Ownable": [
							147
						]
					},
					"id": 1416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MtkContracts",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415
							],
							"name": "MtkContracts",
							"nameLocation": "177:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MtkContracts.Stake",
									"id": 950,
									"members": [
										{
											"constant": false,
											"id": 939,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "229:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "221:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "221:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "278:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "270:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 940,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "270:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "333:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "325:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "325:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "rewardRate",
											"nameLocation": "388:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "380:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 944,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "380:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "455:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "450:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 946,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "450:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "stakeIndex",
											"nameLocation": "513:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "505:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "205:5:6",
									"nodeType": "StructDefinition",
									"scope": 1415,
									"src": "198:332:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MtkContracts.timeMapping",
									"id": 955,
									"members": [
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "periodDays",
											"nameLocation": "573:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 955,
											"src": "565:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "565:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "601:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 955,
											"src": "593:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "593:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "timeMapping",
									"nameLocation": "543:11:6",
									"nodeType": "StructDefinition",
									"scope": 1415,
									"src": "536:76:6",
									"visibility": "public"
								},
								{
									"canonicalName": "MtkContracts.StakingPeriod",
									"id": 960,
									"members": [
										{
											"id": 956,
											"name": "ThirtyDays",
											"nameLocation": "648:10:6",
											"nodeType": "EnumValue",
											"src": "648:10:6"
										},
										{
											"id": 957,
											"name": "NinetyDays",
											"nameLocation": "668:10:6",
											"nodeType": "EnumValue",
											"src": "668:10:6"
										},
										{
											"id": 958,
											"name": "HundredEightyDays",
											"nameLocation": "689:17:6",
											"nodeType": "EnumValue",
											"src": "689:17:6"
										},
										{
											"id": 959,
											"name": "OneYear",
											"nameLocation": "717:7:6",
											"nodeType": "EnumValue",
											"src": "717:7:6"
										}
									],
									"name": "StakingPeriod",
									"nameLocation": "623:13:6",
									"nodeType": "EnumDefinition",
									"src": "618:112:6"
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 963,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "754:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "740:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 962,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 961,
											"name": "IERC20",
											"nameLocations": [
												"740:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "740:6:6"
										},
										"referencedDeclaration": 877,
										"src": "740:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f1accb2",
									"id": 968,
									"mutability": "mutable",
									"name": "apy",
									"nameLocation": "815:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "774:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
										"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 967,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "StakingPeriod",
												"nameLocations": [
													"782:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "782:13:6"
											},
											"referencedDeclaration": 960,
											"src": "782:13:6",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$960",
												"typeString": "enum MtkContracts.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "774:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
											"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 966,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "799:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5d5b5fa",
									"id": 975,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "926:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "875:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct MtkContracts.Stake))"
									},
									"typeName": {
										"id": 974,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 969,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "883:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "875:43:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct MtkContracts.Stake))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 973,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 970,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "902:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "894:23:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$",
												"typeString": "mapping(uint256 => struct MtkContracts.Stake)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 972,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 971,
													"name": "Stake",
													"nameLocations": [
														"911:5:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 950,
													"src": "911:5:6"
												},
												"referencedDeclaration": 950,
												"src": "911:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
													"typeString": "struct MtkContracts.Stake"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "762e54fc",
									"id": 979,
									"mutability": "mutable",
									"name": "nextStakeId",
									"nameLocation": "1008:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "973:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 978,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 976,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 977,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "992:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a57a5304",
									"id": 983,
									"mutability": "mutable",
									"name": "stakeOwnerMapping",
									"nameLocation": "1077:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1044:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 982,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 980,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1052:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1044:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 981,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1061:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c86259e",
									"id": 986,
									"mutability": "mutable",
									"name": "stakeList",
									"nameLocation": "1118:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1101:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 984,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 985,
										"nodeType": "ArrayTypeName",
										"src": "1101:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4a9e116",
									"id": 988,
									"mutability": "mutable",
									"name": "stakeCount",
									"nameLocation": "1148:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1133:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1133:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 990,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1181:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1165:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 989,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1165:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "022dd619ee0d92140e5abde105761d6df71c05c4fcb761610ea0552064f91e6c",
									"id": 1003,
									"name": "Staked",
									"nameLocation": "1199:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1231:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1215:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1253:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1245:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1283:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1269:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$960",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 995,
														"name": "StakingPeriod",
														"nameLocations": [
															"1269:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 960,
														"src": "1269:13:6"
													},
													"referencedDeclaration": 960,
													"src": "1269:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$960",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1307:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1299:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1334:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1326:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:145:6"
									},
									"src": "1193:158:6"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 1011,
									"name": "Withdrawn",
									"nameLocation": "1363:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1398:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1382:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "1420:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1412:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1449:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1441:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:93:6"
									},
									"src": "1357:109:6"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1517:291:6",
										"statements": [
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1528:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1018,
														"name": "_mtkToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "1541:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														}
													},
													"src": "1528:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1528:22:6"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1021,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1561:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1024,
														"indexExpression": {
															"expression": {
																"id": 1022,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1565:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1579:10:6",
															"memberName": "ThirtyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 956,
															"src": "1565:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1561:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1593:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1561:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "1561:34:6"
											},
											{
												"expression": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1028,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1621:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1031,
														"indexExpression": {
															"expression": {
																"id": 1029,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1625:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1639:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "1625:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1621:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3135",
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1653:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1621:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "1621:34:6"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1035,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1681:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"expression": {
																"id": 1036,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1685:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1699:17:6",
															"memberName": "HundredEightyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 958,
															"src": "1685:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1681:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1720:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "1681:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "1681:41:6"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1042,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1751:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
																"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
															}
														},
														"id": 1045,
														"indexExpression": {
															"expression": {
																"id": 1043,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "1755:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1769:7:6",
															"memberName": "OneYear",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 959,
															"src": "1755:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1751:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3235",
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1780:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_25_by_1",
															"typeString": "int_const 25"
														},
														"value": "25"
													},
													"src": "1751:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1751:31:6"
											}
										]
									},
									"id": 1050,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_mtkToken",
												"nameLocation": "1500:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1493:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1012,
														"name": "IERC20",
														"nameLocations": [
															"1493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "1493:6:6"
													},
													"referencedDeclaration": 877,
													"src": "1493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:32:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:6"
									},
									"scope": 1415,
									"src": "1472:336:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "1878:1137:6",
										"statements": [
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "amountWei",
														"nameLocation": "1896:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "1888:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1888:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1906:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1913:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1917:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "1913:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1906:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1888:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "1937:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1944:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1937:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c6420626520706f736974697665",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																"typeString": "literal_string \"Amount should be positive\""
															},
															"value": "Amount should be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52a9773052dad3c81baba25d8c4f93ea36d1e7cebf31be67f06af89bd026b0ce",
																"typeString": "literal_string \"Amount should be positive\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1929:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1929:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1076,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2016:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2020:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2016:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1074,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "1993:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2006:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 834,
																	"src": "1993:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1993:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1079,
																"name": "amountWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "2029:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1993:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "1985:78:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1087,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2107:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2111:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2107:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1091,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2127:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MtkContracts_$1415",
																				"typeString": "contract MtkContracts"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MtkContracts_$1415",
																				"typeString": "contract MtkContracts"
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2119:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1089,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2119:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2119:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1093,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "2134:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1085,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "2081:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$877",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2094:12:6",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 876,
																"src": "2081:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:60:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a205472616e73666572206661696c6564",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2142:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e",
																"typeString": "literal_string \"Staking: Transfer failed\""
															},
															"value": "Staking: Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61aa5df094ef0aecbed579328d85585348ddbe8afe567117d7f2f86be9771e0e",
																"typeString": "literal_string \"Staking: Transfer failed\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2073:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2073:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "2073:96:6"
											},
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "durMapping",
														"nameLocation": "2207:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2188:29:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
															"typeString": "struct MtkContracts.timeMapping"
														},
														"typeName": {
															"id": 1099,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1098,
																"name": "timeMapping",
																"nameLocations": [
																	"2188:11:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 955,
																"src": "2188:11:6"
															},
															"referencedDeclaration": 955,
															"src": "2188:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_timeMapping_$955_storage_ptr",
																"typeString": "struct MtkContracts.timeMapping"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2233:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														],
														"id": 1101,
														"name": "_getDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "2220:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_StakingPeriod_$960_$returns$_t_struct$_timeMapping_$955_memory_ptr_$",
															"typeString": "function (enum MtkContracts.StakingPeriod) pure returns (struct MtkContracts.timeMapping memory)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
														"typeString": "struct MtkContracts.timeMapping memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2188:52:6"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "dur",
														"nameLocation": "2258:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2250:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2250:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"expression": {
														"id": 1107,
														"name": "durMapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "2262:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
															"typeString": "struct MtkContracts.timeMapping memory"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2273:4:6",
													"memberName": "time",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 954,
													"src": "2262:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2250:27:6"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "periodDays",
														"nameLocation": "2295:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2287:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2287:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"expression": {
														"id": 1112,
														"name": "durMapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "2306:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
															"typeString": "struct MtkContracts.timeMapping memory"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2317:10:6",
													"memberName": "periodDays",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 952,
													"src": "2306:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:40:6"
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "startT",
														"nameLocation": "2345:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2337:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"expression": {
														"id": 1117,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2352:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2358:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2352:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2337:30:6"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "endT",
														"nameLocation": "2385:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2377:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2377:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "startT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "2391:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1123,
														"name": "dur",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "2400:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2391:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2377:26:6"
											},
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "2421:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2413:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2413:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2428:25:6",
													"subExpression": {
														"baseExpression": {
															"id": 1128,
															"name": "nextStakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "2428:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1131,
														"indexExpression": {
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2440:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2444:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2440:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2428:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2413:40:6"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "2471:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1189,
														"src": "2463:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2463:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1136,
																	"name": "apy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "2476:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$960_$_t_uint256_$",
																		"typeString": "mapping(enum MtkContracts.StakingPeriod => uint256)"
																	}
																},
																"id": 1138,
																"indexExpression": {
																	"id": 1137,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2480:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$960",
																		"typeString": "enum MtkContracts.StakingPeriod"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2476:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1139,
																"name": "periodDays",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "2488:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2476:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2499:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2503:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "2499:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "2476:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333630",
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2506:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_360_by_1",
															"typeString": "int_const 360"
														},
														"value": "360"
													},
													"src": "2476:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2463:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2532:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2536:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2532:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2544:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1152,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2552:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														{
															"id": 1153,
															"name": "endT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2560:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1154,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2565:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "2525:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$960_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum MtkContracts.StakingPeriod,uint256,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2525:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "EmitStatement",
												"src": "2520:51:6"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1157,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "2582:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct MtkContracts.Stake storage ref))"
																}
															},
															"id": 1161,
															"indexExpression": {
																"expression": {
																	"id": 1158,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2593:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2597:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2593:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2582:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$",
																"typeString": "mapping(uint256 => struct MtkContracts.Stake storage ref)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1160,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2605:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2582:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$950_storage",
															"typeString": "struct MtkContracts.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1164,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "2639:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1165,
																"name": "startT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "2669:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1166,
																"name": "endT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "2697:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1167,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "2756:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2824:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 1169,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "2885:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1163,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2612:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$950_storage_ptr_$",
																"typeString": "type(struct MtkContracts.Stake storage pointer)"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2632:6:6",
															"2659:9:6",
															"2689:7:6",
															"2745:10:6",
															"2815:8:6",
															"2874:10:6"
														],
														"names": [
															"amount",
															"startTime",
															"endTime",
															"rewardRate",
															"isActive",
															"stakeIndex"
														],
														"nodeType": "FunctionCall",
														"src": "2612:289:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$950_memory_ptr",
															"typeString": "struct MtkContracts.Stake memory"
														}
													},
													"src": "2582:319:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$950_storage",
														"typeString": "struct MtkContracts.Stake storage ref"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "2582:319:6"
											},
											{
												"expression": {
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1173,
															"name": "stakeOwnerMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2911:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1175,
														"indexExpression": {
															"id": 1174,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2929:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2911:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1176,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2936:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2940:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2936:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2911:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "2911:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1183,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2971:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1180,
															"name": "stakeList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2956:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2966:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2956:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2956:21:6"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2987:12:6",
													"subExpression": {
														"id": 1186,
														"name": "stakeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2987:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "2987:12:6"
											}
										]
									},
									"functionSelector": "10087fb1",
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1825:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1839:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1831:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "1861:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1847:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$960",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 1054,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1053,
														"name": "StakingPeriod",
														"nameLocations": [
															"1847:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 960,
														"src": "1847:13:6"
													},
													"referencedDeclaration": 960,
													"src": "1847:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$960",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1830:38:6"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:6"
									},
									"scope": 1415,
									"src": "1816:1199:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "3155:797:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_StakingPeriod_$960",
														"typeString": "enum MtkContracts.StakingPeriod"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3169:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$960",
															"typeString": "enum MtkContracts.StakingPeriod"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1200,
															"name": "StakingPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "3177:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																"typeString": "type(enum MtkContracts.StakingPeriod)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3191:10:6",
														"memberName": "ThirtyDays",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "3177:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$960",
															"typeString": "enum MtkContracts.StakingPeriod"
														}
													},
													"src": "3169:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_StakingPeriod_$960",
															"typeString": "enum MtkContracts.StakingPeriod"
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1209,
															"name": "period",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "3332:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1210,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "3340:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																	"typeString": "type(enum MtkContracts.StakingPeriod)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3354:10:6",
															"memberName": "NinetyDays",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "3340:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															}
														},
														"src": "3332:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_StakingPeriod_$960",
																"typeString": "enum MtkContracts.StakingPeriod"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1219,
																"name": "period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "3495:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$960",
																	"typeString": "enum MtkContracts.StakingPeriod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1220,
																	"name": "StakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "3503:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																		"typeString": "type(enum MtkContracts.StakingPeriod)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3517:17:6",
																"memberName": "HundredEightyDays",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 958,
																"src": "3503:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$960",
																	"typeString": "enum MtkContracts.StakingPeriod"
																}
															},
															"src": "3495:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$960",
																	"typeString": "enum MtkContracts.StakingPeriod"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1229,
																	"name": "period",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "3666:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$960",
																		"typeString": "enum MtkContracts.StakingPeriod"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1230,
																		"name": "StakingPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "3674:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$960_$",
																			"typeString": "type(enum MtkContracts.StakingPeriod)"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3688:7:6",
																	"memberName": "OneYear",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 959,
																	"src": "3674:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$960",
																		"typeString": "enum MtkContracts.StakingPeriod"
																	}
																},
																"src": "3666:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1244,
																"nodeType": "Block",
																"src": "3824:121:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "333630",
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3886:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					"value": "360"
																				},
																				{
																					"hexValue": "31",
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3912:7:6",
																					"subdenomination": "hours",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3600_by_1",
																						"typeString": "int_const 3600"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					{
																						"typeIdentifier": "t_rational_3600_by_1",
																						"typeString": "int_const 3600"
																					}
																				],
																				"id": 1239,
																				"name": "timeMapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "3845:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_timeMapping_$955_storage_ptr_$",
																					"typeString": "type(struct MtkContracts.timeMapping storage pointer)"
																				}
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"3875:10:6",
																				"3907:4:6"
																			],
																			"names": [
																				"periodDays",
																				"time"
																			],
																			"nodeType": "FunctionCall",
																			"src": "3845:89:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
																				"typeString": "struct MtkContracts.timeMapping memory"
																			}
																		},
																		"functionReturnParameters": 1198,
																		"id": 1243,
																		"nodeType": "Return",
																		"src": "3838:96:6"
																	}
																]
															},
															"id": 1245,
															"nodeType": "IfStatement",
															"src": "3663:282:6",
															"trueBody": {
																"id": 1238,
																"nodeType": "Block",
																"src": "3696:124:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "333630",
																					"id": 1234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3758:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					"value": "360"
																				},
																				{
																					"hexValue": "3130",
																					"id": 1235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3784:10:6",
																					"subdenomination": "minutes",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_600_by_1",
																						"typeString": "int_const 600"
																					},
																					"value": "10"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_360_by_1",
																						"typeString": "int_const 360"
																					},
																					{
																						"typeIdentifier": "t_rational_600_by_1",
																						"typeString": "int_const 600"
																					}
																				],
																				"id": 1233,
																				"name": "timeMapping",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "3717:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_timeMapping_$955_storage_ptr_$",
																					"typeString": "type(struct MtkContracts.timeMapping storage pointer)"
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [
																				"3747:10:6",
																				"3779:4:6"
																			],
																			"names": [
																				"periodDays",
																				"time"
																			],
																			"nodeType": "FunctionCall",
																			"src": "3717:92:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
																				"typeString": "struct MtkContracts.timeMapping memory"
																			}
																		},
																		"functionReturnParameters": 1198,
																		"id": 1237,
																		"nodeType": "Return",
																		"src": "3710:99:6"
																	}
																]
															}
														},
														"id": 1246,
														"nodeType": "IfStatement",
														"src": "3492:453:6",
														"trueBody": {
															"id": 1228,
															"nodeType": "Block",
															"src": "3535:123:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313830",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3597:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_180_by_1",
																					"typeString": "int_const 180"
																				},
																				"value": "180"
																			},
																			{
																				"hexValue": "35",
																				"id": 1225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3623:9:6",
																				"subdenomination": "minutes",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_300_by_1",
																					"typeString": "int_const 300"
																				},
																				"value": "5"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_180_by_1",
																					"typeString": "int_const 180"
																				},
																				{
																					"typeIdentifier": "t_rational_300_by_1",
																					"typeString": "int_const 300"
																				}
																			],
																			"id": 1223,
																			"name": "timeMapping",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "3556:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_timeMapping_$955_storage_ptr_$",
																				"typeString": "type(struct MtkContracts.timeMapping storage pointer)"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"3586:10:6",
																			"3618:4:6"
																		],
																		"names": [
																			"periodDays",
																			"time"
																		],
																		"nodeType": "FunctionCall",
																		"src": "3556:91:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
																			"typeString": "struct MtkContracts.timeMapping memory"
																		}
																	},
																	"functionReturnParameters": 1198,
																	"id": 1227,
																	"nodeType": "Return",
																	"src": "3549:98:6"
																}
															]
														}
													},
													"id": 1247,
													"nodeType": "IfStatement",
													"src": "3329:616:6",
													"trueBody": {
														"id": 1218,
														"nodeType": "Block",
														"src": "3365:122:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "3930",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3427:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_90_by_1",
																				"typeString": "int_const 90"
																			},
																			"value": "90"
																		},
																		{
																			"hexValue": "33",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3452:9:6",
																			"subdenomination": "minutes",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_180_by_1",
																				"typeString": "int_const 180"
																			},
																			"value": "3"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_90_by_1",
																				"typeString": "int_const 90"
																			},
																			{
																				"typeIdentifier": "t_rational_180_by_1",
																				"typeString": "int_const 180"
																			}
																		],
																		"id": 1213,
																		"name": "timeMapping",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "3386:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_timeMapping_$955_storage_ptr_$",
																			"typeString": "type(struct MtkContracts.timeMapping storage pointer)"
																		}
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"3416:10:6",
																		"3447:4:6"
																	],
																	"names": [
																		"periodDays",
																		"time"
																	],
																	"nodeType": "FunctionCall",
																	"src": "3386:90:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
																		"typeString": "struct MtkContracts.timeMapping memory"
																	}
																},
																"functionReturnParameters": 1198,
																"id": 1217,
																"nodeType": "Return",
																"src": "3379:97:6"
															}
														]
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "3166:779:6",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "3202:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "3330",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3264:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		"value": "30"
																	},
																	{
																		"hexValue": "31",
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3289:9:6",
																		"subdenomination": "minutes",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_30_by_1",
																			"typeString": "int_const 30"
																		},
																		{
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		}
																	],
																	"id": 1203,
																	"name": "timeMapping",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3223:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_timeMapping_$955_storage_ptr_$",
																		"typeString": "type(struct MtkContracts.timeMapping storage pointer)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"nameLocations": [
																	"3253:10:6",
																	"3284:4:6"
																],
																"names": [
																	"periodDays",
																	"time"
																],
																"nodeType": "FunctionCall",
																"src": "3223:90:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
																	"typeString": "struct MtkContracts.timeMapping memory"
																}
															},
															"functionReturnParameters": 1198,
															"id": 1207,
															"nodeType": "Return",
															"src": "3216:97:6"
														}
													]
												}
											}
										]
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDuration",
									"nameLocation": "3077:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "period",
												"nameLocation": "3104:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3090:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$960",
													"typeString": "enum MtkContracts.StakingPeriod"
												},
												"typeName": {
													"id": 1192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1191,
														"name": "StakingPeriod",
														"nameLocations": [
															"3090:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 960,
														"src": "3090:13:6"
													},
													"referencedDeclaration": 960,
													"src": "3090:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$960",
														"typeString": "enum MtkContracts.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:22:6"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3135:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_timeMapping_$955_memory_ptr",
													"typeString": "struct MtkContracts.timeMapping"
												},
												"typeName": {
													"id": 1196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1195,
														"name": "timeMapping",
														"nameLocations": [
															"3135:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 955,
														"src": "3135:11:6"
													},
													"referencedDeclaration": 955,
													"src": "3135:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_timeMapping_$955_storage_ptr",
														"typeString": "struct MtkContracts.timeMapping"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:20:6"
									},
									"scope": 1415,
									"src": "3068:884:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "4005:524:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1256,
																	"name": "stakeOwnerMapping",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "4023:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1258,
																"indexExpression": {
																	"id": 1257,
																	"name": "stakeIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "4041:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4023:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1259,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4054:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4058:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4054:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4023:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f662074686973207374616b65",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4066:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217",
																"typeString": "literal_string \"You are not the owner of this stake\""
															},
															"value": "You are not the owner of this stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42aa328ebfe73aee0e0d0819ec7417530d3f184027bd190bbdfde00d047a7217",
																"typeString": "literal_string \"You are not the owner of this stake\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4015:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4015:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "4015:89:6"
											},
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4129:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "4115:15:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
															"typeString": "struct MtkContracts.Stake"
														},
														"typeName": {
															"id": 1266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1265,
																"name": "Stake",
																"nameLocations": [
																	"4115:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 950,
																"src": "4115:5:6"
															},
															"referencedDeclaration": 950,
															"src": "4115:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																"typeString": "struct MtkContracts.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1268,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4133:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MtkContracts.Stake storage ref))"
															}
														},
														"id": 1271,
														"indexExpression": {
															"expression": {
																"id": 1269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4144:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4148:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4144:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4133:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$",
															"typeString": "mapping(uint256 => struct MtkContracts.Stake storage ref)"
														}
													},
													"id": 1273,
													"indexExpression": {
														"id": 1272,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "4156:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4133:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$950_storage",
														"typeString": "struct MtkContracts.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4115:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1276,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "4193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																	"typeString": "struct MtkContracts.Stake storage pointer"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4195:8:6",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "4193:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206973206e6f7420616374697665206f7220616c72656164792077697468647261776e",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4205:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																"typeString": "literal_string \"Stake is not active or already withdrawn\""
															},
															"value": "Stake is not active or already withdrawn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b2e818a289073715dc5f99730b58e8253ccd2fcd46c7bc602664e6f2b6784e1",
																"typeString": "literal_string \"Stake is not active or already withdrawn\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4185:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4185:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "4185:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1282,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4266:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4272:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4266:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1284,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "4285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4287:7:6",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "4285:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4266:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520706572696f64206973206e6f7420656e646564",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4296:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																"typeString": "literal_string \"Stake period is not ended\""
															},
															"value": "Stake period is not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c9b1609591726dabe94b221c2fad975be5578fbca027b6b90585fe65ea2a9dd",
																"typeString": "literal_string \"Stake period is not ended\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4258:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "4258:66:6"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4351:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "4343:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1290,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4343:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1292,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "4358:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4360:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "4358:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1294,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "4367:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4369:10:6",
																"memberName": "rewardRate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "4367:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4358:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4380:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "4358:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4384:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4389:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "4384:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "4358:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4343:48:6"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "4409:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "4401:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4401:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1306,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4421:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																"typeString": "struct MtkContracts.Stake storage pointer"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4423:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "4421:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1308,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "4430:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4421:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4401:35:6"
											},
											{
												"expression": {
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1311,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4446:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																"typeString": "struct MtkContracts.Stake storage pointer"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4448:8:6",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "4446:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4457:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4446:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "4446:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4488:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4492:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4488:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "4499:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1321,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "4511:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "4478:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4478:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "EmitStatement",
												"src": "4473:49:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3967:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3984:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "3976:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:20:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4005:0:6"
									},
									"scope": 1415,
									"src": "3958:571:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "4621:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1335,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4673:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4679:9:6",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4673:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1337,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4690:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4694:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4690:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4702:7:6",
																			"subExpression": {
																				"id": 1339,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "4702:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1333,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "4656:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4660:12:6",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "4656:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4656:54:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1332,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4646:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4646:65:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4638:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4638:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4638:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1329,
												"id": 1344,
												"nodeType": "Return",
												"src": "4631:81:6"
											}
										]
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateStakeId",
									"nameLocation": "4575:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4591:2:6"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "4612:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:9:6"
									},
									"scope": 1415,
									"src": "4566:153:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "4852:422:6",
										"statements": [
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "activeStakes",
														"nameLocation": "4884:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "4869:27:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MtkContracts.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 1357,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1356,
																	"name": "Stake",
																	"nameLocations": [
																		"4869:5:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 950,
																	"src": "4869:5:6"
																},
																"referencedDeclaration": 950,
																"src": "4869:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																	"typeString": "struct MtkContracts.Stake"
																}
															},
															"id": 1358,
															"nodeType": "ArrayTypeName",
															"src": "4869:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$950_storage_$dyn_storage_ptr",
																"typeString": "struct MtkContracts.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [
														{
															"id": 1364,
															"name": "stakeCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "4911:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4899:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MtkContracts.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1361,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1360,
																	"name": "Stake",
																	"nameLocations": [
																		"4903:5:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 950,
																	"src": "4903:5:6"
																},
																"referencedDeclaration": 950,
																"src": "4903:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																	"typeString": "struct MtkContracts.Stake"
																}
															},
															"id": 1362,
															"nodeType": "ArrayTypeName",
															"src": "4903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$950_storage_$dyn_storage_ptr",
																"typeString": "struct MtkContracts.Stake[]"
															}
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4899:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MtkContracts.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4869:53:6"
											},
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "activeIndex",
														"nameLocation": "4940:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "4932:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4932:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"hexValue": "30",
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4932:21:6"
											},
											{
												"body": {
													"id": 1409,
													"nodeType": "Block",
													"src": "5004:226:6",
													"statements": [
														{
															"assignments": [
																1382
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1382,
																	"mutability": "mutable",
																	"name": "index",
																	"nameLocation": "5026:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1409,
																	"src": "5018:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1381,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5018:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1386,
															"initialValue": {
																"baseExpression": {
																	"id": 1383,
																	"name": "stakeList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "5032:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1385,
																"indexExpression": {
																	"id": 1384,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "5042:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5032:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5018:26:6"
														},
														{
															"assignments": [
																1389
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1389,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "5072:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1409,
																	"src": "5058:15:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																		"typeString": "struct MtkContracts.Stake"
																	},
																	"typeName": {
																		"id": 1388,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1387,
																			"name": "Stake",
																			"nameLocations": [
																				"5058:5:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 950,
																			"src": "5058:5:6"
																		},
																		"referencedDeclaration": 950,
																		"src": "5058:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																			"typeString": "struct MtkContracts.Stake"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1395,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1390,
																		"name": "userStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "5076:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct MtkContracts.Stake storage ref))"
																		}
																	},
																	"id": 1392,
																	"indexExpression": {
																		"id": 1391,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "5087:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$950_storage_$",
																		"typeString": "mapping(uint256 => struct MtkContracts.Stake storage ref)"
																	}
																},
																"id": 1394,
																"indexExpression": {
																	"id": 1393,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "5093:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5076:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$950_storage",
																	"typeString": "struct MtkContracts.Stake storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5058:41:6"
														},
														{
															"condition": {
																"expression": {
																	"id": 1396,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "5117:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																		"typeString": "struct MtkContracts.Stake storage pointer"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5119:8:6",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "5117:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1408,
															"nodeType": "IfStatement",
															"src": "5113:107:6",
															"trueBody": {
																"id": 1407,
																"nodeType": "Block",
																"src": "5129:91:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1398,
																					"name": "activeStakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "5147:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct MtkContracts.Stake memory[] memory"
																					}
																				},
																				"id": 1400,
																				"indexExpression": {
																					"id": 1399,
																					"name": "activeIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1368,
																					"src": "5160:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5147:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$950_memory_ptr",
																					"typeString": "struct MtkContracts.Stake memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1401,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1389,
																				"src": "5173:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
																					"typeString": "struct MtkContracts.Stake storage pointer"
																				}
																			},
																			"src": "5147:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$950_memory_ptr",
																				"typeString": "struct MtkContracts.Stake memory"
																			}
																		},
																		"id": 1403,
																		"nodeType": "ExpressionStatement",
																		"src": "5147:27:6"
																	},
																	{
																		"expression": {
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5192:13:6",
																			"subExpression": {
																				"id": 1404,
																				"name": "activeIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1368,
																				"src": "5192:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1406,
																		"nodeType": "ExpressionStatement",
																		"src": "5192:13:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4983:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1376,
														"name": "stakeCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4987:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4983:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1410,
												"initializationExpression": {
													"assignments": [
														1372
													],
													"declarations": [
														{
															"constant": false,
															"id": 1372,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4976:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1410,
															"src": "4968:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1371,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4968:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1374,
													"initialValue": {
														"hexValue": "30",
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4980:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4968:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4999:3:6",
														"subExpression": {
															"id": 1378,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "4999:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1380,
													"nodeType": "ExpressionStatement",
													"src": "4999:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4963:267:6"
											},
											{
												"expression": {
													"id": 1411,
													"name": "activeStakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1359,
													"src": "5255:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MtkContracts.Stake memory[] memory"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1412,
												"nodeType": "Return",
												"src": "5248:19:6"
											}
										]
									},
									"functionSelector": "a262ab35",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserActiveStakes",
									"nameLocation": "4779:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4807:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "4799:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4798:14:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "4836:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$950_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MtkContracts.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 1351,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1350,
															"name": "Stake",
															"nameLocations": [
																"4836:5:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 950,
															"src": "4836:5:6"
														},
														"referencedDeclaration": 950,
														"src": "4836:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$950_storage_ptr",
															"typeString": "struct MtkContracts.Stake"
														}
													},
													"id": 1352,
													"nodeType": "ArrayTypeName",
													"src": "4836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$950_storage_$dyn_storage_ptr",
														"typeString": "struct MtkContracts.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:16:6"
									},
									"scope": 1415,
									"src": "4770:504:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1416,
							"src": "168:5113:6",
							"usedErrors": [],
							"usedEvents": [
								1003,
								1011
							]
						}
					],
					"src": "32:5249:6"
				},
				"id": 6
			}
		}
	}
}